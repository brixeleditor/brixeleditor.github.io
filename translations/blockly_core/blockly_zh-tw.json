{
  "mainTitle": "🚀 Brixel MCU 網路開發環境",
  "blockModeBtn": "積木程式",
  "textModeBtn": "文字程式",
  "compileBtn": "⚙️ 編譯程式",
  "uploadBtn": "📤 上傳到開發板",
  "blocklyHeaderTitle": "🧩 積木程式編輯器",
  "codeTitle": "📄 即時 Arduino C++ 程式碼",
  "codeTitle_textMode": "📝 Arduino C++ 程式碼編輯器",
  "copyBtn": "📋 複製",
  "codePreview_initial": "// 將積木放在此處以生成程式碼。",
  "sectionTitleLanguage": "🌍 語言與檔案管理",
  "labelLanguage": "語言:",
  "langKo": "한국어",
  "langEn": "English",
  "langJa": "日本語",
  "langZh": "中文",
  "langEs": "Español",
  "languageStatus_official": "✓ 官方支援",
  "languageStatus_browser": "🌍 瀏覽器翻譯",
  "labelFilename": "檔案名稱:",
  "fileNameInput_placeholder": "arduino_專案",
  "saveBtn": "💾 儲存",
  "loadBtn": "📂 載入",
  "sectionTitleAgent": "🤖 輸入電腦代理程式碼",
  "agentIdInput_placeholder": "電腦代理程式配對碼",
  "sectionTitleBoard": "🎯 選擇開發板",
  "boardGroupArduino_label": "🔵 Arduino 家族",
  "boardUno": "Arduino Uno",
  "boardNano": "Arduino Nano",
  "boardMega": "Arduino Mega",
  "boardGroupEsp32_label": "🔴 ESP32 家族",
  "boardEsp32": "ESP32",
  "boardEsp32s2": "ESP32-S2",
  "boardEsp32c3": "ESP32-C3",
  "boardEsp32s3": "ESP32-S3",
  "boardGroupPico_label": "🟣 Raspberry Pi",
  "boardPico": "Raspberry Pi Pico",
  "boardPicow": "Raspberry Pi Pico W",
  "sectionTitlePort": "🔌 上傳連接埠",
  "portAutoSelect": "自動選擇連接埠",
  "refreshPortsBtn_title": "重新整理連接埠清單",
  "sectionTitleDownload": "⬇️ 下載代理程式",
  "agentOsWin": "適用於 Windows",
  "agentOsMac": "適用於 macOS",
  "agentOsLinux": "適用於 Linux",
  "downloadAgentBtn_title": "下載代理程式",
  "consoleHeader": "📺 即時日誌",
  "loadingText": "正在初始化系統...",
  "loadingText_en": "Initializing system...",
  "loadingText_ja": "システム初期化中...",
  "loadingText_zh": "系统初始化中...",
  "loadingText_es": "Inicializando sistema...",
  "js_alert_downloadAgent": "正在為 {osName} 下載 Arduino 代理程式。\n在實際應用中，會下載對應作業系統的安裝程式。",
  "js_log_downloadRequest": "請求下載 {osName} 的代理程式",
  "js_log_modeSwitch": "已切換模式: {modeName}",
  "js_log_modeBlock": "積木程式",
  "js_log_modeText": "文字程式",
  "js_log_codeCopiedSuccess": "✅ 程式碼已複製到剪貼簿。",
  "js_log_codeCopiedFail": "⚠ 複製程式碼失敗。",
  "js_log_blockFileSaved": "✅ 積木檔案已儲存: {fileName}",
  "js_log_blockFileSaveFail": "⚠ 儲存積木檔案失敗。",
  "js_log_sketchFileSaved": "✅ 草稿碼檔案已儲存: {fileName}",
  "js_log_sketchFileSaveFail": "⚠ 儲存草稿碼檔案失敗。",
  "js_log_blockFileLoaded": "✅ 積木檔案已載入: {fileName}",
  "js_log_sketchFileLoaded": "✅ 草稿碼檔案已載入: {fileName}",
  "js_log_fileLoadFail": "⚠ 載入檔案失敗: {errorMsg}",
  "js_log_compileStart": "---",
  "js_log_compileStart_mode": "開始編譯 ({modeName} 模式)",
  "js_log_noCodeToCompile": "⚠ 沒有可編譯的程式碼。",
  "js_log_compileComplete": "✅ 編譯完成 - 大小: {size}",
  "js_log_compileFail": "⚠ 編譯失敗: {errorMsg}",
  "js_log_compileRequestFail": "⚠ 編譯請求失敗: {errorMsg}",
  "js_log_uploadPreCompile": "⚠ 請先編譯程式碼。",
  "js_log_uploadNoAgentId": "⚠ 請輸入代理程式 ID。",
  "js_log_uploadRequestSent": "📤 已傳送上傳請求...",
  "js_log_uploadRequestFail": "⚠ 上傳請求失敗: {errorMsg}",
  "js_log_requestingPorts": "🔍 正在向代理程式 ({agentId}) 請求連接埠清單...",
  "js_log_portListUpdated": "✅ 連接埠清單已更新。(找到 {portCount} 個連接埠)",
  "js_log_serverConnected": "🔗 已連接到伺服器。",
  "js_log_serverError": "⚠ 伺服器連線錯誤。",
  "js_log_langChanged": "語言已變更為 {lang}。",
  "js_log_langChangeFail": "變更語言失敗: {errorMsg}",
  "js_log_initFail": "⚠ 系統初始化失敗。",
  "template_arduino": "void setup() {\n  pinMode(13, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(13, HIGH);\n  delay(500);\n  digitalWrite(13, LOW);\n  delay(500);\n}",
  "template_esp32": "void setup() {\n  pinMode(2, OUTPUT); // 內建 LED\n  Serial.begin(115200);\n  Serial.println(\"ESP32 start!\");\n}\n\nvoid loop() {\n  digitalWrite(2, HIGH);\n  delay(1000);\n  digitalWrite(2, LOW);\n  delay(1000);\n}",
  "template_pico": "void setup() {\n  pinMode(LED_BUILTIN, OUTPUT);\n  Serial.begin(115200);\n  Serial.println(\"Raspberry Pi Pico start!\");\n}\n\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);\n  delay(500);\n  digitalWrite(LED_BUILTIN, LOW);\n  delay(500);\n}",
  "ARDUINO_SETUP": "Arduino 設定",
  "ARDUINO_LOOP": "Arduino 迴圈",
  "ARDUINO_DIGITAL_WRITE": "數位寫入 %1 腳位 %2",
  "ARDUINO_DIGITAL_READ": "數位讀取 %1 腳位",
  "ARDUINO_ANALOG_WRITE": "類比寫入 %1 腳位 %2",
  "ARDUINO_ANALOG_READ": "類比讀取 %1 腳位",
  "ARDUINO_DELAY": "延遲 %1 毫秒",
  "ARDUINO_SERIAL_BEGIN": "啟動序列埠於 %1 鮑率",
  "ARDUINO_SERIAL_PRINT": "列印 %1 到序列埠",
  "SENSOR_ULTRASONIC": "超音波感測器距離",
  "SENSOR_TEMPERATURE": "溫度感測器值",
  "SENSOR_LIGHT": "光線感測器值",
  "SENSOR_BUTTON": "按鈕 %1 腳位狀態",
  "ACTUATOR_LED": "LED %1 腳位 %2",
  "ACTUATOR_SERVO": "伺服馬達 %1 腳位旋轉至 %2 度",
  "ACTUATOR_BUZZER": "蜂鳴器 %1 腳位聲音 %2",
  "ACTUATOR_MOTOR": "馬達 %1 腳位速度 %2",
  "PIN_HIGH": "高電位",
  "PIN_LOW": "低電位",
  "PIN_NUMBER": "腳位編號",
  "PIN_VALUE": "值",
  "MILLISECONDS": "毫秒",
  "BKY_PAGE_TITLE": "MCU 積木程式網路編輯器",
  "BKY_ARDUINO_REALTIME_CODE": "即時 Arduino C++ 程式碼",
  "BKY_COPY_BUTTON": "複製",
  "BKY_LANGUAGE_LABEL": "語言:",
  "BKY_SAVE_BUTTON": "儲存",
  "BKY_LOAD_BUTTON": "載入",
  "BKY_FILE_NAME_PLACEHOLDER": "檔案名稱",
  "BKY_ALERT_SAVE_FAILED": "積木儲存失敗",
  "BKY_ALERT_LOAD_FAILED": "無效的積木檔案或檔案已損壞",
  "BKY_CATEGORY_MAIN": "🎯 主要",
  "BKY_CATEGORY_PIN_CONTROL": "📌 腳位控制",
  "BKY_CATEGORY_CONTROL": "🔄 控制",
  "BKY_CATEGORY_LOGIC": "🔧 邏輯",
  "BKY_CATEGORY_MATH": "🔢 數學",
  "BKY_CATEGORY_TEXT": "📜 文字",
  "BKY_CATEGORY_COLOR": "🎨 顏色",
  "BKY_CATEGORY_VARIABLES": "📦 變數",
  "BKY_CATEGORY_FUNCTIONS": "⚡ 函數",
  "BKY_CATEGORY_DISPLAY_A": "📺 A.顯示器",
  "BKY_CATEGORY_DISPLAY_B": "📺 B.進階顯示器",
  "BKY_CATEGORY_SENSORS_A": "🌡️ A.通用感測器",
  "BKY_CATEGORY_SENSORS_B": "🛰️ B.進階感測器",
  "BKY_CATEGORY_MOTOR": "⚙️ 馬達",
  "BKY_CATEGORY_OUTPUT": "💡 輸出裝置",
  "BKY_CATEGORY_COMM": "📶 通訊",
  "BKY_CATEGORY_SERIAL": "📡 序列通訊",
  "BKY_CATEGORY_UTIL": "🛠️ 工具",
  "BKY_CATEGORY_GUIDE": "📢 指南",
  "BKY_ARDUINO_STARTS_UP": "當 MCU 開發板啟動時！",
  "BKY_ARDUINO_STARTS_UP_TOOLTIP": "在程式開始時包含必要的函式庫。",
  "BKY_ARDUINO_SETUP": "🚀 設定_setup()",
  "BKY_ARDUINO_SETUP_TOOLTIP": "放置只在 Arduino 首次啟動時執行一次的程式碼。",
  "BKY_ARDUINO_LOOP": "♾️ 連續迴圈_loop()",
  "BKY_ARDUINO_LOOP_TOOLTIP": "放置在迴圈中連續執行的程式碼。",
  "BKY_PIN_MODE": "♾️設定腳位 %1 為 %2",
  "BKY_INPUT": "輸入(INPUT)",
  "BKY_OUTPUT": "輸出(OUTPUT)",
  "BKY_PIN_MODE_TOOLTIP": "將腳位模式設定為輸入或輸出。",
  "BKY_READ_DIGITAL_PIN": "讀取數位腳位 %1",
  "BKY_READ_DIGITAL_PIN_TOOLTIP": "讀取數位腳位的狀態 (高電位/低電位)。",
  "BKY_SET_DIGITAL_PIN": "輸出 %2 到數位腳位 %1",
  "BKY_HIGH": "高電位",
  "BKY_LOW": "低電位",
  "BKY_SET_DIGITAL_PIN_TOOLTIP": "向數位腳位輸出高電位或低電位。",
  "BKY_READ_ANALOG_PIN": "讀取類比腳位 A%1",
  "BKY_READ_ANALOG_PIN_TOOLTIP": "讀取類比腳位的值 (0-1023)。",
  "BKY_SET_PWM_PIN": "輸出 %2 到 PWM 腳位 %1",
  "BKY_SET_PWM_PIN_TOOLTIP": "向 PWM 腳位輸出 0-255 的值。",
  "BKY_SERVO_SETUP": "伺服馬達腳位 %1 設定",
  "BKY_SERVO_SETUP_TOOLTIP": "設定用於伺服馬達的腳位。",
  "BKY_SET_SERVO_ANGLE": "輸出伺服馬達腳位 %1 角度為 %2 度",
  "BKY_SET_SERVO_ANGLE_TOOLTIP": "將伺服馬達角度設定為 0-180 度。此積木會自動包含伺服馬達函式庫。",
  "BKY_TONE_OUT": "從腳位 %1 播放 %2 赫茲的聲音，持續 %3 毫秒",
  "BKY_TONE_OUT_TOOLTIP": "從指定腳位播放特定頻率的聲音。",
  "BKY_NO_TONE": "停止來自腳位 %1 的聲音",
  "BKY_NO_TONE_TOOLTIP": "停止由 tone() 產生的聲音。",
  "BKY_DELAY_MS": "等待 %1 秒",
  "BKY_DELAY_MS_TOOLTIP": "等待指定的時間（秒）。",
  "BKY_TIMER_MILLIS": "目前時間 (毫秒)",
  "BKY_TIMER_MILLIS_TOOLTIP": "返回自 Arduino 啟動後經過的時間，單位為千分之一秒。",
  "BKY_TIMER_RESET": "⏰ 重設計時器 %1",
  "BKY_TIMER_RESET_TOOLTIP": "重設指定編號的非阻塞計時器。",
  "BKY_TIMER_NON_BLOCKING_DELAY": "⏰ 每 %1 毫秒執行一次",
  "BKY_TIMER_NON_BLOCKING_DELAY_TOOLTIP": "在不使用 delay() 的情況下，定期執行程式碼。",
  "BKY_ARDUINO_INTERRUPT": "⚡️ 外部中斷腳位 %1 在 %2 時立即執行",
  "BKY_INTERRUPT_RISING": "上升緣 (低→高)",
  "BKY_INTERRUPT_FALLING": "下降緣 (高→低)",
  "BKY_INTERRUPT_CHANGE": "狀態改變",
  "BKY_ARDUINO_INTERRUPT_TOOLTIP": "⚠️ Arduino UNO：僅腳位 2,3 可用！請勿在中斷函式內使用 delay()、Serial。盡可能寫得簡短快速。",
  "BKY_PULSE_IN": "讀取來自腳位 %1 的 %2 脈衝長度 (超時 %3 微秒)",
  "BKY_PULSE_IN_TOOLTIP": "測量腳位的脈衝長度（微秒）。",
  "BKY_SHIFT_OUT": "🔄 移位暫存器 資料腳位 %1 時脈腳位 %2 鎖存腳位 %3",
  "BKY_SHIFT_OUT_VALUE": "以 %1 順序輸出值 %2",
  "BKY_SHIFT_MSB_FIRST": "MSB 優先 (7→0位元)",
  "BKY_SHIFT_LSB_FIRST": "LSB 優先 (0→7位元)",
  "BKY_SHIFT_OUT_TOOLTIP": "將資料傳送到移位暫存器（例如：74HC595）。",
  "BKY_WAIT_UNTIL": "等待直到 %1 為真",
  "BKY_WAIT_UNTIL_TOOLTIP": "等待直到條件為真。",
  "BKY_CUSTOM_TEXT_JOIN": "字串組合 %1 和 %2",
  "BKY_CUSTOM_TEXT_JOIN_TOOLTIP": "將兩個文字組合成一個。",
  "BKY_CUSTOM_TEXT_CHAR_AT": "字串 %1 位置 %2 的字元",
  "BKY_CUSTOM_TEXT_CHAR_AT_TOOLTIP": "取得字串中特定位置的一個字元。",
  "BKY_CUSTOM_TEXT_LENGTH": "字串 %1 的長度",
  "BKY_CUSTOM_TEXT_LENGTH_TOOLTIP": "返回字串中的總字元數。",
  "BKY_CUSTOM_TEXT_CONTAINS": "%1 是否包含 %2？",
  "BKY_CUSTOM_TEXT_CONTAINS_TOOLTIP": "檢查一個字串是否包含另一個字串。",
  "BKY_COLOUR_PICKER": "顏色 %1",
  "BKY_COLOUR_PICKER_TOOLTIP": "選擇一個顏色。",
  "BKY_COLOUR_RANDOM": "隨機顏色",
  "BKY_COLOUR_RANDOM_TOOLTIP": "產生一個隨機顏色。",
  "BKY_COLOUR_RGB": "RGB 顏色 紅 %1 綠 %2 藍 %3",
  "BKY_COLOUR_RGB_TOOLTIP": "使用紅、綠、藍的值 (0-255) 建立顏色。",
  "BKY_COLOUR_BLEND": "以 %3 的比例混合顏色 %1 和 %2",
  "BKY_COLOUR_BLEND_TOOLTIP": "以指定的比例 (0.0-1.0) 混合兩種顏色。",
  "BKY_COLOUR_TO_HEX": "顏色 %1 轉為十六進位碼",
  "BKY_COLOUR_TO_HEX_TOOLTIP": "將顏色轉換為十六進位顏色碼 (#RRGGBB)。",
  "BKY_COLOUR_TO_RGB_VALUES": "顏色 %1 的 %2 值",
  "BKY_RED": "紅",
  "BKY_GREEN": "綠",
  "BKY_BLUE": "藍",
  "BKY_COLOUR_TO_RGB_VALUES_TOOLTIP": "從顏色中提取紅、綠、藍其中一個值 (0-255)。",
  "BKY_NUMBER_VARIABLE_SET": "🔢 將 %2 存入數字變數 %1",
  "BKY_NUMBER_VARIABLE_SET_TOOLTIP": "將值存入數字(浮點數)類型的變數中。也可以儲存數位讀取值 (高/低)。",
  "BKY_NUMBER_VARIABLE_GET": "🔢 數字變數 %1",
  "BKY_NUMBER_VARIABLE_GET_TOOLTIP": "取得數字(浮點數)類型變數的值。",
  "BKY_STRING_VARIABLE_SET": "📝 將 %2 存入字串變數 %1",
  "BKY_STRING_VARIABLE_SET_TOOLTIP": "將值存入字串類型的變數中。",
  "BKY_STRING_VARIABLE_GET": "📝 字串變數 %1",
  "BKY_STRING_VARIABLE_GET_TOOLTIP": "取得字串類型變數的值。",
  "BKY_PROCEDURES_IFRETURN": "🔄 如果 %1 則返回 %2",
  "BKY_PROCEDURES_IFRETURN_TOOLTIP": "如果條件為真，則返回指定的值。僅在有返回值的函式內使用。",
  "BKY_PROCEDURES_IFRETURN_VOID": "🔄 如果 %1 則結束函式",
  "BKY_PROCEDURES_IFRETURN_VOID_TOOLTIP": "如果條件為真，則結束函式。在沒有返回值的函式中使用。",
  "BKY_LCD_I2C_SETUP": "📺 LCD(1602) I2C %1 設定 (位址: %2 尺寸: %3 x %4)",
  "BKY_LCD_I2C_SETUP_TOOLTIP": "設定 I2C LCD。通常位址為 0x27 或 0x3F。",
  "BKY_LCD_I2C_PRINT": "📺 LCD %1: 在第 %2 行 第 %3 欄列印 %4",
  "BKY_LCD_I2C_PRINT_TOOLTIP": "在指定位置輸出文字。(行/欄從 0 開始)",
  "BKY_LCD_I2C_CLEAR": "📺 LCD %1: 清除螢幕",
  "BKY_LCD_I2C_CLEAR_TOOLTIP": "清除整個 LCD 螢幕。",
  "BKY_LCD_I2C_CURSOR": "📺 LCD %1: 游標 %2",
  "BKY_ON": "開啟",
  "BKY_OFF": "關閉",
  "BKY_BLINK": "閃爍",
  "BKY_NO_BLINK": "不閃爍",
  "BKY_LCD_I2C_CURSOR_TOOLTIP": "控制游標顯示。",
  "BKY_LCD_I2C_BACKLIGHT": "📺 LCD %1: 背光 %2",
  "BKY_LCD_I2C_BACKLIGHT_TOOLTIP": "控制 LCD 背光。",
  "BKY_LCD_I2C_SCROLL": "📺 LCD %1: 螢幕滾動 %2",
  "BKY_LEFT": "左",
  "BKY_RIGHT": "右",
  "BKY_LCD_I2C_SCROLL_TOOLTIP": "向左或向右滾動螢幕內容。",
  "BKY_LCD_I2C_DISPLAY": "📺 LCD %1: 螢幕 %2",
  "BKY_LCD_I2C_DISPLAY_TOOLTIP": "開啟或關閉 LCD 螢幕顯示。",
  "BKY_LCD_I2C_SET_CURSOR": "📺 LCD %1: 移動游標到第 %2 行 第 %3 欄",
  "BKY_LCD_I2C_SET_CURSOR_TOOLTIP": "將游標移動到指定位置。(行/欄從 0 開始)",
  "BKY_FND_TM1637_SETUP": "🔟FND(TM1637) %1: CLK %2 DIO %3 腳位設定",
  "BKY_FND_TM1637_SETUP_TOOLTIP": "設定 TM1637 4位數7段顯示器。此積木包含函式庫。",
  "BKY_FND_TM1637_SET_BRIGHTNESS": "🔟FND %1: 亮度等級 %2, 電源 %3",
  "BKY_FND_TM1637_SET_BRIGHTNESS_TOOLTIP": "設定 FND 亮度 (0~7) 和電源狀態。",
  "BKY_FND_TM1637_SHOW_NUMBER": "🔟FND %1: 顯示數字 %2 (前導零填充: %3, 冒號: %4)",
  "BKY_FND_TM1637_SHOW_NUMBER_TOOLTIP": "在 FND 上顯示數字。可以設定前導零填充和中心冒號顯示。",
  "BKY_FND_TM1637_CLEAR": "🔟FND %1: 清除螢幕",
  "BKY_FND_TM1637_CLEAR_TOOLTIP": "清除 FND 螢幕上的所有內容。",
  "BKY_FND_TM1637_SET_SEGMENTS": "🔟FND %1: 直接控制七段顯示器 (資料: %2, 起始位置: %3)",
  "BKY_FND_TM1637_SET_SEGMENTS_TOOLTIP": "直接控制每個七段顯示器以建立所需的字元或形狀。以 '0x3f, 0x06' 格式輸入資料。",
  "BKY_FND_TM1637_ENCODE_DIGIT": "🔟數字/十六進位 %1 的七段顯示器值",
  "BKY_FND_TM1637_ENCODE_DIGIT_TOOLTIP": "將數字 (0-15) 轉換為7段顯示器資料 (例如：0x3f)。10~15 對應 A~F。"
}
{
  "mainTitle": "Brixel Web IDE for Arduino",
  "blockModeBtn": "Block Coding",
  "textModeBtn": "Text Coding",
  "compileBtn": "‚öôÔ∏è Compile Code",
  "uploadBtn": "üì§ Upload to Board",
  "blocklyHeaderTitle": "üß© Block Coding Editor",
  "codeTitle": "üìÑ Real-time Arduino C++ Code",
  "codeTitle_textMode": "üìù Arduino C++ Code Editor",
  "copyBtn": "üìã Copy",
  "codePreview_initial": "// Place blocks to generate code here.",
  "sectionTitleLanguage": "üåç Language & File Management",
  "labelLanguage": "Language:",
  "langKo": "ÌïúÍµ≠Ïñ¥",
  "langEn": "English",
  "langJa": "Êó•Êú¨Ë™û",
  "langZh": "‰∏≠Êñá",
  "langEs": "Espa√±ol",
  "languageStatus_official": "‚úì Official Support",
  "languageStatus_browser": "üåç Browser Translation",
  "labelFilename": "Filename:",
  "fileNameInput_placeholder": "arduino_project",
  "saveBtn": "üíæ Save",
  "loadBtn": "üìÇ Load",
  "sectionTitleAgent": "ü§ñ Enter PC Agent Code",
  "agentIdInput_placeholder": "PC Agent Pairing Code",
  "sectionTitleBoard": "üéØ Select Board",
  "boardGroupArduino_label": "üîµ Arduino Family",
  "boardUno": "Arduino Uno",
  "boardNano": "Arduino Nano",
  "boardMega": "Arduino Mega",
  "boardGroupEsp32_label": "üî¥ ESP32 Family",
  "boardEsp32": "ESP32",
  "boardEsp32s2": "ESP32-S2",
  "boardEsp32c3": "ESP32-C3",
  "boardEsp32s3": "ESP32-S3",
  "boardGroupPico_label": "üü£ Raspberry Pi",
  "boardPico": "Raspberry Pi Pico",
  "boardPicow": "Raspberry Pi Pico W",
  "sectionTitlePort": "üîå Upload Port",
  "portAutoSelect": "Refresh the port.",
  "refreshPortsBtn_title": "Refresh Port List",
  "sectionTitleDownload": "‚¨áÔ∏è Download Agent",
  "agentOsWin": "For Windows",
  "agentOsMac": "For macOS",
  "agentOsLinux": "For Linux",
  "downloadAgentBtn_title": "Download Agent",
  "consoleHeader": "üì∫ Real-time Log",
  "loadingText": "Initializing system...",
  "loadingText_en": "Initializing system...",
  "loadingText_ja": "„Ç∑„Çπ„ÉÜ„É†ÂàùÊúüÂåñ‰∏≠...",
  "loadingText_zh": "Á≥ªÁªüÂàùÂßãÂåñ‰∏≠...",
  "loadingText_es": "Inicializando sistema...",
  "js_alert_downloadAgent": "Downloading Arduino agent for {osName}.\nIn a real implementation, the installer for the OS would be downloaded.",
  "js_log_downloadRequest": "Agent download request for {osName}",
  "js_log_modeSwitch": "Switched mode: {modeName}",
  "js_log_modeBlock": "Block Coding",
  "js_log_modeText": "Text Coding",
  "js_log_codeCopiedSuccess": "‚úÖ Code copied to clipboard.",
  "js_log_codeCopiedFail": "‚ö† Failed to copy code.",
  "js_log_blockFileSaved": "‚úÖ Block file saved: {fileName}",
  "js_log_blockFileSaveFail": "‚ö† Failed to save block file.",
  "js_log_sketchFileSaved": "‚úÖ Sketch file saved: {fileName}",
  "js_log_sketchFileSaveFail": "‚ö† Failed to save sketch file.",
  "js_log_blockFileLoaded": "‚úÖ Block file loaded: {fileName}",
  "js_log_sketchFileLoaded": "‚úÖ Sketch file loaded: {fileName}",
  "js_log_fileLoadFail": "‚ö† Failed to load file: {errorMsg}",
  "js_log_compileStart": "---",
  "js_log_compileStart_mode": "Starting compile ({modeName} mode)",
  "js_log_noCodeToCompile": "‚ö† No code to compile.",
  "js_log_compileComplete": "‚úÖ Compile complete - Size: {size}",
  "js_log_compileFail": "‚ö† Compile failed: {errorMsg}",
  "js_log_compileRequestFail": "‚ö† Compile request failed: {errorMsg}",
  "js_log_uploadPreCompile": "‚ö† Please compile the code first.",
  "js_log_uploadNoAgentId": "‚ö† Please enter the Agent ID.",
  "js_log_uploadRequestSent": "üì§ Upload request sent...",
  "js_log_uploadRequestFail": "‚ö† Upload request failed: {errorMsg}",
  "js_log_requestingPorts": "üîç Requesting port list from agent ({agentId})...",
  "js_log_portListUpdated": "‚úÖ Port list updated. ({portCount} ports found)",
  "js_log_serverConnected": "üîó Connected to server.",
  "js_log_serverError": "‚ö† Server connection error.",
  "js_log_langChanged": "Language changed to {lang}.",
  "js_log_langChangeFail": "Failed to change language: {errorMsg}",
  "js_log_initFail": "‚ö† System initialization failed.",
  "template_arduino": "void setup() {\n  pinMode(13, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(13, HIGH);\n  delay(500);\n  digitalWrite(13, LOW);\n  delay(500);\n}",
  "template_esp32": "void setup() {\n  pinMode(2, OUTPUT); // Built-in LED\n  Serial.begin(115200);\n  Serial.println(\"ESP32 start!\");\n}\n\nvoid loop() {\n  digitalWrite(2, HIGH);\n  delay(1000);\n  digitalWrite(2, LOW);\n  delay(1000);\n}",
  "template_pico": "void setup() {\n  pinMode(LED_BUILTIN, OUTPUT);\n  Serial.begin(115200);\n  Serial.println(\"Raspberry Pi Pico start!\");\n}\n\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);\n  delay(500);\n  digitalWrite(LED_BUILTIN, LOW);\n  delay(500);\n}",
  "ARDUINO_SETUP": "Arduino Setup",
  "ARDUINO_LOOP": "Arduino Loop", 
  "ARDUINO_DIGITAL_WRITE": "Digital Write %1 Pin %2",
  "ARDUINO_DIGITAL_READ": "Digital Read %1 Pin",
  "ARDUINO_ANALOG_WRITE": "Analog Write %1 Pin %2",
  "ARDUINO_ANALOG_READ": "Analog Read %1 Pin", 
  "ARDUINO_DELAY": "Delay %1 ms",
  "ARDUINO_SERIAL_BEGIN": "Start Serial at %1 baud",
  "ARDUINO_SERIAL_PRINT": "Print %1 to Serial",
  "SENSOR_ULTRASONIC": "Ultrasonic Sensor Distance",
  "SENSOR_TEMPERATURE": "Temperature Sensor Value",
  "SENSOR_LIGHT": "Light Sensor Value", 
  "SENSOR_BUTTON": "Button %1 Pin State",
  "ACTUATOR_LED": "LED %1 Pin %2",
  "ACTUATOR_SERVO": "Servo %1 Pin rotate to %2 degrees",
  "ACTUATOR_BUZZER": "Buzzer %1 Pin sound %2",
  "ACTUATOR_MOTOR": "Motor %1 Pin speed %2",
  "PIN_HIGH": "HIGH",
  "PIN_LOW": "LOW", 
  "PIN_NUMBER": "Pin Number",
  "PIN_VALUE": "Value",
  "MILLISECONDS": "Milliseconds",
  "BKY_PAGE_TITLE": "MCU BlockCoding WebEditor",
  "BKY_ARDUINO_REALTIME_CODE": "Realtime Arduino C++ Code",
  "BKY_COPY_BUTTON": "Copy",
  "BKY_LANGUAGE_LABEL": "Language:",
  "BKY_SAVE_BUTTON": "Save",
  "BKY_LOAD_BUTTON": "Load",
  "BKY_FILE_NAME_PLACEHOLDER": "File name",
  "BKY_ALERT_SAVE_FAILED": "Block save failed",
  "BKY_ALERT_LOAD_FAILED": "Invalid block file or file is corrupted",
  "BKY_CATEGORY_MAIN": "üéØ Main",
  "BKY_CATEGORY_PIN_CONTROL": "üìå Pin Control",
  "BKY_CATEGORY_CONTROL": "üîÑ Control",
  "BKY_CATEGORY_LOGIC": "üîß Logic",
  "BKY_CATEGORY_MATH": "üî¢ Math",
  "BKY_CATEGORY_TEXT": "üìú Text",
  "BKY_CATEGORY_COLOR": "üé® Color",
  "BKY_CATEGORY_VARIABLES": "üì¶ Variables",
  "BKY_CATEGORY_LIST": "üóÇÔ∏è List",
  "BKY_CATEGORY_FUNCTIONS": "‚ö° Functions",
  "BKY_CATEGORY_DISPLAY_A": "üíª A.Display",
  "BKY_CATEGORY_DISPLAY_B": "üñ•Ô∏è B.Advanced Display",
  "BKY_CATEGORY_SENSORS_A": "üå°Ô∏è A.General Sensors",
  "BKY_CATEGORY_SENSORS_B": "üõ∞Ô∏è B.Advanced Sensors",
  "BKY_CATEGORY_MOTOR": "‚öôÔ∏è Motor",
  "BKY_CATEGORY_OUTPUT": "üí° Output Devices",
  "BKY_CATEGORY_COMM": "üì∂ Communication",
  "BKY_CATEGORY_SERIAL": "üì° Serial Communication",
  "BKY_CATEGORY_UTIL": "üõ†Ô∏è Util",
  "BKY_CATEGORY_GUIDE": "üì¢ Guide",
  "BKY_ARDUINO_STARTS_UP": "When MCU Board Starts Up!",
  "BKY_ARDUINO_STARTS_UP_TOOLTIP": "Includes essential libraries when the program starts.",
  "BKY_ARDUINO_SETUP": "üöÄ Setup_setup()",
  "BKY_ARDUINO_SETUP_TOOLTIP": "Put code that runs only once when Arduino first starts.",
  "BKY_ARDUINO_LOOP": "‚ôæÔ∏è Continuous Loop_loop()",
  "BKY_ARDUINO_LOOP_TOOLTIP": "Put code that runs continuously in a loop.",
  "BKY_PIN_MODE": "‚ôæÔ∏èSet Pin %1 to %2",
  "BKY_INPUT": "Input(INPUT)",
  "BKY_OUTPUT": "Output(OUTPUT)",
  "BKY_PIN_MODE_TOOLTIP": "Sets pin mode to INPUT or OUTPUT.",
  "BKY_READ_DIGITAL_PIN": "Read Digital Pin %1",
  "BKY_READ_DIGITAL_PIN_TOOLTIP": "Reads digital pin state (HIGH/LOW).",
  "BKY_SET_DIGITAL_PIN": "Output %2 to Digital Pin %1",
  "BKY_HIGH": "High",
  "BKY_LOW": "Low",
  "BKY_SET_DIGITAL_PIN_TOOLTIP": "Outputs HIGH or LOW to digital pin.",
  "BKY_READ_ANALOG_PIN": "Read Analog Pin A%1",
  "BKY_READ_ANALOG_PIN_TOOLTIP": "Reads analog pin value (0-1023).",
  "BKY_SET_PWM_PIN": "Output %2 to PWM Pin %1",
  "BKY_SET_PWM_PIN_TOOLTIP": "Outputs 0-255 value to PWM pin.",
  "BKY_SERVO_SETUP": "Servo Motor Pin %1 Setup",
  "BKY_SERVO_SETUP_TOOLTIP": "Sets up pin for servo motor use.",
  "BKY_SET_SERVO_ANGLE": "Output Servo Motor Pin %1 Angle to %2 degrees",
  "BKY_SET_SERVO_ANGLE_TOOLTIP": "Sets servo motor angle to 0-180 degrees. This block automatically includes servo library.",
  "BKY_TONE_OUT": "Play %2 Hz Sound from Pin %1 for %3 ms",
  "BKY_TONE_OUT_TOOLTIP": "Plays sound of specific frequency from specified pin.",
  "BKY_NO_TONE": "Stop Sound from Pin %1",
  "BKY_NO_TONE_TOOLTIP": "Stops sound made by tone().",
  "BKY_DELAY_MS": "Wait %1 seconds",
  "BKY_DELAY_MS_TOOLTIP": "Waits for specified time (seconds).",
  "BKY_TIMER_MILLIS": "Current Time (millis)",
  "BKY_TIMER_MILLIS_TOOLTIP": "Returns elapsed time since Arduino start in 1/1000 second units.",
  "BKY_TIMER_RESET": "‚è∞ Reset Timer %1",
  "BKY_TIMER_RESET_TOOLTIP": "Resets specified number non-blocking timer.",
  "BKY_TIMER_NON_BLOCKING_DELAY": "‚è∞ Execute Every %1 Milliseconds",
  "BKY_TIMER_NON_BLOCKING_DELAY_TOOLTIP": "Executes code at regular intervals without using delay().",
  "BKY_ARDUINO_INTERRUPT": "‚ö°Ô∏è External Interrupt pin %1 when %2 Execute Immediately",
  "BKY_INTERRUPT_RISING": "RISING (Low‚ÜíHigh)",
  "BKY_INTERRUPT_FALLING": "FALLING (High‚ÜíLow)",
  "BKY_INTERRUPT_CHANGE": "CHANGE (State Change)",
  "BKY_ARDUINO_INTERRUPT_TOOLTIP": "‚ö†Ô∏è Arduino UNO: Only pins 2,3 available! Do not use delay(), Serial inside interrupt functions. Write as short and fast as possible.",
  "BKY_PULSE_IN": "Read %2 Pulse Length from Pin %1 (Timeout %3 Œºs)",
  "BKY_PULSE_IN_TOOLTIP": "Measures pulse length of pin in microseconds.",
  "BKY_SHIFT_OUT": "üîÑ Shift Register Data Pin %1 Clock Pin %2 Latch Pin %3",
  "BKY_SHIFT_OUT_VALUE": "Output Value %2 in %1 Order",
  "BKY_SHIFT_MSB_FIRST": "MSB First (7‚Üí0bit)",
  "BKY_SHIFT_LSB_FIRST": "LSB First (0‚Üí7bit)",
  "BKY_SHIFT_OUT_TOOLTIP": "Sends data to shift register (e.g.: 74HC595).",
  "BKY_WAIT_UNTIL": "Wait Until %1 becomes True",
  "BKY_WAIT_UNTIL_TOOLTIP": "Waits until condition becomes true.",
  "BKY_CUSTOM_TEXT_JOIN": "String combining %1 and %2",
  "BKY_CUSTOM_TEXT_JOIN_TOOLTIP": "Combines two texts into one.",
  "BKY_CUSTOM_TEXT_CHAR_AT": "Character at position %2 in string %1",
  "BKY_CUSTOM_TEXT_CHAR_AT_TOOLTIP": "Gets one character at specific position in string.",
  "BKY_CUSTOM_TEXT_LENGTH": "Length of string %1",
  "BKY_CUSTOM_TEXT_LENGTH_TOOLTIP": "Returns total number of characters in string.",
  "BKY_CUSTOM_TEXT_CONTAINS": "Does %1 contain %2?",
  "BKY_CUSTOM_TEXT_CONTAINS_TOOLTIP": "Checks if one string contains another string.",
  "BKY_COLOUR_PICKER": "Color %1",
  "BKY_COLOUR_PICKER_TOOLTIP": "Selects a color.",
  "BKY_COLOUR_RANDOM": "Random Color",
  "BKY_COLOUR_RANDOM_TOOLTIP": "Generates a random color.",
  "BKY_COLOUR_RGB": "RGB Color Red %1 Green %2 Blue %3",
  "BKY_COLOUR_RGB_TOOLTIP": "Creates color with red, green, blue values (0-255).",
  "BKY_COLOUR_BLEND": "Blend Color %1 and %2 at %3 ratio",
  "BKY_COLOUR_BLEND_TOOLTIP": "Blends two colors at specified ratio (0.0-1.0).",
  "BKY_COLOUR_TO_HEX": "Color %1 to HEX Code",
  "BKY_COLOUR_TO_HEX_TOOLTIP": "Converts color to hexadecimal color code (#RRGGBB).",
  "BKY_COLOUR_TO_RGB_VALUES": "%2 value of Color %1",
  "BKY_RED": "Red",
  "BKY_GREEN": "Green",
  "BKY_BLUE": "Blue",
  "BKY_COLOUR_TO_RGB_VALUES_TOOLTIP": "Extracts one of red, green, blue values (0-255) from color.",
  "BKY_NUMBER_VARIABLE_SET": "üî¢ Store %2 in Number Variable %1",
  "BKY_NUMBER_VARIABLE_SET_TOOLTIP": "Stores value in number(float) type variable. Can also store digital read (HIGH/LOW).",
  "BKY_NUMBER_VARIABLE_GET": "üî¢ Number Variable %1",
  "BKY_NUMBER_VARIABLE_GET_TOOLTIP": "Gets value of number(float) type variable.",
  "BKY_STRING_VARIABLE_SET": "üìù Store %2 in String Variable %1",
  "BKY_STRING_VARIABLE_SET_TOOLTIP": "Stores value in String type variable.",
  "BKY_STRING_VARIABLE_GET": "üìù String Variable %1",
  "BKY_STRING_VARIABLE_GET_TOOLTIP": "Gets value of String type variable.",

    "BKY_ARRAY_CREATE": "üìö create array %1 type %2 with values %3",
    "BKY_ARRAY_CREATE_TIP": "Create an array with initial values",
    "BKY_ARRAY_CREATE_EMPTY": "üìö create empty array %1 type %2 size %3",
    "BKY_ARRAY_CREATE_EMPTY_TIP": "Create an empty array with specified size",
    "BKY_ARRAY_GET": "üìö get array %1 at index %2",
    "BKY_ARRAY_GET_TIP": "Get value from array at specified index",
    "BKY_ARRAY_SET": "üìö set array %1 at index %2 to %3",
    "BKY_ARRAY_SET_TIP": "Set array value at specified index",
    "BKY_ARRAY_APPEND": "üìö append %1 to array %2",
    "BKY_ARRAY_APPEND_TIP": "Add value to end of array",
    "BKY_ARRAY_REMOVE": "üìö remove from array %1 at index %2",
    "BKY_ARRAY_REMOVE_TIP": "Remove value from array at specified index and shift elements",
    "BKY_ARRAY_FIND": "üìö find %1 in array %2",
    "BKY_ARRAY_FIND_TIP": "Find value in array and return index (-1 if not found)",
    "BKY_ARRAY_LENGTH": "üìö length of array %1",
    "BKY_ARRAY_LENGTH_TIP": "Get the total size of array",
    "BKY_ARRAY_CLEAR": "üìö fill array %1 with %2",
    "BKY_ARRAY_CLEAR_TIP": "Fill entire array with specified value",
    "BKY_ARRAY_COPY": "üìö copy array from %1 to %2",
    "BKY_ARRAY_COPY_TIP": "Copy all values from source array to destination array",
    "BKY_ARRAY_STRLEN": "üìö string length of %1",
    "BKY_ARRAY_STRLEN_TIP": "Get actual length of character array (string)",
    "BKY_ARRAY_CONTAINS": "üìö array %1 contains %2",
    "BKY_ARRAY_CONTAINS_TIP": "Check if value exists in array",
    "BKY_ARRAY_TYPE_INT": "integer",
    "BKY_ARRAY_TYPE_FLOAT": "decimal",
    "BKY_ARRAY_TYPE_CHAR": "character",

  "BKY_PROCEDURES_IFRETURN": "üîÑ If %1 then Return %2",
  "BKY_PROCEDURES_IFRETURN_TOOLTIP": "Returns specified value if condition is true. Use only inside functions with return values.",
  "BKY_PROCEDURES_IFRETURN_VOID": "üîÑ If %1 then End Function",
  "BKY_PROCEDURES_IFRETURN_VOID_TOOLTIP": "Ends function if condition is true. Use in functions without return values.",
  "BKY_LCD_I2C_SETUP": "üì∫ LCD(1602) I2C %1 Setup (Address: %2 Size: %3 x %4)",
  "BKY_LCD_I2C_SETUP_TOOLTIP": "Sets up I2C LCD. Usually address is 0x27 or 0x3F.",
  "BKY_LCD_I2C_PRINT": "üì∫ LCD %1: Print %4 at Row %2 Col %3",
  "BKY_LCD_I2C_PRINT_TOOLTIP": "Outputs text at specified position. (Row/Col starts from 0)",
  "BKY_LCD_I2C_CLEAR": "üì∫ LCD %1: Clear Screen",
  "BKY_LCD_I2C_CLEAR_TOOLTIP": "Clears entire LCD screen.",
  "BKY_LCD_I2C_CURSOR": "üì∫ LCD %1: Cursor %2",
  "BKY_ON": "ON",
  "BKY_OFF": "OFF",
  "BKY_BLINK": "Blink",
  "BKY_NO_BLINK": "No Blink",
  "BKY_LCD_I2C_CURSOR_TOOLTIP": "Controls cursor display.",
  "BKY_LCD_I2C_BACKLIGHT": "üì∫ LCD %1: Backlight %2",
  "BKY_LCD_I2C_BACKLIGHT_TOOLTIP": "Controls LCD backlight.",
  "BKY_LCD_I2C_SCROLL": "üì∫ LCD %1: Screen Scroll %2",
  "BKY_LEFT": "Left",
  "BKY_RIGHT": "Right",
  "BKY_LCD_I2C_SCROLL_TOOLTIP": "Scrolls screen content left or right.",
  "BKY_LCD_I2C_DISPLAY": "üì∫ LCD %1: Screen %2",
  "BKY_LCD_I2C_DISPLAY_TOOLTIP": "Turns LCD screen display on or off.",
  "BKY_LCD_I2C_SET_CURSOR": "üì∫ LCD %1: Move Cursor to Row %2 Col %3",
  "BKY_LCD_I2C_SET_CURSOR_TOOLTIP": "Moves cursor to specified position. (Row/Col starts from 0)",

  "BKY_TM1637_SETUP": "üîüFND(TM1637) setup CLK pin %1 DATA pin %2",
  "BKY_TM1637_SETUP_TIP": "Initialize TM1637 4-digit display with CLK and DATA pins",
  "BKY_TM1637_DISPLAY_NUMBER": "üîüDisplay number %1 %2 %3",
  "BKY_TM1637_DISPLAY_NUMBER_TIP": "Display a number with optional decimal places or colon",
  "BKY_TM1637_DISPLAY_TIME": "üîüDisplay time %1 : %2 %3",
  "BKY_TM1637_DISPLAY_TIME_TIP": "Display time in HH:MM format",
  "BKY_TM1637_DISPLAY_TEXT": "üîüDisplay text %1 scroll delay %2 ms",
  "BKY_TM1637_DISPLAY_TEXT_TIP": "Display text with scrolling if longer than 4 characters",
  "BKY_TM1637_DISPLAY_DIGIT": "üîüDisplay at position %1 digit %2",
  "BKY_TM1637_DISPLAY_DIGIT_TIP": "Display a single digit or character at specific position",
  "BKY_TM1637_CLEAR": "üîüClear display",
  "BKY_TM1637_CLEAR_TIP": "Clear all digits on the display",
  "BKY_TM1637_BRIGHTNESS": "üîüSet brightness %1",
  "BKY_TM1637_BRIGHTNESS_TIP": "Set display brightness from 0 (darkest) to 7 (brightest)",
  "BKY_TM1637_COLON_CONTROL": "üîüColon %1",
  "BKY_TM1637_COLON_CONTROL_TIP": "Show or hide the colon between digits",
  "BKY_TM1637_NO_DECIMAL": "No decimal",
  "BKY_TM1637_ONE_DECIMAL": "1 decimal place",
  "BKY_TM1637_COLON": "With colon (:)",
  "BKY_TM1637_SHOW_MINUS": "Show minus",
  "BKY_TM1637_HIDE_MINUS": "Hide minus",
  "BKY_TM1637_COLON_ON": "Show",
  "BKY_TM1637_COLON_OFF": "Hide",
  "BKY_TM1637_POSITION_1": "1st (left)",
  "BKY_TM1637_POSITION_2": "2nd",
  "BKY_TM1637_POSITION_3": "3rd",
  "BKY_TM1637_POSITION_4": "4th (right)",

  "BKY_NEO_SETUP_T": "‚≠ïNeoPixel(WS2812/B) Setup",
  "BKY_NEO_SETUP_L1": "No.: %1 | Digital Pin: %2 | LED Count: %3",
  "BKY_NEO_SETUP_L2": "Type: %1",
  "BKY_NEO_TYPE_GRB": "GRB(Standard WS2812B)",
  "BKY_NEO_TYPE_RGB": "RGB",
  "BKY_NEO_TYPE_BRG": "BRG",
  "BKY_NEO_TYPE_BGR": "BGR",
  "BKY_NEO_TYPE_GRBW": "GRBW(RGBW)",
  "BKY_NEO_TYPE_RGBW": "RGBW",
  "BKY_NEO_SETUP_TIP": "Creates NeoPixel object and initializes with begin/clear/show. (Only creates #include in this block)",
  "BKY_NEO_SET_RGB": "‚≠ïNeoPixel RGB Setting | STRIP %1 | LED %2 | R %3 | G %4 | B %5",
  "BKY_NEO_SET_RGB_TIP": "Sets RGB color of one LED. Not reflected until show().",
  "BKY_NEO_SET_RGBW": "‚≠ïNeoPixel RGBW Setting | STRIP %1 | LED %2 | R %3 | G %4 | B %5 | W %6",
  "BKY_NEO_SET_RGBW_TIP": "Sets color of one LED in RGBW type strip.",
  "BKY_NEO_BRI": "‚≠ïNeoPixel Brightness | STRIP %1 | Value(0~255) %2",
  "BKY_NEO_BRI_TIP": "Sets overall brightness (setBrightness).",
  "BKY_NEO_SHOW": "‚≠ïNeoPixel Show | STRIP %1",
  "BKY_NEO_SHOW_TIP": "Reflects buffer-set colors to actual LEDs.",
  "BKY_NEO_CLEAR": "‚≠ïNeoPixel Clear All (clear) | STRIP %1",
  "BKY_NEO_CLEAR_TIP": "Turns off all LEDs (buffer only changed). Call show() when needed.",
  "BKY_NEO_FILL_ALL": "‚≠ïNeoPixel Fill All Color | STRIP %1 | R %2 | G %3 | B %4",
  "BKY_NEO_FILL_ALL_TIP": "Fills all pixels with same RGB. Reflect with show().",
  "BKY_NEO_ANIM_RAINBOW": "‚≠ïNeoPixel Rainbow | STRIP %1 | Delay(ms) %2 | Repeat %3",
  "BKY_NEO_ANIM_RAINBOW_TIP": "Rainbow colors flowing effect (blocking).",
  "BKY_NEO_ANIM_SHIFT": "‚≠ïNeoPixel Shift | STRIP %1 | Direction %2 | Step %3 | Delay(ms) %4",
  "BKY_NEO_DIR_L": "Left",
  "BKY_NEO_DIR_R": "Right",
  "BKY_NEO_ANIM_SHIFT_TIP": "Circularly moves pixels left/right (blocking).",
  "BKY_NEO_ANIM_BREATHE": "‚≠ïNeoPixel Breathe | STRIP %1 | R %2 | G %3 | B %4",
  "BKY_NEO_ANIM_BREATHE_L2": "Min Brightness %1 | Max Brightness %2 | Increment %3 | Delay(ms) %4",
  "BKY_NEO_ANIM_BREATHE_TIP": "Breathing effect with brightness gradually increasing then decreasing (blocking).",
  "BKY_SH110X_SETUP_I2C": "üì∫Setup SH110X OLED %1 Type %2 I2C Address %3 Reset Pin %4 Width %5 Height %6",
  "BKY_SH110X_SETUP_I2C_TIP": "Setup SH110X OLED display with I2C connection.",
  "BKY_SH110X_DISPLAY": "üì∫OLED %1 Display",
  "BKY_SH110X_DISPLAY_TIP": "Show current buffer on OLED display.",
  "BKY_SH110X_CLEAR": "üì∫OLED %1 Clear",
  "BKY_SH110X_CLEAR_TIP": "Clear OLED display buffer.",
  "BKY_SH110X_CONTROL": "üì∫OLED %1 %2",
  "BKY_SH110X_CONTROL_TIP": "Control OLED display state.",
  "BKY_SH110X_PIXEL": "üì∫OLED %1 Draw Pixel X %2 Y %3 Color %4",
  "BKY_SH110X_PIXEL_TIP": "Draw a pixel on OLED display.",
  "BKY_SH110X_LINE": "üì∫OLED %1 Draw Line From X1 %2 Y1 %3 To X2 %4 Y2 %5 Color %6",
  "BKY_SH110X_LINE_TIP": "Draw a line on OLED display.",
  "BKY_SH110X_RECT": "üì∫OLED %1 Draw Rectangle X %2 Y %3 Width %4 Height %5 %6 Color %7",
  "BKY_SH110X_RECT_TIP": "Draw a rectangle on OLED display.",
  "BKY_SH110X_CIRCLE": "üì∫OLED %1 Draw Circle X %2 Y %3 Radius %4 %5 Color %6",
  "BKY_SH110X_CIRCLE_TIP": "Draw a circle on OLED display.",
  "BKY_SH110X_TEXT": "üì∫OLED %1 Print Text %2 X %3 Y %4 Size %5 Color %6 Wrap %7",
  "BKY_SH110X_TEXT_TIP": "Print text on OLED display.",
  "BKY_SH110X_CONTRAST": "üì∫OLED %1 Set Contrast %2",
  "BKY_SH110X_CONTRAST_TIP": "Set OLED display contrast (0-255).",
  "BKY_SH110X_ACTION_INVERT": "Invert Display",
  "BKY_SH110X_ACTION_NORMAL": "Normal Display", 
  "BKY_SH110X_ACTION_ON": "Turn On",
  "BKY_SH110X_ACTION_OFF": "Turn Off",
  "BKY_SH110X_COLOR_WHITE": "White",
  "BKY_SH110X_COLOR_BLACK": "Black",
  "BKY_SH110X_COLOR_INVERSE": "Inverse",
  "BKY_SH110X_FILL_OUTLINE": "Outline",
  "BKY_SH110X_FILL_FILLED": "Filled",
  "BKY_SH110X_WRAP_NO": "No Wrap",
  "BKY_SH110X_WRAP_YES": "Wrap",
  "BKY_HT16_SETUP": "üì≤I2C Dot Matrix(HT16K33) Setup",
  "BKY_HT16_SETUP_1": "Number %1 | Device %2 | I2C Address %3",
  "BKY_DM_8X8": "8√ó8",
  "BKY_DM_8X16": "8√ó16",
  "BKY_DM_8X16MINI": "8√ó16 Mini",
  "BKY_DM_BICOLOR8": "Bicolor 8√ó8",
  "BKY_HT16_SETUP_2": "Brightness(0~15) %1 | Blink %2 | Rotation %3",
  "BKY_BLINK_2HZ": "2 Hz",
  "BKY_BLINK_1HZ": "1 Hz",
  "BKY_BLINK_0_5HZ": "0.5 Hz",
  "BKY_HT16_SETUP_TIP": "Includes required libraries and sets begin/brightness/blink/rotation. (Only creates #include in this block)",
  "BKY_HT16_BRI": "üì≤I2C Matrix %1 Brightness(0~15) %2",
  "BKY_HT16_BRI_TIP": "setBrightness()",
  "BKY_HT16_BLINK": "üì≤I2C Matrix %1 Blink %2",
  "BKY_HT16_BLINK_TIP": "blinkRate()",
  "BKY_HT16_PIXEL": "üì≤I2C Matrix %1 | Row %2 | Col %3 | Pixel %4",
  "BKY_HT16_PIXEL_TIP": "Monochrome: 1=ON, 0=OFF. (Row/Col starts from 1)",
  "BKY_HT16_BIPIX": "üì≤I2C Bicolor Matrix %1 | Row %2 | Col %3 | Color %4",
  "BKY_YELLOW": "Yellow",
  "BKY_HT16_BIPIX_TIP": "Bicolor matrix exclusive drawPixel(x,y,color)",
  "BKY_HT16_P8": "üì≤8√ó8 Matrix %1 | Pattern",
  "BKY_HT16_P8_TIP": "Click to toggle pixels and draw to buffer. Use 'Display' block to reflect output.",
  "BKY_HT16_P816": "üì≤8√ó16 Matrix %1 | Pattern",
  "BKY_HT16_P816_TIP": "Edit in 16 wide √ó 8 tall grid (for actual 8√ó16 device)",
  "BKY_HT16_LINE": "üì≤I2C Matrix %1 | (Row %2, Col %3) ‚Üí (Row %4, Col %5) Draw Line",
  "BKY_HT16_LINE_TIP": "Adafruit_GFX drawLine",
  "BKY_HT16_CIR": "üì≤I2C Matrix %1 | Center(Row %2, Col %3) | Radius %4 | Draw Circle",
  "BKY_HT16_CIR_TIP": "Adafruit_GFX drawCircle",
  "BKY_HT16_RECT": "üì≤I2C Matrix %1 | Start(Row %2, Col %3) | Size %4 √ó %5 | Rectangle %6",
  "BKY_HT16_RECT_TIP": "drawRect / fillRect",
  "BKY_HT16_SHOW": "üì≤I2C Matrix %1 | Display",
  "BKY_HT16_SHOW_TIP": "Reflects with writeDisplay()",
  "BKY_HT16_CLR": "üì≤I2C Matrix %1 | Clear Screen",
  "BKY_HT16_CLR_TIP": "Performs clear() only",
  "BKY_HT16_SCROLL": "üì≤I2C Matrix %1 | Text %2 | Scroll %3 | Delay(sec) %4",
  "BKY_HT16_SCROLL_TIP": "Scroll GFX text left/right output",
  "BKY_SSD1306_SETUP_I2C": "üíªSetup SSD1306 OLED %1 Width %2 Height %3 I2C Address %4 Reset Pin %5",
  "BKY_SSD1306_SETUP_I2C_TIP": "Setup SSD1306 OLED display with I2C connection.",
  "BKY_SSD1306_CONTROL": "üíªOLED %1 %2",
  "BKY_SSD1306_CONTROL_TIP": "Control OLED display basic functions.",
  "BKY_SSD1306_DIM": "üíªOLED %1 Dim %2",
  "BKY_SSD1306_DIM_TIP": "Set OLED display dim mode.",
  "BKY_SSD1306_PIXEL": "üíªOLED %1 Draw Pixel X %2 Y %3 Color %4",
  "BKY_SSD1306_PIXEL_TIP": "Draw a pixel on OLED display.",
  "BKY_SSD1306_LINE": "üíªOLED %1 Draw Line From X1 %2 Y1 %3 To X2 %4 Y2 %5 Color %6",
  "BKY_SSD1306_LINE_TIP": "Draw a line on OLED display.",
  "BKY_SSD1306_RECT": "üíªOLED %1 Draw Rectangle X %2 Y %3 Width %4 Height %5 %6 Color %7",
  "BKY_SSD1306_RECT_TIP": "Draw a rectangle on OLED display.",
  "BKY_SSD1306_CIRCLE": "üíªOLED %1 Draw Circle X %2 Y %3 Radius %4 %5 Color %6",
  "BKY_SSD1306_CIRCLE_TIP": "Draw a circle on OLED display.",
  "BKY_SSD1306_TEXT": "üíªOLED %1 Print Text %2 X %3 Y %4 Size %5 Color %6 Wrap %7",
  "BKY_SSD1306_TEXT_TIP": "Print text on OLED display.",
  "BKY_SSD1306_SCROLL": "üíªOLED %1 Scroll %2 Start %3 Stop %4",
  "BKY_SSD1306_SCROLL_TIP": "Control OLED display scroll function.",
  "BKY_SSD1306_ACTION_DISPLAY": "Display",
  "BKY_SSD1306_ACTION_CLEAR": "Clear",
  "BKY_SSD1306_ACTION_INVERT": "Invert",
  "BKY_SSD1306_ACTION_NORMAL": "Normal",
  "BKY_SSD1306_DIM_ON": "On",
  "BKY_SSD1306_DIM_OFF": "Off",
  "BKY_SSD1306_COLOR_WHITE": "White",
  "BKY_SSD1306_COLOR_BLACK": "Black",
  "BKY_SSD1306_COLOR_INVERSE": "Inverse",
  "BKY_SSD1306_FILL_OUTLINE": "Outline",
  "BKY_SSD1306_FILL_FILLED": "Filled",
  "BKY_SSD1306_WRAP_NO": "No Wrap",
  "BKY_SSD1306_WRAP_YES": "Wrap",
  "BKY_SSD1306_SCROLL_RIGHT": "Right",
  "BKY_SSD1306_SCROLL_LEFT": "Left",
  "BKY_SSD1306_SCROLL_DIAG_RIGHT": "Diagonal Right",
  "BKY_SSD1306_SCROLL_DIAG_LEFT": "Diagonal Left",
  "BKY_SSD1306_SCROLL_STOP": "Stop",
  "BKY_ULTRA_SETUP": "üîä Set up ultrasonic sensor trigger pin %1 echo pin %2",
  "BKY_ULTRA_SETUP_TIP": "Configure the ultrasonic sensor. Specify trigger/echo pins.",
  "BKY_ULTRA_DISTANCE": "üîä Ultrasonic distance unit %1",
  "BKY_UNIT_CM": "cm",
  "BKY_UNIT_MM": "mm",
  "BKY_ULTRA_DISTANCE_TIP": "Measure distance with the ultrasonic sensor.",
  "BKY_DHT_SETUP": "üå°Ô∏è Temperature Humidity Sensor(DHT00): Pin %1 Type %2 Setup",
  "BKY_DHT_SETUP_TOOLTIP": "Sets up DHT temperature humidity sensor.",
  "BKY_DHT_READ_TEMPERATURE": "üå°Ô∏è DHT Sensor: Pin %1 Read Temperature %2",
  "BKY_TEMP_CELSIUS": "Celsius (¬∞C)",
  "BKY_TEMP_FAHRENHEIT": "Fahrenheit (¬∞F)",
  "BKY_DHT_READ_TEMPERATURE_TOOLTIP": "Reads temperature from DHT sensor.",
  "BKY_DHT_READ_HUMIDITY": "üå°Ô∏è DHT Sensor: Pin %1 Read Humidity",
  "BKY_DHT_READ_HUMIDITY_TOOLTIP": "Reads humidity from DHT sensor.",
  "BKY_DHT_CONVERT_TEMPERATURE": "üå°Ô∏è Temperature Conversion: %1 %2 ‚Üí %3",
  "BKY_DHT_CONVERT_TEMPERATURE_TOOLTIP": "Converts temperature between Celsius and Fahrenheit.",
  "BKY_DHT_HEAT_INDEX": "üå°Ô∏è Heat Index Calculation: Temperature %1 Humidity %2% Unit %3",
  "BKY_DHT_HEAT_INDEX_TOOLTIP": "Calculates perceived temperature (heat index) using temperature and humidity.",
  "BKY_DALLAS_SETUP": "üí¶ Set up water temperature sensor pin %1",
  "BKY_DALLAS_SETUP_TIP": "Configure the water temperature sensor. Specify the data pin number.",
  "BKY_DALLAS_READ": "üí¶ Water temperature sensor %1 reading unit %2",
  "BKY_DALLAS_READ_TIP": "Read the temperature of the selected sensor. (Index starts at 0)",
  "BKY_DALLAS_COUNT": "üí¶ Number of connected water temperature sensors",
  "BKY_DALLAS_COUNT_TIP": "Returns the number of connected water temperature sensors.",
  "BKY_DALLAS_REQUEST": "üí¶ Start measurement for all water temperature sensors",
  "BKY_DALLAS_REQUEST_TIP": "Start temperature conversion for all water temperature sensors.",
  "BKY_HX711_SETUP": "‚öñÔ∏è Weight Sensor(HX711): DOUT Pin %1 CLK Pin %2 Gain %3 Setup",
  "BKY_GAIN_128_A": "128 (Channel A)",
  "BKY_GAIN_64_A": "64 (Channel A)",
  "BKY_GAIN_32_B": "32 (Channel B)",
  "BKY_HX711_SETUP_TOOLTIP": "Sets up HX711 weight sensor.",
  "BKY_HX711_GET_WEIGHT": "‚öñÔ∏è HX711 Weight Sensor Measure Weight",
  "BKY_HX711_GET_WEIGHT_TOOLTIP": "Measures weight with HX711 sensor.",
  "BKY_HX711_TARE": "‚öñÔ∏è HX711 Weight Sensor Zero Adjustment %1 times",
  "BKY_HX711_TARE_TOOLTIP": "Sets current weight to 0.",
  "BKY_HX711_SET_SCALE": "‚öñÔ∏è HX711 Weight Sensor Scale Setting %1",
  "BKY_HX711_SET_SCALE_TOOLTIP": "Sets scale value for weight calculation.",
  "BKY_HX711_IS_READY": "‚öñÔ∏è HX711 Weight Sensor Ready State Check",
  "BKY_HX711_IS_READY_TOOLTIP": "Checks if sensor is ready to read data.",
  "BKY_HX711_POWER_CONTROL": "‚öñÔ∏è HX711 Weight Sensor Power %1",
  "BKY_POWER_ON": "On",
  "BKY_POWER_OFF": "Off",
  "BKY_HX711_POWER_CONTROL_TOOLTIP": "Controls sensor power.",
  "BKY_HX711_READ_DATA": "‚öñÔ∏è HX711 Weight Sensor Read Data %1",
  "BKY_RAW_VALUE": "Raw Value",
  "BKY_AVERAGE_VALUE": "Average Value",
  "BKY_ACTUAL_VALUE": "Actual Value",
  "BKY_HX711_READ_DATA_TOOLTIP": "Reads various types of data from sensor.",
  "BKY_I2C_WEIGHT_SETUP": "Setup I2C Weight Sensor address %1",
  "BKY_I2C_WEIGHT_SETUP_TIP": "Initialize I2C weight sensor with slave address.",
  "BKY_I2C_WEIGHT_READ": "Read weight from I2C sensor",
  "BKY_I2C_WEIGHT_READ_TIP": "Read weight value from I2C weight sensor.",
  "BKY_I2C_WEIGHT_AVAILABLE": "I2C weight sensor is available",
  "BKY_I2C_WEIGHT_AVAILABLE_TIP": "Check if I2C weight sensor is connected and responding.",
  "BKY_I2C_WEIGHT_RAW_DATA": "Read raw data byte %1 from I2C sensor",
  "BKY_I2C_WEIGHT_RAW_DATA_TIP": "Read raw byte data from I2C weight sensor.",
  "BKY_I2C_WEIGHT_BYTE_0": "Byte 0 (Status)",
  "BKY_I2C_WEIGHT_BYTE_1": "Byte 1 (High)",
  "BKY_I2C_WEIGHT_BYTE_2": "Byte 2 (Low)",
  "BKY_ROTARY_SETUP": "üîÑ Rotary Encoder: DT Pin %1 CLK Pin %2 Setup",
  "BKY_ROTARY_SETUP_TOOLTIP": "Sets up rotary encoder.",
  "BKY_ROTARY_GET_VALUE": "üîÑ Rotary Encoder Rotation Value",
  "BKY_ROTARY_GET_VALUE_TOOLTIP": "Reads rotation value of rotary encoder. (1:clockwise, -1:counterclockwise, 0:no change)",
  "BKY_ROTARY_DIRECTION": "üîÑ Rotary Encoder Rotation Direction",
  "BKY_ROTARY_DIRECTION_TOOLTIP": "Returns rotation direction of rotary encoder as string.",
  "BKY_ROTARY_COUNTER": "üîÑ Rotary Encoder Cumulative Counter",
  "BKY_ROTARY_COUNTER_TOOLTIP": "Accumulates rotation amount of rotary encoder and returns counter value.",
  "BKY_ROTARY_RESET_COUNTER": "üîÑ Rotary Encoder Counter Reset",
  "BKY_ROTARY_RESET_COUNTER_TOOLTIP": "Resets cumulative counter of rotary encoder to 0.",
  "BKY_THERMISTOR_SETUP": "üå°Ô∏è Thermistor Temperature Sensor: Analog Pin %1 Nominal Resistance %2Œ© Beta Coefficient %3 Series Resistance %4Œ© Setup",
  "BKY_THERMISTOR_SETUP_TOOLTIP": "Sets up thermistor temperature sensor.",
  "BKY_THERMISTOR_READ_TEMPERATURE": "üå°Ô∏è Thermistor Temperature Sensor Temperature Measurement %1",
  "BKY_THERMISTOR_READ_TEMPERATURE_TOOLTIP": "Measures temperature with thermistor sensor.",
  "BKY_THERMISTOR_READ_RAW": "üå°Ô∏è Thermistor Temperature Sensor Raw Value",
  "BKY_THERMISTOR_READ_RAW_TOOLTIP": "Reads raw value of thermistor sensor. (0.1¬∞C unit)",
  "BKY_THERMISTOR_GET_RESISTANCE": "üå°Ô∏è Thermistor Temperature Sensor Resistance Value",
  "BKY_THERMISTOR_GET_RESISTANCE_TOOLTIP": "Calculates and returns current resistance value of thermistor.",
  "BKY_PMS_SETUP": "üí® Fine Dust Sensor(PMS-X003): Serial Port %1 RX Pin %2 TX Pin %3 Baud Rate %4 Setup",
  "BKY_PMS_SETUP_TOOLTIP": "Sets up PMS fine dust sensor. (Pin settings ignored when using hardware serial)",
  "BKY_PMS_POWER_CONTROL": "üí® PMS Fine Dust Sensor Power %1",
  "BKY_WAKE_UP": "Wake Up",
  "BKY_SLEEP_MODE": "Sleep Mode",
  "BKY_PMS_POWER_CONTROL_TOOLTIP": "Controls sensor power state.",
  "BKY_PMS_SET_MODE": "üí® PMS Fine Dust Sensor Mode Setting %1",
  "BKY_ACTIVE_MODE": "Active Mode",
  "BKY_PASSIVE_MODE": "Passive Mode",
  "BKY_PMS_SET_MODE_TOOLTIP": "Sets sensor operation mode.",
  "BKY_PMS_READ_DATA": "üí® PMS Fine Dust Sensor %1 Measurement",
  "BKY_PM1_0_STANDARD": "PM1.0 (Standard)",
  "BKY_PM2_5_STANDARD": "PM2.5 (Standard)",
  "BKY_PM10_STANDARD": "PM10 (Standard)",
  "BKY_PM1_0_ATMOSPHERIC": "PM1.0 (Atmospheric)",
  "BKY_PM2_5_ATMOSPHERIC": "PM2.5 (Atmospheric)",
  "BKY_PM10_ATMOSPHERIC": "PM10 (Atmospheric)",
  "BKY_PMS_READ_DATA_TOOLTIP": "Measures fine dust concentration. (Œºg/m¬≥)",
  "BKY_PMS_REQUEST_READ": "üí® PMS Fine Dust Sensor Manual Read Request",
  "BKY_PMS_REQUEST_READ_TOOLTIP": "Requests data read in manual mode.",
  "BKY_PMS_DATA_AVAILABLE": "üí® PMS Fine Dust Sensor Data Ready",
  "BKY_PMS_DATA_AVAILABLE_TOOLTIP": "Checks if new data is ready.",
  "BKY_MHZ19_SETUP": "‚ö†Ô∏èMHZ19 CO2 Sensor Setup Serial %1 RX Pin %2 TX Pin %3 Communication Speed %4",
  "BKY_SERIAL_SOFT": "SoftwareSerial",
  "BKY_SERIAL_HARD": "Serial",
  "BKY_SERIAL_HARD1": "Serial1",
  "BKY_SERIAL_HARD2": "Serial2",
  "BKY_MHZ19_SETUP_TOOLTIP": "Initializes MHZ19 CO2 sensor.",
  "BKY_MHZ19_SET_RANGE": "‚ö†Ô∏èMHZ19 Measurement Range Setting: %1 ppm",
  "BKY_MHZ19_SET_RANGE_TOOLTIP": "Sets CO2 measurement range. (Default: 2000ppm)",
  "BKY_MHZ19_FILTER": "‚ö†Ô∏èMHZ19 Filter Mode %1 Type %2",
  "BKY_FILTER_ON": "ON",
  "BKY_FILTER_OFF": "OFF",
  "BKY_FILTER_CLEAR": "Clear Mode",
  "BKY_FILTER_NORMAL": "Normal Mode",
  "BKY_MHZ19_FILTER_TOOLTIP": "Sets sensor filter mode.",
  "BKY_MHZ19_READ": "‚ö†Ô∏èMHZ19 Read Value: %1",
  "BKY_MHZ19_CO2": "CO2(ppm)",
  "BKY_MHZ19_CO2_UNLIM": "CO2 Unlimited(ppm)",
  "BKY_MHZ19_TEMP": "Temperature(‚ÑÉ)",
  "BKY_MHZ19_RAW": "Raw CO2",
  "BKY_MHZ19_TRANS": "Transmittance(%)",
  "BKY_MHZ19_ACCURACY": "Accuracy",
  "BKY_MHZ19_READ_TOOLTIP": "Reads selected value from MHZ19 sensor.",
  "BKY_MHZ19_CAL": "‚ö†Ô∏èMHZ19 %1 Cycle(hours): %2",
  "BKY_CAL_AUTO_ON": "Auto Cal On",
  "BKY_CAL_AUTO_OFF": "Auto Cal Off",
  "BKY_CAL_ZERO": "Execute Zero Calibration",
  "BKY_CAL_RESET": "Reset",
  "BKY_MHZ19_CAL_TOOLTIP": "Performs MHZ19 sensor calibration.",
  "BKY_MHZ19_STATUS": "‚ö†Ô∏èMHZ19 Status Read: %1",
  "BKY_STATUS_RANGE": "Measurement Range",
  "BKY_STATUS_ABC": "ABC Status",
  "BKY_STATUS_BG_CO2": "Background CO2",
  "BKY_STATUS_VERSION": "Version Info",
  "BKY_MHZ19_STATUS_TOOLTIP": "Reads status information from MHZ19 sensor.",
  "BKY_GRAVITY_TDS_SETUP": "üåä TDS Sensor(GravityTDS) Setup Pin %1",
  "BKY_GRAVITY_TDS_SETUP_TOOLTIP": "Initializes DFRobot GravityTDS sensor.",
  "BKY_GRAVITY_TDS_TEMP": "üåä TDS Sensor Temperature Compensation Setting: %1 ‚ÑÉ",
  "BKY_GRAVITY_TDS_TEMP_TOOLTIP": "Sets temperature compensation value to improve measurement accuracy.",
  "BKY_GRAVITY_TDS_UPDATE": "üåä TDS Sensor Update Value",
  "BKY_GRAVITY_TDS_UPDATE_TOOLTIP": "Reads new values from sensor and performs calculations.",
  "BKY_GRAVITY_TDS_READ": "üåä TDS Sensor Read Value: %1",
  "BKY_TDS_VALUE": "TDS Value(ppm)",
  "BKY_EC_VALUE": "EC Value(ŒºS/cm)",
  "BKY_K_VALUE": "K Value",
  "BKY_GRAVITY_TDS_READ_TOOLTIP": "Reads TDS, EC or K value.",
  "BKY_GRAVITY_TDS_ADV": "üåä TDS Sensor Advanced Setting %1 Value: %2",
  "BKY_ADC_REF": "ADC Reference Voltage(V)",
  "BKY_ADC_RANGE": "ADC Range",
  "BKY_K_ADDRESS": "K Value Save Address",
  "BKY_GRAVITY_TDS_ADV_TOOLTIP": "Changes advanced settings of sensor.",
  "BKY_DFROBOT_PH_SETUP": "üß™Setup pH Sensor pin %1",
  "BKY_DFROBOT_PH_SETUP_TIP": "Initialize pH sensor with analog pin.",
  "BKY_DFROBOT_PH_READ": "üß™Read pH value at temperature %1 ¬∞C",
  "BKY_DFROBOT_PH_READ_TIP": "Read pH value with temperature compensation.",
  "BKY_DFROBOT_PH_VOLTAGE": "üß™Read pH sensor voltage",
  "BKY_DFROBOT_PH_VOLTAGE_TIP": "Read raw voltage from pH sensor.",
  "BKY_DFROBOT_PH_CALIBRATION": "üß™pH calibration command %1",
  "BKY_DFROBOT_PH_CALIBRATION_TIP": "Send calibration command to pH sensor.",
  "BKY_DFROBOT_PH_ENTER": "Enter calibration",
  "BKY_DFROBOT_PH_CALIBRATE": "Calibrate",
  "BKY_DFROBOT_PH_EXIT": "Exit calibration",
  "BKY_FINGERPRINT_SETUP": "üëÜFingerprint Sensor Setup Serial %1 RX Pin %2 TX Pin %3 Communication Speed %4",
  "BKY_FINGERPRINT_SETUP_TOOLTIP": "Initializes Adafruit fingerprint sensor.",
  "BKY_FINGERPRINT_ENROLL": "üëÜFingerprint Enrollment Process %1 ID Number: %2",
  "BKY_GET_IMAGE": "Get Image",
  "BKY_CONVERT_TEMPLATE": "Convert Template",
  "BKY_CREATE_MODEL": "Create Model",
  "BKY_STORE_MODEL": "Store Model",
  "BKY_FINGERPRINT_ENROLL_TOOLTIP": "Performs fingerprint enrollment process step by step.",
  "BKY_FINGERPRINT_SEARCH": "üëÜFingerprint Recognition Mode: %1",
  "BKY_FAST_SEARCH": "Fast Search",
  "BKY_NORMAL_SEARCH": "Normal Search",
  "BKY_FINGERPRINT_SEARCH_TOOLTIP": "Attempts to match with registered fingerprints.",
  "BKY_FINGERPRINT_RESULT": "üëÜFingerprint Recognition Result: %1",
  "BKY_FINGER_ID": "Finger ID",
  "BKY_CONFIDENCE": "Confidence",
  "BKY_TEMPLATE_COUNT": "Registration Count",
  "BKY_FINGERPRINT_RESULT_TOOLTIP": "Gets fingerprint recognition result information.",
  "BKY_FINGERPRINT_DATABASE": "üëÜFingerprint Database %1 ID: %2",
  "BKY_DELETE_ID": "Delete ID",
  "BKY_EMPTY_ALL": "Empty All",
  "BKY_GET_COUNT": "Get Count",
  "BKY_FINGERPRINT_DATABASE_TOOLTIP": "Manages fingerprint database.",
  "BKY_FINGERPRINT_LED": "üëÜFingerprint Sensor LED Control %1",
  "BKY_LED_ON": "ON",
  "BKY_LED_OFF": "OFF",
  "BKY_LED_BREATHING": "Breathing Effect",
  "BKY_LED_FLASHING": "Flashing",
  "BKY_FINGERPRINT_LED_TOOLTIP": "Controls LED of fingerprint sensor.",
  "BKY_TURBIDITY_SETUP": "üíßTurbidity Sensor Setup Analog Pin %1",
  "BKY_TURBIDITY_SETUP_TOOLTIP": "Initializes turbidity sensor and sets sampling array.",
  "BKY_TURBIDITY_CALIBRATE": "üíßTurbidity Sensor Zero Point Adjustment (Clear Water)",
  "BKY_TURBIDITY_CALIBRATE_TOOLTIP": "Measures reference voltage in clear water to calibrate zero point.",
  "BKY_TURBIDITY_READ": "üíßTurbidity Sensor Read Value: %1",
  "BKY_TURBIDITY_NTU": "Turbidity(NTU)",
  "BKY_TURBIDITY_VOLTAGE": "Voltage(V)",
  "BKY_TURBIDITY_RAW": "Raw Value",
  "BKY_TURBIDITY_READ_TOOLTIP": "Reads NTU, voltage or raw value from turbidity sensor.",
  "BKY_TURBIDITY_UPDATE": "üíßTurbidity Sensor Update Value",
  "BKY_TURBIDITY_UPDATE_TOOLTIP": "Samples sensor values and updates array. Call in loop().",
  "BKY_UV_SETUP": "üòéUV Sensor Setup Analog Pin %1",
  "BKY_UV_SETUP_TOOLTIP": "Initializes UV sensor and sets measurement variables.",
  "BKY_UV_CALIBRATE": "üòéUV Sensor Calibration %1 Reference Voltage: %2 mV",
  "BKY_CAL_INDOOR": "Indoor (Zero Point Adjustment)",
  "BKY_CAL_OUTDOOR": "Outdoor Reference Setting",
  "BKY_CAL_CUSTOM": "Custom Setting",
  "BKY_UV_CALIBRATE_TOOLTIP": "Calibrates UV sensor with indoor/outdoor reference.",
  "BKY_UV_READ": "üòéUV Sensor Read Value: %1",
  "BKY_UV_INDEX": "UV Index",
  "BKY_UV_VOLTAGE": "Voltage(V)",
  "BKY_UV_VOLTAGE_MV": "Voltage(mV)",
  "BKY_UV_RAW": "Raw Value",
  "BKY_UV_READ_TOOLTIP": "Reads UV index, voltage or raw value from UV sensor.",
  "BKY_DS1307_SETUP": "üïíSetup DS1307 RTC %1",
  "BKY_DS1307_SETUP_TIP": "Initialize DS1307 Real-Time Clock module.",
  "BKY_DS1307_SET_TIME": "üïíRTC %1 Set Time Year %2 Month %3 Date %4 Hour %5 Minute %6 Second %7",
  "BKY_DS1307_SET_TIME_TIP": "Set current date and time on RTC module.",
  "BKY_DS1307_GET_TIME": "üïíRTC %1 Get %2",
  "BKY_DS1307_GET_TIME_TIP": "Get specific time value from RTC module.",
  "BKY_DS1307_CLOCK_CONTROL": "üïíRTC %1 Clock %2",
  "BKY_DS1307_CLOCK_CONTROL_TIP": "Start or stop the RTC clock.",
  "BKY_DS1307_SQW_OUTPUT": "üïíRTC %1 SQW Output %2",
  "BKY_DS1307_SQW_OUTPUT_TIP": "Set SQW pin output type.",
  "BKY_DS1307_GET_TIME_STRING": "üïíRTC %1 Get Time String Format %2",
  "BKY_DS1307_GET_TIME_STRING_TIP": "Get formatted time string from RTC.",
  "BKY_DS1307_TIME_YEAR": "Year",
  "BKY_DS1307_TIME_MONTH": "Month",
  "BKY_DS1307_TIME_DATE": "Date",
  "BKY_DS1307_TIME_HOUR": "Hour",
  "BKY_DS1307_TIME_MINUTE": "Minute",
  "BKY_DS1307_TIME_SECOND": "Second",
  "BKY_DS1307_TIME_DAY_OF_WEEK": "Day of Week",
  "BKY_DS1307_CLOCK_START": "Start",
  "BKY_DS1307_CLOCK_STOP": "Stop",
  "BKY_DS1307_OUTPUT_HIGH": "High",
  "BKY_DS1307_OUTPUT_LOW": "Low",
  "BKY_DS1307_OUTPUT_1HZ": "1 Hz",
  "BKY_DS1307_OUTPUT_4KHZ": "4 kHz",
  "BKY_DS1307_OUTPUT_8KHZ": "8 kHz",
  "BKY_DS1307_OUTPUT_32KHZ": "32 kHz",
  "BKY_DS1307_FORMAT_DATETIME": "YYYY/MM/DD HH:MM:SS",
  "BKY_DS1307_FORMAT_DATE": "YYYY/MM/DD",
  "BKY_DS1307_FORMAT_TIME": "HH:MM:SS",
  "BKY_BMP280_SETUP": "‚õ∞Ô∏èPressure Altitude(BMP280) Sensor Setup",
  "BKY_BMP280_SETUP_TOOLTIP": "Initializes DFRobot BMP280 pressure temperature sensor.",
  "BKY_BMP280_SET_SEA_PRESSURE": "‚õ∞Ô∏èBMP280 Sea Level Pressure Setting: %1 hPa (Weather Data)",
  "BKY_BMP280_SET_SEA_PRESSURE_TOOLTIP": "Sets regional sea level pressure provided by weather service for accurate altitude measurement.",
  "BKY_BMP280_SET_REFERENCE": "‚õ∞Ô∏èBMP280 Set Current Position as %1 m Reference Point",
  "BKY_BMP280_SET_REFERENCE_TOOLTIP": "Sets current position as reference point for relative altitude measurement.",
  "BKY_BMP280_READ": "‚õ∞Ô∏èBMP280 Value | Item %1",
  "BKY_BMP280_PRES_PA": "Pressure(Pa)",
  "BKY_BMP280_PRES_HPA": "Pressure(hPa)",
  "BKY_BMP280_ALT": "Altitude(m)",
  "BKY_BMP280_REL_ALT": "Relative Altitude(m)",
  "BKY_BMP280_TEMP": "Temperature(‚ÑÉ)",
  "BKY_BMP280_READ_TOOLTIP": "Reads temperature, pressure, altitude values from BMP280 sensor.",
  "BKY_MPU_SETUP": "üõ∞Ô∏è Setup gyro sensor (MPU6050)",
  "BKY_MPU_SETUP_TOOLTIP": "Initialize MPU6050 over I2C (Wire) and include required libraries.",
  "BKY_MPU_UPDATE": "üõ∞Ô∏è Update MPU6050 values",
  "BKY_MPU_UPDATE_TIP": "Read sensor values to refresh internal state. Call repeatedly in loop().",
  "BKY_MPU_READ": "üõ∞Ô∏è Read MPU6050 value: %1",
  "BKY_MPU_TEMP": "Temperature(‚ÑÉ)",
  "BKY_MPU_ANGLE_X": "Angle X(¬∞)",
  "BKY_MPU_ANGLE_Y": "Angle Y(¬∞)",
  "BKY_MPU_ANGLE_Z": "Angle Z(¬∞)",
  "BKY_MPU_ACC_X": "Acc X(g)",
  "BKY_MPU_ACC_Y": "Acc Y(g)",
  "BKY_MPU_ACC_Z": "Acc Z(g)",
  "BKY_MPU_GYRO_X": "Gyro X(¬∞/s)",
  "BKY_MPU_GYRO_Y": "Gyro Y(¬∞/s)",
  "BKY_MPU_GYRO_Z": "Gyro Z(¬∞/s)",
  "BKY_MPU_READ_TIP": "Return the selected value after update().",
  "BKY_MPU_SET_OFFSETS": "üõ∞Ô∏è Set gyro offsets  X:%1  Y:%2  Z:%3",
  "BKY_MPU_SET_OFFSETS_TIP": "Manually set gyro offset values.",
  "BKY_MPU_CALC_OFFSETS": "üõ∞Ô∏è Auto-calc gyro offsets  Stabilize:%1ms  Measure:%2ms",
  "BKY_MPU_CALC_OFFSETS_TIP": "Place the board flat and run. Computes gyro offsets automatically.",
  "BKY_SGP30_SETUP": "üåø CO2 Sensor(SGP30) Setup I2C Start + Sensor Initialize | Initial eCO2 Base %1 | TVOC Base %2",
  "BKY_SGP30_SETUP_TOOLTIP": "Wire.begin(); sgp.begin(); (optional) setIAQBaseline(eCO2_base, TVOC_base)",
  "BKY_SGP30_MEASURE": "üåø SGP30 Execute Measurement (eCO2/TVOC Update)",
  "BKY_SGP30_MEASURE_TOOLTIP": "Updates eCO2(ppm), TVOC(ppb) with IAQmeasure() call",
  "BKY_SGP30_GET_ECO2": "üåø eCO2 (ppm)",
  "BKY_SGP30_GET_ECO2_TOOLTIP": "Last measured eCO2 value (ppm)",
  "BKY_SGP30_GET_TVOC": "üåø TVOC (ppb)",
  "BKY_SGP30_GET_TVOC_TOOLTIP": "Last measured TVOC value (ppb)",
  "BKY_SGP30_SET_HUM": "üåø Set Humidity Compensation (Absolute Humidity mg/m¬≥) %1",
  "BKY_SGP30_SET_HUM_TOOLTIP": "setHumidity(absolute_humidity)",
  "BKY_SGP30_SET_BASE": "üåø Set Baseline eCO2 %1 | TVOC %2",
  "BKY_SGP30_SET_BASE_TOOLTIP": "setIAQBaseline(eCO2_base, TVOC_base)",
  "BKY_SGP30_EE_SAVE_FIXED": "üåø SGP30 Save Baseline (EEPROM Fixed Address)",
  "BKY_SGP30_EE_SAVE_FIXED_TIP": "Saves eCO2‚Üíaddress0, TVOC‚Üíaddress2.",
  "BKY_SGP30_EE_LOAD_FIXED": "üåø SGP30 Load Baseline (EEPROM Fixed Address)",
  "BKY_SGP30_EE_LOAD_FIXED_TIP": "Reads from address 0/2 and applies setIAQBaseline",
  "BKY_SGP30_EE_SAVE": "üåø SGP30 Save Baseline | eCO2 Address %1 | TVOC Address %2",
  "BKY_SGP30_EE_SAVE_TIP": "Reads getIAQBaseline() and saves to specified address",
  "BKY_SGP30_EE_LOAD": "üåø SGP30 Load Baseline | eCO2 Address %1 | TVOC Address %2",
  "BKY_SGP30_EE_LOAD_TIP": "Reads from EEPROM and applies setIAQBaseline",
  "BKY_VL53_SETUP": "üìè Laser Distance Sensor(VL53L0X) Setup I2C Address %1",
  "BKY_VL53_SETUP_TIP": "Wire.begin(); vl53.begin(address); (e.g.: 0x29)",
  "BKY_VL53_SET_MODE": "üìè VL53L0X Mode Setting | Measurement Mode %1 | Precision %2",
  "BKY_VL53_MODE_SINGLE": "Single Measurement(eSingle)",
  "BKY_VL53_MODE_CONT": "Continuous Measurement(eContinuous)",
  "BKY_VL53_PREC_HIGH": "High Precision(eHigh)",
  "BKY_VL53_PREC_LOW": "Low Precision(eLow)",
  "BKY_VL53_SET_MODE_TIP": "setMode(mode, precision) call",
  "BKY_VL53_CTRL": "üìè VL53L0X Control %1",
  "BKY_VL53_START": "Start Measurement",
  "BKY_VL53_STOP": "Stop Measurement",
  "BKY_VL53_CTRL_TIP": "start()/stop()",
  "BKY_VL53_READ": "üìè VL53L0X Read %1",
  "BKY_VL53_VAL_DIST": "Distance(mm)",
  "BKY_VL53_VAL_AMBIENT": "Ambient Light(ambient)",
  "BKY_VL53_VAL_SIGNAL": "Signal Strength(signal)",
  "BKY_VL53_VAL_STATUS": "Status Code(status)",
  "BKY_VL53_READ_TIP": "getDistance()/getAmbientCount()/getSignalCount()/getStatus()",
  "BKY_SHT31_SETUP": "üå°Ô∏è Temperature Humidity(SHT31) Sensor Setup | I2C Address %1",
  "BKY_SHT31_SETUP_TIP": "Initializes SHT31 temperature/humidity sensor",
  "BKY_SHT31_READ": "üå°Ô∏è SHT31 Sensor Read %1",
  "BKY_SHT31_FAST": "Fast Read",
  "BKY_SHT31_SLOW": "Accurate Read",
  "BKY_SHT31_READ_TIP": "Reads temperature/humidity data from SHT31 sensor",
  "BKY_SHT31_CONNECTED": "üå°Ô∏è SHT31 Sensor Connected",
  "BKY_SHT31_CONNECTED_TIP": "Checks if SHT31 sensor is connected",
  "BKY_SHT31_GET_DATA": "üå°Ô∏è SHT31 %1",
  "BKY_SHT31_TEMP_C": "Temperature (¬∞C)",
  "BKY_SHT31_TEMP_F": "Temperature (¬∞F)",
  "BKY_SHT31_HUMIDITY": "Humidity (%)",
  "BKY_SHT31_GET_DATA_TIP": "Gets selected data from SHT31 sensor",
  "BKY_SHT31_HEATER": "üå°Ô∏è SHT31 Heater %1",
  "BKY_SHT31_HEAT_ON": "ON",
  "BKY_SHT31_HEAT_OFF": "OFF",
  "BKY_SHT31_HEATER_TIP": "Controls heater of SHT31 sensor",
  "BKY_SHT31_HEAT_STATUS": "üå°Ô∏è SHT31 Heater Running",
  "BKY_SHT31_HEAT_STATUS_TIP": "Checks if heater of SHT31 sensor is running",
  "BKY_SHT31_RESET": "üå°Ô∏è SHT31 Reset %1",
  "BKY_SHT31_SOFT": "Soft Reset",
  "BKY_SHT31_HARD": "Hard Reset",
  "BKY_SHT31_RESET_TIP": "Resets SHT31 sensor",
  "BKY_SHT31_ERROR": "üå°Ô∏è SHT31 Error Code",
  "BKY_SHT31_ERROR_TIP": "Gets last error code of SHT31 sensor",
  "BKY_COLOR_SENSOR_SETUP": "üé® Color Sensor(TCS34725) Setup",
  "BKY_COLOR_SENSOR_SETUP_TIP": "Sets up color sensor and initializes communication",
  "BKY_COLOR_SENSOR_INIT": "üé® Color Sensor Initialize",
  "BKY_COLOR_SENSOR_INIT_TIP": "Initializes color sensor and activates color detection",
  "BKY_COLOR_SENSOR_TRIGGER": "üé® Color Sensor Color Detection %1",
  "BKY_COLOR_SENSOR_RAW": "Raw Color",
  "BKY_COLOR_SENSOR_ADJUST": "Adjusted Color",
  "BKY_COLOR_SENSOR_TRIGGER_TIP": "Detects colors and calculates RGB/HSV data",
  "BKY_COLOR_SENSOR_GET_DATA": "üé® Color Sensor %1",
  "BKY_COLOR_SENSOR_RED": "Red (0~255)",
  "BKY_COLOR_SENSOR_GREEN": "Green (0~255)",
  "BKY_COLOR_SENSOR_BLUE": "Blue (0~255)",
  "BKY_COLOR_SENSOR_HUE": "Hue (0~360)",
  "BKY_COLOR_SENSOR_SATURATION": "Saturation (0~1)",
  "BKY_COLOR_SENSOR_VALUE": "Value (0~1)",
  "BKY_COLOR_SENSOR_GET_DATA_TIP": "Gets selected color data from color sensor",
  "BKY_COLOR_SENSOR_IS_COLOR": "üé® Color Sensor Color is %1?",
  "BKY_COLOR_SENSOR_COLOR_RED": "Red",
  "BKY_COLOR_SENSOR_COLOR_GREEN": "Green",
  "BKY_COLOR_SENSOR_COLOR_BLUE": "Blue",
  "BKY_COLOR_SENSOR_COLOR_YELLOW": "Yellow",
  "BKY_COLOR_SENSOR_COLOR_CYAN": "Cyan",
  "BKY_COLOR_SENSOR_COLOR_MAGENTA": "Magenta",
  "BKY_COLOR_SENSOR_IS_COLOR_TIP": "Checks if detected color matches selected color",
  "BKY_MLX90614_SETUP": "üå°Setup MLX90614 Temperature Sensor I2C address %1",
  "BKY_MLX90614_SETUP_TIP": "Initialize MLX90614 non-contact temperature sensor with I2C address.",
  "BKY_MLX90614_READ_TEMP": "üå°Read %1 temperature in %2",
  "BKY_MLX90614_READ_TEMP_TIP": "Read object or ambient temperature in Celsius or Fahrenheit.",
  "BKY_MLX90614_OBJECT": "Object",
  "BKY_MLX90614_AMBIENT": "Ambient",
  "BKY_MLX90614_CELSIUS": "Celsius (¬∞C)",
  "BKY_MLX90614_FAHRENHEIT": "Fahrenheit (¬∞F)",
  "BKY_APDS9960_SETUP": "üëã Gesture Sensor(APDS9960) Setup",
  "BKY_APDS9960_SETUP_TIP": "Initializes APDS9960 gesture/proximity/light sensor",
  "BKY_APDS9960_SENSOR_CONTROL": "üëã APDS9960 %1 Sensor %2 Interrupt %3",
  "BKY_APDS9960_LIGHT": "Light",
  "BKY_APDS9960_PROXIMITY": "Proximity",
  "BKY_APDS9960_GESTURE": "Gesture",
  "BKY_APDS9960_ENABLE": "Enable",
  "BKY_APDS9960_DISABLE": "Disable",
  "BKY_APDS9960_INT_ON": "Use",
  "BKY_APDS9960_INT_OFF": "Not Used",
  "BKY_APDS9960_SENSOR_CONTROL_TIP": "Controls specific sensors of APDS9960",
  "BKY_APDS9960_READ_LIGHT": "üëã APDS9960 %1 Light",
  "BKY_APDS9960_AMBIENT": "Ambient Light",
  "BKY_APDS9960_RED": "Red",
  "BKY_APDS9960_GREEN": "Green",
  "BKY_APDS9960_BLUE": "Blue",
  "BKY_APDS9960_READ_LIGHT_TIP": "Reads selected light data from APDS9960",
  "BKY_APDS9960_READ_PROXIMITY": "üëã APDS9960 Proximity Sensor Value",
  "BKY_APDS9960_READ_PROXIMITY_TIP": "Reads APDS9960 proximity sensor value (0-255)",
  "BKY_APDS9960_GESTURE_AVAILABLE": "üëã APDS9960 Gesture Detected",
  "BKY_APDS9960_GESTURE_AVAILABLE_TIP": "Checks if there are readable gestures",
  "BKY_APDS9960_GESTURE_CONTROL": "üëã APDS9960 Gesture %1 %2",
  "BKY_APDS9960_READ_ANY": "Read",
  "BKY_APDS9960_CHECK_SPECIFIC": "Check",
  "BKY_APDS9960_GESTURE_LEFT": "Left",
  "BKY_APDS9960_GESTURE_RIGHT": "Right",
  "BKY_APDS9960_GESTURE_UP": "Up",
  "BKY_APDS9960_GESTURE_DOWN": "Down",
  "BKY_APDS9960_GESTURE_NEAR": "Near",
  "BKY_APDS9960_GESTURE_FAR": "Far",
  "BKY_APDS9960_GESTURE_CONTROL_TIP": "Reads gestures or checks for specific gestures",
  "BKY_MAX30105_SETUP_BASIC": "‚ù§Ô∏èsetup heart rate sensor",
  "BKY_MAX30105_SETUP_BASIC_TIP": "Setup sensor for measuring heart rate and blood oxygen",
  "BKY_MAX30105_GET_HEARTRATE": "‚ù§Ô∏èget heart rate (BPM)",
  "BKY_MAX30105_GET_HEARTRATE_TIP": "Get heart rate in beats per minute",
  "BKY_MAX30105_GET_SPO2": "‚ù§Ô∏èget blood oxygen (%)",
  "BKY_MAX30105_GET_SPO2_TIP": "Get blood oxygen saturation percentage",
  "BKY_MAX30105_FINGER_DETECTED": "‚ù§Ô∏èfinger detected",
  "BKY_MAX30105_FINGER_DETECTED_TIP": "Check if finger is placed on sensor",
  "BKY_MAX30105_BEAT_DETECTED": "‚ù§Ô∏èheartbeat detected",
  "BKY_MAX30105_BEAT_DETECTED_TIP": "Returns true when a new heartbeat is detected",
  "BKY_MAX30105_SENSOR_READY": "‚ù§Ô∏èsensor ready",
  "BKY_MAX30105_SENSOR_READY_TIP": "Check if sensor has enough data for measurement",
  "BKY_MAX30105_GET_TEMP": "‚ù§Ô∏èget sensor temperature (¬∞C)",
  "BKY_MAX30105_GET_TEMP_TIP": "Get the sensor temperature in Celsius",
  "BKY_MAX30105_SETUP_ADVANCED": "‚ù§Ô∏èsetup sensor (advanced) for %1 with %2 power",
  "BKY_MAX30105_SETUP_ADVANCED_TIP": "Advanced sensor setup for experienced users",
  "BKY_MAX30105_GET_RED_RAW": "‚ù§Ô∏èget raw red LED value",
  "BKY_MAX30105_GET_RED_RAW_TIP": "Get raw red LED sensor value (advanced)",
  "BKY_MAX30105_GET_IR_RAW": "‚ù§Ô∏èget raw infrared LED value",
  "BKY_MAX30105_GET_IR_RAW_TIP": "Get raw infrared LED sensor value (advanced)",
  "BKY_MAX30105_MODE_HEARTRATE": "heart rate",
  "BKY_MAX30105_MODE_OXYGEN": "blood oxygen",
  "BKY_MAX30105_MODE_PROXIMITY": "finger detection",
  "BKY_MAX30105_POWER_LOW": "low",
  "BKY_MAX30105_POWER_MEDIUM": "medium",
  "BKY_MAX30105_POWER_HIGH": "high",
  "BKY_SI7021_SETUP": "üå°Ô∏èSi7021 Temperature Humidity Sensor Setup",
  "BKY_SI7021_SETUP_TOOLTIP": "Initializes Adafruit Si7021 temperature humidity sensor with I2C.",
  "BKY_SI7021_READ": "üå°Ô∏èSi7021 Read Value: %1",
  "BKY_SI7021_TEMP": "Temperature(‚ÑÉ)",
  "BKY_SI7021_HUMIDITY": "Humidity(%)",
  "BKY_SI7021_READ_TOOLTIP": "Reads temperature or humidity value from Si7021 sensor.",
  "BKY_SI7021_RESET": "üå°Ô∏èSi7021 Sensor Reset",
  "BKY_SI7021_RESET_TOOLTIP": "Resets Si7021 sensor.",
  "BKY_SI7021_SERIAL": "üå°Ô∏èSi7021 Serial Number Read: %1",
  "BKY_SERIAL_A": "Serial A",
  "BKY_SERIAL_B": "Serial B",
  "BKY_SI7021_SERIAL_TOOLTIP": "Reads serial number of Si7021 sensor.",
  "BKY_DCMOTOR_SETUP": "‚öôÔ∏è DC Motor(L9110) %1: A-pin %2 B-pin %3 Setup",
  "BKY_DCMOTOR_SETUP_TOOLTIP": "Sets DC motor to specific pins. This block includes DCmotor.h library.",
  "BKY_DCMOTOR_RUN": "‚öôÔ∏è DC Motor %1: Speed %2, Direction %3 Run",
  "BKY_DCMOTOR_CLOCKWISE": "Clockwise",
  "BKY_DCMOTOR_COUNTERCLOCKWISE": "Counterclockwise",
  "BKY_DCMOTOR_RUN_TOOLTIP": "Rotates DC motor at specified speed (0~255) and direction.",
  "BKY_DCMOTOR_STOP": "‚öôÔ∏è DC Motor %1: Stop",
  "BKY_DCMOTOR_STOP_TOOLTIP": "Stops DC motor.",
  "BKY_ACCELSTEPPER_SETUP": "üîÑ Stepper Motor(A4988) Driver(%1) %2: DIR pin %3, Step pin %4 Setup",
  "BKY_ACCELSTEPPER_DRIVER": "Driver(2pin)",
  "BKY_ACCELSTEPPER_FULL2WIRE": "2-wire Full Step",
  "BKY_ACCELSTEPPER_FULL4WIRE": "4-wire Full Step",
  "BKY_ACCELSTEPPER_HALF4WIRE": "4-wire Half Step",
  "BKY_ACCELSTEPPER_SETUP_TIP": "Initializes the stepper motor and sets the driver type and pins",
  "BKY_ACCELSTEPPER_SETTINGS": "üîÑ Stepper Motor %1: Max Speed %2, A-factor %3, Speed Setting %4, Step Setting %5",
  "BKY_ACCELSTEPPER_SETTINGS_TIP": "Sets the speed, acceleration, and step settings of the stepper motor",
  "BKY_ACCELSTEPPER_MOVE": "üîÑ Stepper Motor %1: %2 %3",
  "BKY_ACCELSTEPPER_MOVE_TO": "Move to Absolute Position",
  "BKY_ACCELSTEPPER_MOVE_REL": "Move to Relative Position",
  "BKY_ACCELSTEPPER_SET_POS": "Set Current Position",
  "BKY_ACCELSTEPPER_MOVE_TIP": "Sets or moves the position of the stepper motor",
  "BKY_ACCELSTEPPER_CONTROL": "üîÑ Stepper Motor %1: %2",
  "BKY_ACCELSTEPPER_RUN": "Run",
  "BKY_ACCELSTEPPER_RUN_SPEED": "Run at Speed",
  "BKY_ACCELSTEPPER_RUN_TO_POS": "Run to Position",
  "BKY_ACCELSTEPPER_STOP": "Stop",
  "BKY_ACCELSTEPPER_ENABLE": "Output Enable",
  "BKY_ACCELSTEPPER_DISABLE": "Output Disable",
  "BKY_ACCELSTEPPER_CONTROL_TIP": "Controls the stepper motor",
  "BKY_ACCELSTEPPER_STATUS": "üîÑ Stepper Motor %1: %2",
  "BKY_ACCELSTEPPER_CURRENT_POS": "Current Position",
  "BKY_ACCELSTEPPER_TARGET_POS": "Target Position",
  "BKY_ACCELSTEPPER_DISTANCE": "Remaining Distance",
  "BKY_ACCELSTEPPER_IS_RUNNING": "Is Running",
  "BKY_ACCELSTEPPER_SPEED": "Current Speed",
  "BKY_ACCELSTEPPER_STATUS_TIP": "Checks the status of the stepper motor",
  "BKY_STEPPERMULTI_SETUP": "‚ö° Stepper Motor(%1 & %2) %3",
  "BKY_STEPPERMULTI_28BYJ": "28BYJ-48",
  "BKY_STEPPERMULTI_ULN2003": "ULN2003",
  "BKY_STEPPERMULTI_CUSTOM": "Custom",
  "BKY_STEPPERMULTI_4PIN": "4-pin Connection",
  "BKY_STEPPERMULTI_2PIN": "2-pin Connection",
  "BKY_STEPPERMULTI_SETUP_PINS": "Pins: IN1 %1 IN2 %2 IN3 %3 IN4 %4",
  "BKY_STEPPERMULTI_SETUP_TIP": "Sets up StepperMulti motor (28BYJ-48 is 2048 steps/rotation)",
  "BKY_STEPPERMULTI_SPEED": "‚ö° Stepper Motor: No. %1 Rotation Speed %2 RPM",
  "BKY_STEPPERMULTI_SPEED_TIP": "Sets stepper motor rotation speed in RPM",
  "BKY_STEPPERMULTI_MOVE": "‚ö° Stepper Motor %1: Set to %2 %3",
  "BKY_STEPPERMULTI_STEP": "Steps",
  "BKY_STEPPERMULTI_ANGLE": "Angle",
  "BKY_STEPPERMULTI_MOVE_TIP": "Sets stepper motor to move specified number of steps or degrees",
  "BKY_STEPPERMULTI_RUN": "‚ö° Stepper Motor %1: Move",
  "BKY_STEPPERMULTI_RUN_TIP": "Actually moves stepper motor (must be called continuously in loop)",
  "BKY_PWMSERVO_SETUP": "ü¶æSetup PWM Servo Driver(pca9685) %1 I2C Address %2 PWM Frequency %3 Hz",
  "BKY_PWMSERVO_SETUP_TIP": "Setup 16-channel PWM servo driver with I2C connection.",
  "BKY_PWMSERVO_SERVO_ANGLE": "ü¶æServo Driver %1 Channel %2 Set Angle %3 degrees",
  "BKY_PWMSERVO_SERVO_ANGLE_TIP": "Control servo motor angle (0-180 degrees).",
  "BKY_PWMSERVO_SERVO_MICROSECONDS": "ü¶æServo Driver %1 Channel %2 Set Pulse %3 microseconds",
  "BKY_PWMSERVO_SERVO_MICROSECONDS_TIP": "Control servo motor with precise pulse width (500-2500 microseconds).",
  "BKY_PWMSERVO_PWM_OUTPUT": "ü¶æServo Driver %1 Channel %2 PWM Value %3 (0-4095)",
  "BKY_PWMSERVO_PWM_OUTPUT_TIP": "Set PWM output value for LED or motor control (0-4095).",
  "BKY_PWMSERVO_PWM_ADVANCED": "ü¶æServo Driver %1 Channel %2 PWM On %3 Off %4",
  "BKY_PWMSERVO_PWM_ADVANCED_TIP": "Advanced PWM control with on/off timing (0-4095).",
  "BKY_PWMSERVO_POWER": "ü¶æServo Driver %1 %2",
  "BKY_PWMSERVO_POWER_WAKEUP": "Wake Up",
  "BKY_PWMSERVO_POWER_SLEEP": "Sleep",
  "BKY_PWMSERVO_POWER_RESET": "Reset",
  "BKY_PWMSERVO_POWER_TIP": "Control servo driver power management.",
  "BKY_PWMSERVO_MULTI_SERVO": "ü¶æServo Driver %1 Set Multiple Servos Ch1 %2¬∞ Ch2 %3¬∞ Ch3 %4¬∞ Ch4 %5¬∞",
  "BKY_PWMSERVO_MULTI_SERVO_TIP": "Control multiple servo motors simultaneously.",
  "BKY_PWMSERVO_LED_BRIGHTNESS": "ü¶æServo Driver %1 Channel %2 LED Brightness %3 %",
  "BKY_PWMSERVO_LED_BRIGHTNESS_TIP": "Control LED brightness using PWM (0-100%).",
  "BKY_BUZZER_TONE_SETUP": "üéµ Buzzer Setup",
  "BKY_BUZZER_TONE_SETUP_TOOLTIP": "Initializes buzzer library and prepares functions needed for playing. Put this in setup() only once.",
  "BKY_BUZZER_PLAY_NOTE": "üéµ Buzzer: Digital pin %1 Play %2 note for %3 beats",
  "BKY_NOTE_C4": "C(C4)",
  "BKY_NOTE_CS4": "C#(C#4)",
  "BKY_NOTE_D4": "D(D4)",
  "BKY_NOTE_DS4": "D#(D#4)",
  "BKY_NOTE_E4": "E(E4)",
  "BKY_NOTE_F4": "F(F4)",
  "BKY_NOTE_FS4": "F#(F#4)",
  "BKY_NOTE_G4": "G(G4)",
  "BKY_NOTE_GS4": "G#(G#4)",
  "BKY_NOTE_A4": "A(A4)",
  "BKY_NOTE_AS4": "A#(A#4)",
  "BKY_NOTE_B4": "B(B4)",
  "BKY_NOTE_C5": "High C(C5)",
  "BKY_NOTE_REST": "(Rest)",
  "BKY_BEAT_WHOLE": "Whole Note (4)",
  "BKY_BEAT_DOTTED_HALF": "Dotted Half Note (3)",
  "BKY_BEAT_HALF": "Half Note (2)",
  "BKY_BEAT_DOTTED_QUARTER": "Dotted Quarter Note (1.5)",
  "BKY_BEAT_QUARTER": "Quarter Note (1)",
  "BKY_BEAT_EIGHTH": "Eighth Note (0.5)",
  "BKY_BEAT_SIXTEENTH": "Sixteenth Note (0.25)",
  "BKY_BUZZER_PLAY_NOTE_TOOLTIP": "Plays sound with connected buzzer according to musical scale and beats.",
  "BKY_BUZZER_SET_TEMPO": "üéµ Set Playing Speed(BPM) to %1",
  "BKY_BUZZER_SET_TEMPO_TOOLTIP": "Sets playing speed in beats per minute (BPM). Default is 120.",
  "BKY_BUZZER_STOP": "üéµ Buzzer: Digital pin %1 Stop Sound",
  "BKY_BUZZER_STOP_TOOLTIP": "Immediately stops buzzer sound.",
  "BKY_MP3_SETUP": "üéß MP3(KT403A) Setup Device %1 RX %2 TX %3 Initial Volume(0~30) %4",
  "BKY_MP3_DEV_SD": "SD Card(0x02)",
  "BKY_MP3_DEV_UDISK": "U Disk(0x01)",
  "BKY_MP3_SETUP_TIP": "SoftwareSerial mp3 creation, device selection, volume initialization",
  "BKY_MP3_PLAY_INDEX": "üéß MP3 Track Number Play %1",
  "BKY_MP3_PLAY_INDEX_TIP": "SpecifyMusicPlay(index)",
  "BKY_MP3_PLAY_FOLDER": "üéß MP3 Folder/File Play Folder %1 File %2",
  "BKY_MP3_PLAY_FOLDER_TIP": "SpecifyfolderPlay(folder, file)",
  "BKY_MP3_SET_VOLUME": "üéß MP3 Volume Setting(0~30) %1",
  "BKY_MP3_SET_VOLUME_TIP": "SetVolume(vol)",
  "BKY_MP3_CONTROL": "üéß MP3 Control %1",
  "BKY_MP3_NEXT": "Next Track",
  "BKY_MP3_PREV": "Previous Track",
  "BKY_MP3_PAUSE": "Pause",
  "BKY_MP3_RESUME": "Resume",
  "BKY_MP3_LOOP_ALL": "Loop All",
  "BKY_MP3_VOL_UP": "Volume‚Üë",
  "BKY_MP3_VOL_DOWN": "Volume‚Üì",
  "BKY_MP3_PRINT_RET": "Return Data Output",
  "BKY_MP3_CONTROL_TIP": "PlayNext/Previous, PlayPause/Resume, PlayLoop, Increase/DecreaseVolume, printReturnedData",
  "BKY_MP3_QUERY_STATUS": "üéß MP3 Status Value (0=Play Complete)",
  "BKY_MP3_QUERY_STATUS_TIP": "QueryPlayStatus(): 0 means playback complete",
  "BKY_SD_SETUP": "üíæSetup SD Card No %1 CS %2 MOSI %3 MISO %4 SCK %5",
  "BKY_SD_SETUP_TIP": "Initialize SD card with specified SPI pins.",
  "BKY_SD_OPEN_FILE": "üíæOpen File %1 Filename %2 Mode %3",
  "BKY_SD_OPEN_FILE_TIP": "Open file for reading or writing.",
  "BKY_SD_WRITE_FILE": "üíæWrite to File %1 Data %2",
  "BKY_SD_WRITE_FILE_TIP": "Write data to opened file.",
  "BKY_SD_READ_FILE": "üíæRead from File %1",
  "BKY_SD_READ_FILE_TIP": "Read data from opened file.",
  "BKY_SD_FILE_EXISTS": "üíæFile Exists %1 Filename %2",
  "BKY_SD_FILE_EXISTS_TIP": "Check if file exists on SD card.",
  "BKY_SD_FILE_SIZE": "üíæFile Size %1",
  "BKY_SD_FILE_SIZE_TIP": "Get size of opened file in bytes.",
  "BKY_SD_CLOSE_FILE": "üíæClose File %1",
  "BKY_SD_CLOSE_FILE_TIP": "Close opened file.",
  "BKY_SD_REMOVE_FILE": "üíæDelete File %1 Filename %2",
  "BKY_SD_REMOVE_FILE_TIP": "Delete file from SD card.",
  "BKY_SD_MAKE_DIRECTORY": "üíæCreate Directory %1 Path %2",
  "BKY_SD_MAKE_DIRECTORY_TIP": "Create directory on SD card.",
  "BKY_SD_FILE_AVAILABLE": "üíæAvailable Bytes %1",
  "BKY_SD_FILE_AVAILABLE_TIP": "Get number of bytes available for reading.",
  "BKY_SD_MODE_READ": "Read",
  "BKY_SD_MODE_WRITE": "Write",
  "BKY_IR_SETUP": "üì± IR Remote Receiver Setup Pin %1",
  "BKY_IR_SETUP_TIP": "Sets up IR remote receiver",
  "BKY_IR_AVAILABLE": "üì± IR Remote Signal Available?",
  "BKY_IR_AVAILABLE_TIP": "Checks if IR remote signal was received",
  "BKY_IR_READ_BUTTON": "üì± IR Remote Button Number",
  "BKY_IR_READ_BUTTON_TIP": "Returns number of pressed IR remote button (0-9, 10:CH-, 11:CH, 12:CH+, 20-22:play buttons, 30-32:volume buttons)",
  "BKY_IR_READ_RAW": "üì± IR Remote Raw Code Value",
  "BKY_IR_READ_RAW_TIP": "Returns raw code value of IR remote (for advanced users)",
  "BKY_IR_BUTTON_IS": "üì± IR Remote Button is %1?",
  "BKY_IR_BTN_0": "0",
  "BKY_IR_BTN_1": "1",
  "BKY_IR_BTN_2": "2",
  "BKY_IR_BTN_3": "3",
  "BKY_IR_BTN_4": "4",
  "BKY_IR_BTN_5": "5",
  "BKY_IR_BTN_6": "6",
  "BKY_IR_BTN_7": "7",
  "BKY_IR_BTN_8": "8",
  "BKY_IR_BTN_9": "9",
  "BKY_IR_BTN_CH_DOWN": "CH-",
  "BKY_IR_BTN_CH": "CH",
  "BKY_IR_BTN_CH_UP": "CH+",
  "BKY_IR_BTN_PREV": "Previous",
  "BKY_IR_BTN_NEXT": "Next",
  "BKY_IR_BTN_PLAY": "Play",
  "BKY_IR_BTN_VOL_DOWN": "Volume-",
  "BKY_IR_BTN_VOL_UP": "Volume+",
  "BKY_IR_BUTTON_IS_TIP": "Checks if specific button was pressed on IR remote",
  "BKY_RF433_SETUP": "üì° RF433MHz Radio Communication Transmit/Receive",
  "BKY_RF433_SETUP_TIP": "Initializes RF433MHz wireless communication library",
  "BKY_RF433_CONFIG": "üì° RF433MHz Transmit Pin %1, %2 Data Transmit",
  "BKY_RF433_CONFIG_TIP": "Sets RF433MHz transmit pin and sends message",
  "BKY_RF433_RX_SETUP": "üì° RF433MHz Receive Pin %1 Transmission Speed %2 Setup",
  "BKY_RF433_RX_SETUP_TIP": "Sets RF433MHz receive pin and transmission speed",
  "BKY_RF433_RX_START": "üì° RF433MHz 1.Prepare to Store Received Data in Buffer",
  "BKY_RF433_RX_START_TIP": "Starts RF433MHz receiver to prepare receiving data",
  "BKY_RF433_HAVE_MESSAGE": "üì° RF433MHz 2.If Received Data Available?",
  "BKY_RF433_HAVE_MESSAGE_TIP": "Checks if received message is available",
  "BKY_RF433_GET_MESSAGE": "üì° RF433MHz 3.Store Received Data in Buffer",
  "BKY_RF433_GET_MESSAGE_TIP": "Stores received message in buffer",
  "BKY_RF433_READ_DATA": "üì° RF433MHz: Read Received Data",
  "BKY_RF433_READ_DATA_TIP": "Reads received data stored in buffer",
  "BKY_GPS_SETUP_TGPS": "üì∂ GPS Setup Serial %1 Baud Rate %2",
  "BKY_GPS_SETUP_TGPS2": "‚Ü≥ (When SoftwareSerial selected) RX Pin %1 TX Pin %2",
  "BKY_GPS_SETUP_TGPS_TIP": "TinyGPS++ initialization and start selected serial",
  "BKY_GPS_UPDATE": "üì∂ GPS Update (Serial Receive ‚Üí Parser)",
  "BKY_GPS_UPDATE_TIP": "Passes received NMEA characters to gps.encode()",
  "BKY_GPS_READ": "üì∂ GPS Read Value %1",
  "BKY_GPS_LAT": "Latitude",
  "BKY_GPS_LNG": "Longitude",
  "BKY_GPS_SPEED": "Speed(km/h)",
  "BKY_GPS_ALT": "Altitude(m)",
  "BKY_GPS_COURSE": "Course(deg)",
  "BKY_GPS_SATS": "Satellite Count",
  "BKY_GPS_HDOP": "HDOP",
  "BKY_GPS_YEAR": "Year",
  "BKY_GPS_MONTH": "Month",
  "BKY_GPS_DAY": "Day",
  "BKY_GPS_HOUR": "Hour",
  "BKY_GPS_MIN": "Minute",
  "BKY_GPS_SEC": "Second",
  "BKY_GPS_READ_TIP": "Returns required value from TinyGPS++ member",
  "BKY_GPS_HAS_FIX": "üì∂ GPS Fixed (FIX)?",
  "BKY_GPS_HAS_FIX_TIP": "gps.location.isValid() ‚Üí 1/0",
  "BKY_GPS_BETWEEN": "üì∂ Two Coordinate Calculation | Calculation Type %1 | Lat1 %2 Lng1 %3 Lat2 %4 Lng2 %5",
  "BKY_GPS_DIST_M": "Distance(m)",
  "BKY_GPS_COURSE_DEG": "Bearing(deg)",
  "BKY_GPS_BETWEEN_TIP": "distanceBetween()/courseTo() calculation",
  "BKY_GPS_CARDINAL": "üì∂ Cardinal Direction (16-point) | Angle %1",
  "BKY_GPS_CARDINAL_TIP": "cardinal(deg) ‚Üí N, NE, E ...",
  "BKY_UTIL_SERIAL_BEGIN": "1. Serial Communication Setting (Speed: %1)",
  "BKY_UTIL_SERIAL_BEGIN_TOOLTIP": "Starts hardware serial communication.",
  "BKY_UTIL_SERIAL_AVAILABLE_CHECK": "2. If Serial Communication Available",
  "BKY_UTIL_SERIAL_AVAILABLE_CHECK_TOOLTIP": "Checks if data received via serial port is available.",
  "BKY_UTIL_SERIAL_READ": "3. %1 Read",
  "BKY_SERIAL_READ_BYTE": "Byte",
  "BKY_SERIAL_READ_STRING": "String",
  "BKY_SERIAL_READ_STRING_UNTIL": "Read Until Newline",
  "BKY_UTIL_SERIAL_READ_TOOLTIP": "Reads data from serial port. Byte: one byte, String: entire string, Until newline: read until \\n",
  "BKY_UTIL_SERIAL_PRINT": "4. Serial. %1 %2 Value Output",
  "BKY_SERIAL_PRINTLN": "println",
  "BKY_SERIAL_PRINT": "print",
  "BKY_UTIL_SERIAL_PRINT_TOOLTIP": "Outputs data to serial monitor.",
  "BKY_UTIL_BT_SETUP": "1. Bluetooth: Tx %1, Rx %2 Speed %3 Setup",
  "BKY_UTIL_BT_SETUP_TOOLTIP": "Sets up Bluetooth communication using software serial.",
  "BKY_UTIL_BT_AVAILABLE": "2. Bluetooth: If Received Data Available",
  "BKY_UTIL_BT_AVAILABLE_TOOLTIP": "Checks if data received via Bluetooth is available.",
  "BKY_UTIL_BT_READ": "3. %1 Read",
  "BKY_UTIL_BT_READ_TOOLTIP": "Reads data from Bluetooth. Byte: one byte, String: entire string, Until newline: read until \\n",
  "BKY_UTIL_BT_READ_BUFFER": "3. Byte Read (buffer, length %1)",
  "BKY_UTIL_BT_READ_BUFFER_TOOLTIP": "Reads specified length of data from buffer.",
  "BKY_UTIL_BT_PRINT": "4. Bluetooth: %1 %2 Data Output",
  "BKY_UTIL_BT_PRINT_TOOLTIP": "Sends data via Bluetooth.",
  "BKY_UTIL_MILLIS": "millis() Call",
  "BKY_UTIL_MILLIS_TOOLTIP": "Returns elapsed time since program start in millisecond units.",
  "BKY_UTIL_MAP": "‚àû Map Variable %1 from %2, %3 to %4, %5",
  "BKY_UTIL_MAP_TOOLTIP": "Proportionally converts numbers from one range to another range.",
  "BKY_UTIL_CONSTRAIN": "‚àû Constrain Variable %1 between %2 and %3",
  "BKY_UTIL_CONSTRAIN_TOOLTIP": "Constrains number value range.",
  "BKY_UTIL_CONVERT": "‚àû Convert %1 to %2",
  "BKY_INT": "Integer",
  "BKY_FLOAT": "Float",
  "BKY_STRING": "String",
  "BKY_UTIL_CONVERT_TOOLTIP": "Converts value to different data type.",
  "BKY_UTIL_TO_CHAR": "‚àû ASCII %1 to Character",
  "BKY_UTIL_TO_CHAR_TOOLTIP": "Returns character corresponding to ASCII number code.",
  "BKY_UTIL_TO_ASCII": "‚àû %1 to ASCII Code",
  "BKY_UTIL_TO_ASCII_TOOLTIP": "Returns ASCII number code corresponding to character.",
  "BKY_UTIL_I2C_SCANNER": "I2C Address Scanner",
  "BKY_UTIL_I2C_SCANNER_TOOLTIP": "Scans addresses of connected I2C devices to serial monitor.",
  "BKY_UTIL_I2C_READ_ADDRESS": "I2C Address",
  "BKY_UTIL_I2C_READ_ADDRESS_TOOLTIP": "Gets I2C scan result address as string.",
  "BKY_SERIAL_PARSE_DATA": "Parse Received Data by %1 Separator",
  "BKY_SERIAL_PARSE_DATA_TOOLTIP": "Cuts and parses received string by specific separator.",
  "BKY_SERIAL_GET_PARSED_VALUE": "%1th Parsed Value",
  "BKY_SERIAL_GET_PARSED_VALUE_TOOLTIP": "Gets parsed data piece by index.",
  "BKY_SERIAL_GET_PARSED_COUNT": "Number of Parsed Values",
  "BKY_SERIAL_GET_PARSED_COUNT_TOOLTIP": "Returns total number of parsed data pieces.",
  "BKY_SERIAL_CONVERT_TO_NUMBER": "Convert %1 to Number",
  "BKY_SERIAL_CONVERT_TO_NUMBER_TOOLTIP": "Converts String to number (float).",
  "BKY_SERIAL_GET_RAW_DATA": "Received Raw Data",
  "BKY_SERIAL_GET_RAW_DATA_TOOLTIP": "Returns entire received raw string.",
  "BKY_SERIAL_CLEAR_BUFFER": "Clear Stored Data",
  "BKY_SERIAL_CLEAR_BUFFER_TOOLTIP": "Clears internal receive buffer.",
  "BKY_DEVELOPER_INFO_BLOCK": "üë®‚Äçüíª Developer: Kim Seok-jeon | Contact: alphaco@kakao.com_Right_Click",
  "BKY_DEVELOPER_INFO_BLOCK_TOOLTIP": "Right-click this block and select 'Help' to visit developer website.",
  "BKY_CUSTOM_AD_BLOCK": "üöÄ MCU(Arduino, Ma:bit, ESP32, Pico) Usage Guide, BRIXEL Introduction_Right_Click",
  "BKY_CUSTOM_AD_BLOCK_TOOLTIP": "Right-click this block and select 'Help' to visit website.",
  "BKY_GO_TO_AI_ROBOT_SCRATCH": "ü§ñ Go to AI*ROBOT Scratch_Right_Click",
  "BKY_GO_TO_AI_ROBOT_SCRATCH_TOOLTIP": "Right-click block and select 'Help' to control hardware with AI in AI*ROBOT Scratch.",
  "BKY_GO_TO_K12_PROJECTHUB": "ü§ñ Go to K12_ProjectHub_Right_Click",
  "BKY_GO_TO_K12_PROJECTHUB_TOOLTIP": "Right-click block and select 'Help' to explore various examples in k12-projecthub.",
  "BKY_MAIN_FLAG": "Provides basic Arduino coding structure.",
  "BKY_MAIN_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_PIN_FLAG": "All pin-related controls for Arduino are available.",
  "BKY_PIN_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_CONTROL_FLAG": "Provides Arduino conditional and loop structures.",
  "BKY_CONTROL_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_LOGIC_FLAG": "Provides logical expressions.",
  "BKY_LOGIC_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_MATH_FLAG": "Provides mathematical symbols and functions.",
  "BKY_MATH_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_TEXT_FLAG": "Provides string processing.",
  "BKY_TEXT_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_COLOUR_FLAG": "Provides color selection and combinations.",
  "BKY_COLOUR_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_VAR_FLAG": "Allows creating number variables and string variables.",
  "BKY_VAR_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_FUNC_FLAG": "Allows creating user-defined functions.",
  "BKY_FUNC_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_DIS01_FLAG": "Provides control blocks for display output devices.",
  "BKY_DIS01_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_DIS02_FLAG": "Provides control blocks for advanced display output devices.",
  "BKY_DIS02_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_SENSOR01_FLAG": "Provides general sensor control blocks.",
  "BKY_SENSOR01_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_SENSOR02_FLAG": "Provides advanced I2C sensor control blocks.",
  "BKY_SENSOR02_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_MOTOR_FLAG": "Provides motor control blocks.",
  "BKY_MOTOR_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_OUTPUT_FLAG": "Provides output device control blocks.",
  "BKY_OUTPUT_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_COMM_FLAG": "Provides control blocks for communication devices.",
  "BKY_COMM_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "BKY_UTIL_FLAG": "Provides various useful control blocks for coding.",
  "BKY_UTIL_FLAG_TOOLTIP": "Right-click this block and select 'Help' for usage guide.",
  "sectionTitleConnection": "üîó PC Agent Connection",
  "connectionStatusConnected": "‚úÖ Connected to PC Agent",
  "connectionStatusDisconnected": "‚ùå Not connected to PC Agent",
  "portDisabledMessage": "* Available after connecting to PC Agent",
  "_comment": "PC Agent Communication and Real-time Log Messages - English Translation",
  "agent_compile_start": "Starting code compilation.",
  "agent_compile_mode": "Current mode: {modeName}",
  "agent_compile_no_code": "No code to compile.",
  "agent_compile_no_connection": "‚ùå Unable to connect to PC Agent. Please check if the agent is running.",
  "agent_compile_success": "‚úÖ Compilation completed! Size: {size}",
  "agent_compile_fail": "‚ùå Compilation failed: {errorMsg}",
  "agent_compile_request_fail": "‚ùå Compilation request failed: {errorMsg}",
  "agent_upload_need_compile": "Please compile first before uploading.",
  "agent_upload_request_sent": "üì§ Upload request sent.",
  "agent_upload_fail": "‚ùå Upload failed: {errorMsg}",
  "agent_upload_no_connection": "Unable to connect to PC Agent.",
  "agent_upload_request_fail": "‚ùå Upload request failed: {errorMsg}",
  "agent_port_request": "üîç Requesting port list...",
  "agent_port_not_available": "‚ö†Ô∏è Unable to retrieve port list.",
  "agent_port_request_fail": "Port list request failed.",
  "agent_port_list_updated": "Port list updated ({portCount} ports)",
  "websocket_connected": "üåê Connected to PC Agent.",
  "websocket_disconnected": "üîå Disconnected from PC Agent.",
  "websocket_error": "‚ùå PC Agent connection error occurred.",
  "websocket_unavailable": "‚ö†Ô∏è Real-time communication is unavailable.",
  "compile_progress": "üîÑ Compilation progress: {message}",
  "upload_progress": "üì§ Upload progress: {message}",
  "agent_error": "‚ùå Error: {message}",
  "agent_connected": "üîó Connected to PC Agent.",
  "agent_not_found": "‚ö†Ô∏è PC Agent not found. Please install and run the agent.",
  "agent_connection_required": "‚ùå Unable to connect to PC Agent. Please run the agent first.",
  "system_ready": "‚úÖ Static Web Arduino IDE initialization complete",
  "system_init_fail": "‚ö†Ô∏è System initialization failed.",
  "mode_switch_block": "Switched to Block Coding mode.",
  "mode_switch_text": "Switched to Text Coding mode.",
  "file_save_block": "{fileName} block file has been saved.",
  "file_save_sketch": "{fileName} sketch file has been saved.",
  "file_save_fail_block": "Failed to save block file.",
  "file_save_fail_sketch": "Failed to save sketch file.",
  "file_load_block": "{fileName} block file has been loaded.",
  "file_load_sketch": "{fileName} sketch file has been loaded.",
  "file_load_fail": "File load failed: {errorMsg}",
  "code_copy_no_content": "No code to copy.",
  "code_copy_success": "Code copied to clipboard.",
  "code_copy_fail": "Failed to copy to clipboard.",
  "project_export_success": "Project exported: {fileName}",
  "project_export_fail": "Project export failed.",
  "project_import_invalid": "Please select a valid project file (.json).",
  "project_import_success": "Project imported: {projectName}",
  "project_import_fail": "Project import failed: {errorMsg}",
  "language_change_success": "Language changed to {lang}.",
  "language_change_fail": "Language change failed: {errorMsg}",
  "agent_status_connected": "‚úÖ Connected to PC Agent",
  "agent_status_disconnected": "‚åõ Not connected to PC Agent",
  "mode_block": "Block Coding",
  "mode_text": "Text Coding",
  "mode_switch_message": "Switched to {modeName} mode.",
  "loading_system_init": "Initializing system...",
  "loading_system_init_en": "Initializing system...",
  "loading_system_init_ja": "„Ç∑„Çπ„ÉÜ„É†ÂàùÊúüÂåñ‰∏≠...",
  "loading_system_init_zh": "Á≥ªÁªüÂàùÂßãÂåñ‰∏≠...",
  "loading_system_init_es": "Inicializando sistema...",
  "connection_status_connected": "‚úÖ Connected to PC Agent",
  "connection_status_disconnected": "‚åõ Not connected to PC Agent",
  "i18n_init_start": "Starting i18n initialization",
  "i18n_basic_complete": "Basic i18n initialization complete",
  "i18n_blockly_load_complete": "Blockly official translation file loaded",
  "i18n_blockly_load_fail": "Failed to load Blockly official translation, using defaults",
  "i18n_blockly_setlocale_complete": "Blockly.setLocale applied successfully",
  "i18n_custom_inject_complete": "Custom translation messages injected",
  "i18n_init_fail": "Translation system initialization failed",
  "language_json_load_fail": "Failed to load {newLanguage}.json",
  "monaco_ltr_reset_complete": "Monaco editor LTR direction reset complete",
  "BKY_OLED_HAN_SETUP": "üñ•Ô∏èSetup OLED(SSD1306) Korean Display X0~12, Y0~6",
  "BKY_OLED_HAN_SETUP_TIP": "Initialize OLED display with Korean text support. Must be used first.",
  "BKY_OLED_HAN_CLEAR": "üñ•Ô∏èClear OLED Display",
  "BKY_OLED_HAN_CLEAR_TIP": "Clear all content on the OLED display.",
  "BKY_OLED_HAN_PRINT_TEXT": "üñ•Ô∏èPrint text %1 at X %2 Y %3 %4",
  "BKY_OLED_HAN_PRINT_TEXT_TIP": "Print any text (Korean, English, numbers, mixed) at specified position.",
  "BKY_OLED_HAN_BIG_DIGIT": "üñ•Ô∏èShow big digit %1 at X %2 Y %3 %4",
  "BKY_OLED_HAN_BIG_DIGIT_TIP": "Display a large digit (0-9) using 7-segment style.",
  "BKY_OLED_HAN_DRAW_BAR": "üñ•Ô∏èDraw bar graph at X %1 Y %2 value %3",
  "BKY_OLED_HAN_DRAW_BAR_TIP": "Draw a horizontal bar graph with value (0-128).",
  "BKY_OLED_HAN_MODE_NORMAL": "Normal",
  "BKY_OLED_HAN_MODE_INVERSE": "Inverse",
  "BKY_SH1106_SETUP": "üñ•Ô∏èSetup OLED(SH1106) Korean Display X0~12, Y0~6",
  "BKY_SH1106_SETUP_TIP": "Initialize SH1106 OLED display for Korean text output",
  "BKY_SH1106_CLEAR": "üñ•Ô∏èClear OLED display",
  "BKY_SH1106_CLEAR_TIP": "Clear all content from OLED display",
  "BKY_SH1106_PRINT_TEXT": "üñ•Ô∏èPrint text %1 at X %2 Y %3 style %4",
  "BKY_SH1106_PRINT_TEXT_TIP": "Print Korean or English text at specified position",
  "BKY_SH1106_LARGE_NUMBER": "üñ•Ô∏èDisplay large number %1 at X %2 Y %3 style %4",
  "BKY_SH1106_LARGE_NUMBER_TIP": "Display large bitmap number (0-9) or colon (:)",
  "BKY_SH1106_DRAW_BAR": "üñ•Ô∏èDraw bar graph at X %1 Y %2 value %3",
  "BKY_SH1106_DRAW_BAR_TIP": "Draw horizontal bar graph with specified value (0-128)",
  "BKY_SH1106_STYLE_NORMAL": "Normal",
  "BKY_SH1106_STYLE_INVERSE": "Inverse",
  "BKY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF": "ADD ELSEIF",
  "BKY_CONTROLS_IF_IF_TITLE_IF": "Existing IF statement",
  "BKY_CONTROLS_IF_ELSE_TITLE_ELSE": "ADD ELSE"
}
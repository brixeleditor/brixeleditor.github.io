{
  "mainTitle": "Brixel 웹에디터 for Arduino",
  "blockModeBtn": "블록코딩",
  "textModeBtn": "텍스트코딩",
  "compileBtn": "⚙️ 코드 컴파일",
  "uploadBtn": "📤 보드에 업로드",
  "blocklyHeaderTitle": "🧩 브릭셀 블록 코딩 에디터",
  "codeTitle": "📄 실시간 Arduino C++ 코드",
  "codeTitle_textMode": "📝 Arduino C++ 코드 에디터",
  "copyBtn": "📋 복사",
  "codePreview_initial": "// 블록을 배치하면 여기에 코드가 생성됩니다.",
  "sectionTitleLanguage": "🌍 언어 및 파일 관리",
  "labelLanguage": "언어:",
  "langKo": "한국어",
  "langEn": "English",
  "langJa": "日本語",
  "langZh": "中文",
  "langEs": "Español",
  "languageStatus_official": "✓ 공식 지원",
  "languageStatus_browser": "🌍 브라우저 번역",
  "labelFilename": "파일명:",
  "fileNameInput_placeholder": "arduino_project",
  "saveBtn": "💾 저장",
  "loadBtn": "📂 불러오기",
  "sectionTitleAgent": "🤖 PC 에이전트 코드 입력",
  "agentIdInput_placeholder": "PC 에이전트 페어링 코드",
  "sectionTitleBoard": "🎯 보드 선택",
  "boardGroupArduino_label": "🔵 Arduino 계열",
  "boardUno": "Arduino Uno",
  "boardNano": "Arduino Nano",
  "boardMega": "Arduino Mega",
  "boardGroupEsp32_label": "🔴 ESP32 계열",
  "boardEsp32": "ESP32",
  "boardEsp32s2": "ESP32-S2",
  "boardEsp32c3": "ESP32-C3",
  "boardEsp32s3": "ESP32-S3",
  "boardGroupPico_label": "🟣 Raspberry Pi",
  "boardPico": "Raspberry Pi Pico",
  "boardPicow": "Raspberry Pi Pico W",
  "sectionTitlePort": "🔌 업로드 포트",
  "portAutoSelect": "포트를 새로고침 하세요.",
  "refreshPortsBtn_title": "포트 목록 새로고침",
  "sectionTitleDownload": "⬇️ 에이전트 다운로드",
  "agentOsWin": "Windows 용",
  "agentOsMac": "macOS 용",
  "agentOsLinux": "Linux 용",
  "downloadAgentBtn_title": "에이전트 다운로드",
  "consoleHeader": "📺 실시간 로그",
  "loadingText": "시스템 초기화 중...",
  "loadingText_en": "Initializing system...",
  "loadingText_ja": "システム初期化中...",
  "loadingText_zh": "系统初始化中...",
  "loadingText_es": "Inicializando sistema...",
  "js_alert_downloadAgent": "{osName}용 Arduino 에이전트를 다운로드합니다.\n실제 구현에서는 해당 OS용 설치 파일을 다운로드하게 됩니다.",
  "js_log_downloadRequest": "{osName}용 에이전트 다운로드 요청",
  "js_log_modeSwitch": "모드 전환: {modeName}",
  "js_log_modeBlock": "블록코딩",
  "js_log_modeText": "텍스트코딩",
  "js_log_codeCopiedSuccess": "✅ 코드가 클립보드에 복사되었습니다.",
  "js_log_codeCopiedFail": "⚠ 코드 복사에 실패했습니다.",
  "js_log_blockFileSaved": "✅ 블록 파일이 저장되었습니다: {fileName}",
  "js_log_blockFileSaveFail": "⚠ 블록 파일 저장에 실패했습니다.",
  "js_log_sketchFileSaved": "✅ 스케치 파일이 저장되었습니다: {fileName}",
  "js_log_sketchFileSaveFail": "⚠ 스케치 파일 저장에 실패했습니다.",
  "js_log_blockFileLoaded": "✅ 블록 파일이 로드되었습니다: {fileName}",
  "js_log_sketchFileLoaded": "✅ 스케치 파일이 로드되었습니다: {fileName}",
  "js_log_fileLoadFail": "⚠ 파일 로드에 실패했습니다: {errorMsg}",
  "js_log_compileStart": "---",
  "js_log_compileStart_mode": "컴파일 시작 ({modeName} 모드)",
  "js_log_noCodeToCompile": "⚠ 컴파일할 코드가 없습니다.",
  "js_log_compileComplete": "✅ 컴파일 완료 - 크기: {size}",
  "js_log_compileFail": "⚠ 컴파일 실패: {errorMsg}",
  "js_log_compileRequestFail": "⚠ 컴파일 요청 실패: {errorMsg}",
  "js_log_uploadPreCompile": "⚠ 먼저 코드를 컴파일해주세요.",
  "js_log_uploadNoAgentId": "⚠ 에이전트 ID를 입력하세요.",
  "js_log_uploadRequestSent": "📤 업로드 요청을 전송했습니다...",
  "js_log_uploadRequestFail": "⚠ 업로드 요청 실패: {errorMsg}",
  "js_log_requestingPorts": "🔍 에이전트({agentId})로부터 포트 목록을 요청합니다...",
  "js_log_portListUpdated": "✅ 포트 목록을 업데이트했습니다. ({portCount}개 포트 발견)",
  "js_log_serverConnected": "🔗 서버에 연결되었습니다.",
  "js_log_serverError": "⚠ 서버 연결 오류",
  "js_log_langChanged": "언어가 {lang}로 변경되었습니다.",
  "js_log_langChangeFail": "언어 변경에 실패했습니다: {errorMsg}",
  "js_log_initFail": "⚠ 시스템 초기화에 실패했습니다.",
  "template_arduino": "void setup() {\n  pinMode(13, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(13, HIGH);\n  delay(500);\n  digitalWrite(13, LOW);\n  delay(500);\n}",
  "template_esp32": "void setup() {\n  pinMode(2, OUTPUT); // 내장 LED\n  Serial.begin(115200);\n  Serial.println(\"ESP32 시작!\");\n}\n\nvoid loop() {\n  digitalWrite(2, HIGH);\n  delay(1000);\n  digitalWrite(2, LOW);\n  delay(1000);\n}",
  "template_pico": "void setup() {\n  pinMode(LED_BUILTIN, OUTPUT);\n  Serial.begin(115200);\n  Serial.println(\"Raspberry Pi Pico 시작!\");\n}\n\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);\n  delay(500);\n  digitalWrite(LED_BUILTIN, LOW);\n  delay(500);\n}",
  "ARDUINO_SETUP": "Arduino 초기 설정",
  "ARDUINO_LOOP": "Arduino 반복 실행", 
  "ARDUINO_DIGITAL_WRITE": "디지털 출력 %1 핀 %2",
  "ARDUINO_DIGITAL_READ": "디지털 입력 %1 핀",
  "ARDUINO_ANALOG_WRITE": "아날로그 출력 %1 핀 %2",
  "ARDUINO_ANALOG_READ": "아날로그 입력 %1 핀", 
  "ARDUINO_DELAY": "%1 밀리초 대기",
  "ARDUINO_SERIAL_BEGIN": "시리얼 통신 %1 속도로 시작",
  "ARDUINO_SERIAL_PRINT": "시리얼로 %1 출력",
  "SENSOR_ULTRASONIC": "초음파 센서 거리 측정",
  "SENSOR_TEMPERATURE": "온도 센서 값",
  "SENSOR_LIGHT": "조도 센서 값", 
  "SENSOR_BUTTON": "버튼 %1 핀 상태",
  "ACTUATOR_LED": "LED %1 핀 %2",
  "ACTUATOR_SERVO": "서보모터 %1 핀 %2 도로 회전",
  "ACTUATOR_BUZZER": "부저 %1 핀에서 %2 소리",
  "ACTUATOR_MOTOR": "모터 %1 핀 %2 속도",
  "PIN_HIGH": "HIGH",
  "PIN_LOW": "LOW", 
  "PIN_NUMBER": "핀 번호",
  "PIN_VALUE": "값",
  "MILLISECONDS": "밀리초",
  "BKY_PAGE_TITLE": "MCU 블록코딩 웹에디터",
  "BKY_ARDUINO_REALTIME_CODE": "실시간 Arduino C++ 코드",
  "BKY_COPY_BUTTON": "복사",
  "BKY_LANGUAGE_LABEL": "언어:",
  "BKY_SAVE_BUTTON": "저장",
  "BKY_LOAD_BUTTON": "불러오기",
  "BKY_FILE_NAME_PLACEHOLDER": "파일 이름",
  "BKY_ALERT_SAVE_FAILED": "블록 저장에 실패했습니다.",
  "BKY_ALERT_LOAD_FAILED": "올바른 블록 파일이 아니거나 파일이 손상되었습니다.",
  "BKY_CATEGORY_MAIN": "🎯 시작",
  "BKY_CATEGORY_PIN_CONTROL": "📌 핀 제어",
  "BKY_CATEGORY_CONTROL": "🔄 제어",
  "BKY_CATEGORY_LOGIC": "🔧 논리",
  "BKY_CATEGORY_MATH": "🔢 계산",
  "BKY_CATEGORY_TEXT": "📜 문자",
  "BKY_CATEGORY_COLOR": "🎨 색상",
  "BKY_CATEGORY_VARIABLES": "📦 변수",
  "BKY_CATEGORY_LIST": "🗂️ 리스트",
  "BKY_CATEGORY_FUNCTIONS": "⚡ 함수",
  "BKY_CATEGORY_DISPLAY_A": "💻 A.디스플레이",
  "BKY_CATEGORY_DISPLAY_B": "🖥️ B.고급 디스플레이",
  "BKY_CATEGORY_SENSORS_A": "🌡️ A.일반 센서",
  "BKY_CATEGORY_SENSORS_B": "🛰️ B.고급 센서",
  "BKY_CATEGORY_MOTOR": "⚙️ 모터",
  "BKY_CATEGORY_OUTPUT": "💡 출력 장치",
  "BKY_CATEGORY_COMM": "📶 통신",
  "BKY_CATEGORY_SERIAL": "📡 시리얼 통신",
  "BKY_CATEGORY_UTIL": "🛠️ 유틸리티",
  "BKY_CATEGORY_GUIDE": "📢 안내",
  "BKY_ARDUINO_STARTS_UP": "MCU 보드가 시작되었을 때!",
  "BKY_ARDUINO_STARTS_UP_TOOLTIP": "프로그램이 시작될 때 필수 라이브러리를 포함합니다.",
  "BKY_ARDUINO_SETUP": "🚀 처음 한 번 실행 (setup)",
  "BKY_ARDUINO_SETUP_TOOLTIP": "아두이노가 처음 시작될 때 한 번만 실행되는 코드를 넣습니다.",
  "BKY_ARDUINO_LOOP": "♾️ 계속 반복 실행 (loop)",
  "BKY_ARDUINO_LOOP_TOOLTIP": "계속해서 반복적으로 실행되는 코드를 넣습니다.",
  "BKY_PIN_MODE": " 디지털%1번 핀을 %2모드로 설정",
  "BKY_INPUT": "입력(INPUT)",
  "BKY_OUTPUT": "출력(OUTPUT)",
  "BKY_PIN_MODE_TOOLTIP": "핀의 모드를 입력(INPUT) 또는 출력(OUTPUT)으로 설정합니다.",
  "BKY_READ_DIGITAL_PIN": "디지털 %1번 핀 읽기",
  "BKY_READ_DIGITAL_PIN_TOOLTIP": "디지털 핀의 상태(HIGH/LOW)를 읽어옵니다.",
  "BKY_SET_DIGITAL_PIN": "디지털 %1번 핀에 %2 출력",
  "BKY_HIGH": "켜짐(HIGH)",
  "BKY_LOW": "꺼짐(LOW)",
  "BKY_SET_DIGITAL_PIN_TOOLTIP": "디지털 핀에 HIGH 또는 LOW 신호를 출력합니다.",
  "BKY_READ_ANALOG_PIN": "아날로그 A%1번 핀 읽기",
  "BKY_READ_ANALOG_PIN_TOOLTIP": "아날로그 핀의 값(0~1023)을 읽어옵니다.",
  "BKY_SET_PWM_PIN": "PWM %1번 핀에 %2 출력",
  "BKY_SET_PWM_PIN_TOOLTIP": "PWM 핀에 0~255 사이의 값을 출력합니다.",
  "BKY_SERVO_SETUP": "서보모터%1번 핀으로 설정",
  "BKY_SERVO_SETUP_TOOLTIP": "서보모터를 사용하기 위해 핀을 설정합니다.",
  "BKY_SET_SERVO_ANGLE": "서보모터 %1번 핀 각도를 %2도로 출력",
  "BKY_SET_SERVO_ANGLE_TOOLTIP": "서보모터의 각도를 0~180도로 설정합니다. 이 블록은 서보 라이브러리를 자동으로 포함합니다.",
  "BKY_TONE_OUT": "%1번 핀에서 %2 Hz 소리 %3 밀리초 동안 재생",
  "BKY_TONE_OUT_TOOLTIP": "지정한 핀에서 특정 주파수의 소리를 재생합니다.",
  "BKY_NO_TONE": "%1번 핀 소리 멈추기",
  "BKY_NO_TONE_TOOLTIP": "tone()으로 나던 소리를 멈춥니다.",
  "BKY_DELAY_MS": "%1 초 기다리기",
  "BKY_DELAY_MS_TOOLTIP": "지정한 시간(초)만큼 기다립니다.",
  "BKY_TIMER_MILLIS": "현재 시간 (밀리초)",
  "BKY_TIMER_MILLIS_TOOLTIP": "아두이노 시작 후 흐른 시간을 1/1000초 단위로 반환합니다.",
  "BKY_TIMER_RESET": "⏰ %1번 타이머 초기화",
  "BKY_TIMER_RESET_TOOLTIP": "지정한 번호의 논블로킹 타이머를 초기화합니다.",
  "BKY_TIMER_NON_BLOCKING_DELAY": "⏰ %1 밀리초마다 실행",
  "BKY_TIMER_NON_BLOCKING_DELAY_TOOLTIP": "delay()를 사용하지 않고 일정 간격으로 코드를 실행합니다.",
  "BKY_ARDUINO_INTERRUPT": "⚡️ 외부 인터럽트 %1번 핀이 %2 때 즉시 실행",
  "BKY_INTERRUPT_RISING": "상승엣지 (Low→High)",
  "BKY_INTERRUPT_FALLING": "하강엣지 (High→Low)",
  "BKY_INTERRUPT_CHANGE": "상태변경 (Change)",
  "BKY_ARDUINO_INTERRUPT_TOOLTIP": "⚠️ 아두이노 UNO: 2,3번 핀만 사용 가능! 인터럽트 함수 안에서는 delay(), Serial 등을 사용하지 마세요. 코드는 최대한 짧고 빠르게 작성해야 합니다.",
  "BKY_PULSE_IN": "%1번 핀의 %2 신호 길이 읽기 (타임아웃 %3 μs)",
  "BKY_PULSE_IN_TOOLTIP": "핀의 신호 길이를 마이크로초 단위로 측정합니다.",
  "BKY_SHIFT_OUT": "🔄 쉬프트 레지스터 데이터 핀 %1 클럭 핀 %2 래치 핀 %3",
  "BKY_SHIFT_OUT_VALUE": "%2 값을 %1 순서로 출력",
  "BKY_SHIFT_MSB_FIRST": "MSB 우선 (7→0번 비트)",
  "BKY_SHIFT_LSB_FIRST": "LSB 우선 (0→7번 비트)",
  "BKY_SHIFT_OUT_TOOLTIP": "쉬프트 레지스터(예: 74HC595)로 데이터를 보냅니다.",
  "BKY_WAIT_UNTIL": "%1 조건이 참이 될 때까지 기다리기",
  "BKY_WAIT_UNTIL_TOOLTIP": "조건이 참이 될 때까지 기다립니다.",
  "BKY_CUSTOM_TEXT_JOIN": "문자열 합치기 %1 와 %2",
  "BKY_CUSTOM_TEXT_JOIN_TOOLTIP": "두 텍스트를 하나로 합칩니다.",
  "BKY_CUSTOM_TEXT_CHAR_AT": "문자열 %1 의 %2 번째 글자",
  "BKY_CUSTOM_TEXT_CHAR_AT_TOOLTIP": "문자열의 특정 위치에 있는 한 글자를 가져옵니다.",
  "BKY_CUSTOM_TEXT_LENGTH": "문자열 %1 의 길이",
  "BKY_CUSTOM_TEXT_LENGTH_TOOLTIP": "문자열의 총 글자 수를 반환합니다.",
  "BKY_CUSTOM_TEXT_CONTAINS": "%1 이 %2 를 포함하는가?",
  "BKY_CUSTOM_TEXT_CONTAINS_TOOLTIP": "한 문자열이 다른 문자열을 포함하는지 확인합니다.",
  "BKY_COLOUR_PICKER": "색상 %1",
  "BKY_COLOUR_PICKER_TOOLTIP": "색상을 선택합니다.",
  "BKY_COLOUR_RANDOM": "무작위 색상",
  "BKY_COLOUR_RANDOM_TOOLTIP": "무작위로 색상을 생성합니다.",
  "BKY_COLOUR_RGB": "RGB 색상 빨강 %1 초록 %2 파랑 %3",
  "BKY_COLOUR_RGB_TOOLTIP": "빨강, 초록, 파랑 값(0~255)으로 색상을 만듭니다.",
  "BKY_COLOUR_BLEND": "색상 %1 과 %2 를 %3 비율로 섞기",
  "BKY_COLOUR_BLEND_TOOLTIP": "두 색상을 지정된 비율(0.0~1.0)로 섞습니다.",
  "BKY_COLOUR_TO_HEX": "색상 %1 을 16진수 코드로",
  "BKY_COLOUR_TO_HEX_TOOLTIP": "색상을 16진수 색상 코드(#RRGGBB)로 변환합니다.",
  "BKY_COLOUR_TO_RGB_VALUES": "색상 %1 의 %2 값",
  "BKY_RED": "빨강",
  "BKY_GREEN": "초록",
  "BKY_BLUE": "파랑",
  "BKY_COLOUR_TO_RGB_VALUES_TOOLTIP": "색상에서 빨강, 초록, 파랑 값(0~255) 중 하나를 추출합니다.",
  "BKY_NUMBER_VARIABLE_SET": "🔢 숫자 변수 %1 에 %2 저장하기",
  "BKY_NUMBER_VARIABLE_SET_TOOLTIP": "숫자(float) 타입 변수에 값을 저장합니다. 디지털 읽기(HIGH/LOW) 값도 저장할 수 있습니다.",
  "BKY_NUMBER_VARIABLE_GET": "🔢 숫자 변수 %1",
  "BKY_NUMBER_VARIABLE_GET_TOOLTIP": "숫자(float) 타입 변수의 값을 가져옵니다.",
  "BKY_STRING_VARIABLE_SET": "📝 문자 변수 %1 에 %2 저장하기",
  "BKY_STRING_VARIABLE_SET_TOOLTIP": "문자(String) 타입 변수에 값을 저장합니다.",
  "BKY_STRING_VARIABLE_GET": "📝 문자 변수 %1",
  "BKY_STRING_VARIABLE_GET_TOOLTIP": "문자(String) 타입 변수의 값을 가져옵니다.",

    "BKY_ARRAY_CREATE": "📚 배열 %1 생성 타입 %2 값 %3",
    "BKY_ARRAY_CREATE_TIP": "초기값으로 배열을 생성합니다",
    "BKY_ARRAY_CREATE_EMPTY": "📚 빈 배열 %1 생성 타입 %2 크기 %3",
    "BKY_ARRAY_CREATE_EMPTY_TIP": "지정된 크기의 빈 배열을 생성합니다",
    "BKY_ARRAY_GET": "📚 배열 %1 의 인덱스 %2 값 가져오기",
    "BKY_ARRAY_GET_TIP": "배열의 특정 인덱스 값을 가져옵니다",
    "BKY_ARRAY_SET": "📚 배열 %1 의 인덱스 %2 를 %3 으로 설정",
    "BKY_ARRAY_SET_TIP": "배열의 특정 인덱스에 값을 설정합니다",
    "BKY_ARRAY_APPEND": "📚 배열 %2 에 %1 추가",
    "BKY_ARRAY_APPEND_TIP": "배열 끝에 값을 추가합니다",
    "BKY_ARRAY_REMOVE": "📚 배열 %1 의 인덱스 %2 제거",
    "BKY_ARRAY_REMOVE_TIP": "배열의 특정 인덱스 값을 제거하고 뒤 요소를 앞으로 이동합니다",
    "BKY_ARRAY_FIND": "📚 배열 %2 에서 %1 찾기",
    "BKY_ARRAY_FIND_TIP": "배열에서 값을 찾아 인덱스를 반환합니다 (없으면 -1)",
    "BKY_ARRAY_LENGTH": "📚 배열 %1 의 길이",
    "BKY_ARRAY_LENGTH_TIP": "배열의 전체 크기를 반환합니다",
    "BKY_ARRAY_CLEAR": "📚 배열 %1 을 %2 로 채우기",
    "BKY_ARRAY_CLEAR_TIP": "배열 전체를 지정된 값으로 채웁니다",
    "BKY_ARRAY_COPY": "📚 배열 %1 에서 %2 로 복사",
    "BKY_ARRAY_COPY_TIP": "원본 배열의 모든 값을 대상 배열로 복사합니다",
    "BKY_ARRAY_STRLEN": "📚 %1 의 문자열 길이",
    "BKY_ARRAY_STRLEN_TIP": "문자 배열의 실제 문자열 길이를 반환합니다",
    "BKY_ARRAY_CONTAINS": "📚 배열 %1 에 %2 포함 여부",
    "BKY_ARRAY_CONTAINS_TIP": "배열에 값이 존재하는지 확인합니다",
    "BKY_ARRAY_TYPE_INT": "정수",
    "BKY_ARRAY_TYPE_FLOAT": "실수",
    "BKY_ARRAY_TYPE_CHAR": "문자",

  "BKY_PROCEDURES_IFRETURN": "🔄 만약 %1 이면 %2 값으로 함수 끝내기",
  "BKY_PROCEDURES_IFRETURN_TOOLTIP": "조건이 참일 경우 지정된 값을 반환합니다. 반환값이 있는 함수 안에서만 사용하세요.",
  "BKY_PROCEDURES_IFRETURN_VOID": "🔄 만약 %1 이면 함수 끝내기",
  "BKY_PROCEDURES_IFRETURN_VOID_TOOLTIP": "조건이 참일 경우 함수를 종료합니다. 반환값이 없는 함수에서 사용하세요.",
  "BKY_LCD_I2C_SETUP": "📺 LCD(1602) I2C %1번 설정 (주소: %2, 크기: %3 x %4)",
  "BKY_LCD_I2C_SETUP_TOOLTIP": "I2C LCD를 설정합니다. 주소는 보통 0x27 또는 0x3F 입니다.",
  "BKY_LCD_I2C_PRINT": "📺 LCD %1번: %2행 %3열에 %4 출력",
  "BKY_LCD_I2C_PRINT_TOOLTIP": "지정한 위치에 텍스트를 출력합니다. (행/열은 0부터 시작)",
  "BKY_LCD_I2C_CLEAR": "📺 LCD %1번: 화면 지우기",
  "BKY_LCD_I2C_CLEAR_TOOLTIP": "LCD 화면 전체를 지웁니다.",
  "BKY_LCD_I2C_CURSOR": "📺 LCD %1번: 커서 %2",
  "BKY_ON": "켜기",
  "BKY_OFF": "끄기",
  "BKY_BLINK": "깜빡이기",
  "BKY_NO_BLINK": "깜빡이지 않기",
  "BKY_LCD_I2C_CURSOR_TOOLTIP": "커서 표시를 제어합니다.",
  "BKY_LCD_I2C_BACKLIGHT": "📺 LCD %1번: 백라이트 %2",
  "BKY_LCD_I2C_BACKLIGHT_TOOLTIP": "LCD 백라이트를 제어합니다.",
  "BKY_LCD_I2C_SCROLL": "📺 LCD %1번: 화면 스크롤 %2",
  "BKY_LEFT": "왼쪽",
  "BKY_RIGHT": "오른쪽",
  "BKY_LCD_I2C_SCROLL_TOOLTIP": "화면 내용을 왼쪽 또는 오른쪽으로 스크롤합니다.",
  "BKY_LCD_I2C_DISPLAY": "📺 LCD %1번: 화면 %2",
  "BKY_LCD_I2C_DISPLAY_TOOLTIP": "LCD 화면 표시를 켜거나 끕니다.",
  "BKY_LCD_I2C_SET_CURSOR": "📺 LCD %1번: 커서를 %2행 %3열로 이동",
  "BKY_LCD_I2C_SET_CURSOR_TOOLTIP": "커서를 지정한 위치로 이동합니다. (행/열은 0부터 시작)",

  "BKY_TM1637_SETUP": "🔟FND(TM1637) CLK 핀 %1 DATA 핀 %2 설정",
  "BKY_TM1637_SETUP_TIP": "TM1637 4자리 디스플레이를 CLK와 DATA 핀으로 초기화합니다",
  "BKY_TM1637_DISPLAY_NUMBER": "🔟FND숫자 표시 %1 %2 %3",
  "BKY_TM1637_DISPLAY_NUMBER_TIP": "숫자를 소수점이나 콜론과 함께 표시합니다",
  "BKY_TM1637_DISPLAY_TIME": "🔟FND시간 표시 %1 : %2 %3",
  "BKY_TM1637_DISPLAY_TIME_TIP": "시간을 HH:MM 형식으로 표시합니다",
  "BKY_TM1637_DISPLAY_TEXT": "🔟FND문자 표시 %1 스크롤 딜레이 %2 ms",
  "BKY_TM1637_DISPLAY_TEXT_TIP": "문자열을 표시하며 4자 이상일 경우 스크롤됩니다",
  "BKY_TM1637_DISPLAY_DIGIT": "🔟FND위치 %1 에 숫자 %2 표시",
  "BKY_TM1637_DISPLAY_DIGIT_TIP": "특정 위치에 한 자리 숫자나 문자를 표시합니다",
  "BKY_TM1637_CLEAR": "🔟FND화면 지우기",
  "BKY_TM1637_CLEAR_TIP": "디스플레이의 모든 숫자를 지웁니다",
  "BKY_TM1637_BRIGHTNESS": "🔟FND밝기 설정 %1",
  "BKY_TM1637_BRIGHTNESS_TIP": "디스플레이 밝기를 0(가장 어둡게)부터 7(가장 밝게)까지 설정합니다",
  "BKY_TM1637_COLON_CONTROL": "🔟FND콜론 %1",
  "BKY_TM1637_COLON_CONTROL_TIP": "숫자 사이의 콜론을 표시하거나 숨깁니다",
  "BKY_TM1637_NO_DECIMAL": "소수점 없음",
  "BKY_TM1637_ONE_DECIMAL": "소수점 1자리",
  "BKY_TM1637_COLON": "콜론(:) 포함",
  "BKY_TM1637_SHOW_MINUS": "음수 기호 표시",
  "BKY_TM1637_HIDE_MINUS": "음수 기호 숨김",
  "BKY_TM1637_COLON_ON": "콜론 표시",
  "BKY_TM1637_COLON_OFF": "콜론 숨김",
  "BKY_TM1637_POSITION_1": "1번째 (왼쪽)",
  "BKY_TM1637_POSITION_2": "2번째",
  "BKY_TM1637_POSITION_3": "3번째", 
  "BKY_TM1637_POSITION_4": "4번째 (오른쪽)",


  "BKY_NEO_SETUP_T": "⭕네오픽셀(WS2812/B) 설정",
  "BKY_NEO_SETUP_L1": "번호: %1 | 디지털 핀: %2 | LED 개수: %3",
  "BKY_NEO_SETUP_L2": "타입: %1",
  "BKY_NEO_TYPE_GRB": "GRB (표준 WS2812B)",
  "BKY_NEO_TYPE_RGB": "RGB",
  "BKY_NEO_TYPE_BRG": "BRG",
  "BKY_NEO_TYPE_BGR": "BGR",
  "BKY_NEO_TYPE_GRBW": "GRBW (RGBW)",
  "BKY_NEO_TYPE_RGBW": "RGBW",
  "BKY_NEO_SETUP_TIP": "네오픽셀 객체를 생성하고 begin/clear/show로 초기화합니다. (이 블록에서는 #include만 생성됩니다)",
  "BKY_NEO_SET_RGB": "⭕네오픽셀 RGB 설정 | 스트립 %1 | LED %2 | R %3 | G %4 | B %5",
  "BKY_NEO_SET_RGB_TIP": "LED 하나의 RGB 색상을 설정합니다. show()를 해야 반영됩니다.",
  "BKY_NEO_SET_RGBW": "⭕네오픽셀 RGBW 설정 | 스트립 %1 | LED %2 | R %3 | G %4 | B %5 | W %6",
  "BKY_NEO_SET_RGBW_TIP": "RGBW 타입 스트립의 LED 하나의 색상을 설정합니다.",
  "BKY_NEO_BRI": "⭕네오픽셀 밝기 | 스트립 %1 | 값(0~255) %2",
  "BKY_NEO_BRI_TIP": "전체적인 밝기를 설정합니다 (setBrightness).",
  "BKY_NEO_SHOW": "⭕네오픽셀 화면에 나타내기 | 스트립 %1",
  "BKY_NEO_SHOW_TIP": "버퍼에 설정된 색상들을 실제 LED에 반영합니다.",
  "BKY_NEO_CLEAR": "⭕네오픽셀 모두 지우기 (clear) | 스트립 %1",
  "BKY_NEO_CLEAR_TIP": "모든 LED를 끕니다 (버퍼만 변경). 필요 시 show()를 호출하세요.",
  "BKY_NEO_FILL_ALL": "⭕네오픽셀 전체 색 채우기 | 스트립 %1 | R %2 | G %3 | B %4",
  "BKY_NEO_FILL_ALL_TIP": "모든 픽셀을 같은 RGB로 채웁니다. show()로 반영하세요.",
  "BKY_NEO_ANIM_RAINBOW": "⭕네오픽셀 무지개 | 스트립 %1 | 지연(ms) %2 | 반복 %3",
  "BKY_NEO_ANIM_RAINBOW_TIP": "무지개 색상이 흐르는 효과입니다 (블로킹 방식).",
  "BKY_NEO_ANIM_SHIFT": "⭕네오픽셀 이동 | 스트립 %1 | 방향 %2 | 단계 %3 | 지연(ms) %4",
  "BKY_NEO_DIR_L": "왼쪽",
  "BKY_NEO_DIR_R": "오른쪽",
  "BKY_NEO_ANIM_SHIFT_TIP": "픽셀을 왼쪽/오른쪽으로 원형 이동시킵니다 (블로킹 방식).",
  "BKY_NEO_ANIM_BREATHE": "⭕네오픽셀 숨쉬기 | 스트립 %1 | R %2 | G %3 | B %4",
  "BKY_NEO_ANIM_BREATHE_L2": "최소 밝기 %1 | 최대 밝기 %2 | 증감 %3 | 지연(ms) %4",
  "BKY_NEO_ANIM_BREATHE_TIP": "밝기가 서서히 밝아졌다 어두워지는 숨쉬기 효과입니다 (블로킹 방식).",
  "BKY_SH110X_SETUP_I2C": "📺OLED 1.3'(SH110X)%1 설정하기, 타입 %2 I2C 주소 %3 리셋핀 %4 가로 %5 세로 %6",
  "BKY_SH110X_SETUP_I2C_TIP": "SH110X OLED 디스플레이를 I2C 연결로 설정합니다.",
  "BKY_SH110X_DISPLAY": "📺OLED %1 화면 표시하기",
  "BKY_SH110X_DISPLAY_TIP": "현재 버퍼의 내용을 OLED 화면에 표시합니다.",
  "BKY_SH110X_CLEAR": "📺OLED %1 화면 지우기",
  "BKY_SH110X_CLEAR_TIP": "OLED 화면 버퍼를 지웁니다.",
  "BKY_SH110X_CONTROL": "📺OLED %1 %2",
  "BKY_SH110X_CONTROL_TIP": "OLED 디스플레이 상태를 제어합니다.",
  "BKY_SH110X_PIXEL": "📺OLED %1 점 그리기 X %2 Y %3 색상 %4",
  "BKY_SH110X_PIXEL_TIP": "OLED 화면에 점을 그립니다.",
  "BKY_SH110X_LINE": "📺OLED %1 선 그리기 시작점 X1 %2 Y1 %3 끝점 X2 %4 Y2 %5 색상 %6",
  "BKY_SH110X_LINE_TIP": "OLED 화면에 선을 그립니다.",
  "BKY_SH110X_RECT": "📺OLED %1 사각형 그리기 X %2 Y %3 가로 %4 세로 %5 %6 색상 %7",
  "BKY_SH110X_RECT_TIP": "OLED 화면에 사각형을 그립니다.",
  "BKY_SH110X_CIRCLE": "📺OLED %1 원 그리기 중심 X %2 Y %3 반지름 %4 %5 색상 %6",
  "BKY_SH110X_CIRCLE_TIP": "OLED 화면에 원을 그립니다.",
  "BKY_SH110X_TEXT": "📺OLED %1 글자 쓰기 %2 위치 X %3 Y %4 크기 %5 색상 %6 줄바꿈 %7",
  "BKY_SH110X_TEXT_TIP": "OLED 화면에 텍스트를 출력합니다.",
  "BKY_SH110X_CONTRAST": "📺OLED %1 밝기 조절 %2",
  "BKY_SH110X_CONTRAST_TIP": "OLED 디스플레이의 밝기를 조절합니다 (0-255).",
  "BKY_SH110X_ACTION_INVERT": "화면 반전",
  "BKY_SH110X_ACTION_NORMAL": "정상 표시",
  "BKY_SH110X_ACTION_ON": "화면 켜기",
  "BKY_SH110X_ACTION_OFF": "화면 끄기",
  "BKY_SH110X_COLOR_WHITE": "흰색",
  "BKY_SH110X_COLOR_BLACK": "검은색", 
  "BKY_SH110X_COLOR_INVERSE": "반전",
  "BKY_SH110X_FILL_OUTLINE": "테두리만",
  "BKY_SH110X_FILL_FILLED": "채우기",
  "BKY_SH110X_WRAP_NO": "줄바꿈 없음",
  "BKY_SH110X_WRAP_YES": "줄바꿈",
  "BKY_HT16_SETUP": "📲I2C 도트 매트릭스(HT16K33) 설정",
  "BKY_HT16_SETUP_1": "번호 %1 | 장치 %2 | I2C 주소 %3",
  "BKY_DM_8X8": "8×8 매트릭스",
  "BKY_DM_8X16": "8×16 매트릭스",
  "BKY_DM_8X16MINI": "8×16 미니",
  "BKY_DM_BICOLOR8": "바이컬러 8×8",
  "BKY_HT16_SETUP_2": "밝기(0~15) %1 | 깜빡임 %2 | 회전 %3",
  "BKY_BLINK_2HZ": "2 Hz",
  "BKY_BLINK_1HZ": "1 Hz",
  "BKY_BLINK_0_5HZ": "0.5 Hz",
  "BKY_HT16_SETUP_TIP": "필수 라이브러리를 포함하고 begin/brightness/blink/rotation을 설정합니다. (이 블록에서는 #include만 생성됩니다)",
  "BKY_HT16_BRI": "📲I2C 매트릭스 %1번 밝기(0~15) %2",
  "BKY_HT16_BRI_TIP": "setBrightness()",
  "BKY_HT16_BLINK": "📲I2C 매트릭스 %1번 깜빡임 %2",
  "BKY_HT16_BLINK_TIP": "blinkRate()",
  "BKY_HT16_PIXEL": "📲I2C 매트릭스 %1번 | %2행 | %3열 | 픽셀 %4",
  "BKY_HT16_PIXEL_TIP": "단색: 1=켜기, 0=끄기. (행/열은 1부터 시작)",
  "BKY_HT16_BIPIX": "📲I2C 바이컬러 매트릭스 %1번 | %2행 | %3열 | 색상 %4",
  "BKY_YELLOW": "노랑",
  "BKY_HT16_BIPIX_TIP": "바이컬러 매트릭스 전용 drawPixel(x,y,color)",
  "BKY_HT16_P8": "📲8×8 매트릭스 %1번 | 패턴",
  "BKY_HT16_P8_TIP": "픽셀을 클릭해서 켜고 끈 후 버퍼에 그림을 그립니다. '화면에 나타내기' 블록을 사용해야 실제 출력이 반영됩니다.",
  "BKY_HT16_P816": "📲8×16 매트릭스 %1번 | 패턴",
  "BKY_HT16_P816_TIP": "가로 16칸 × 세로 8칸 그리드에서 편집합니다 (실제 8×16 장치용).",
  "BKY_HT16_LINE": "📲I2C 매트릭스 %1번 | (%2행, %3열) → (%4행, %5열) 선 그리기",
  "BKY_HT16_LINE_TIP": "Adafruit_GFX의 drawLine",
  "BKY_HT16_CIR": "📲I2C 매트릭스 %1번 | 중심(%2행, %3열) | 반지름 %4 | 원 그리기",
  "BKY_HT16_CIR_TIP": "Adafruit_GFX의 drawCircle",
  "BKY_HT16_RECT": "📲I2C 매트릭스 %1번 | 시작(%2행, %3열) | 크기 %4 × %5 | 사각형 %6",
  "BKY_HT16_RECT_TIP": "drawRect / fillRect",
  "BKY_HT16_SHOW": "📲I2C 매트릭스 %1번 | 화면에 나타내기",
  "BKY_HT16_SHOW_TIP": "writeDisplay()로 반영합니다.",
  "BKY_HT16_CLR": "📲I2C 매트릭스 %1번 | 화면 지우기",
  "BKY_HT16_CLR_TIP": "clear()만 수행합니다.",
  "BKY_HT16_SCROLL": "📲I2C 매트릭스 %1번 | 글자 %2 | 스크롤 %3 | 속도(초) %4",
  "BKY_HT16_SCROLL_TIP": "GFX 텍스트를 좌/우 스크롤 출력합니다.",
  "BKY_SSD1306_SETUP_I2C": "💻OLED0.96'(SSD1306)%1 설정하기, 가로 %2 세로 %3 I2C 주소 %4 리셋핀 %5",
  "BKY_SSD1306_SETUP_I2C_TIP": "SSD1306 OLED 디스플레이를 I2C 연결로 설정합니다.",
  "BKY_SSD1306_CONTROL": "💻OLED %1 %2",
  "BKY_SSD1306_CONTROL_TIP": "OLED 디스플레이 기본 기능을 제어합니다.",
  "BKY_SSD1306_DIM": "💻OLED %1 밝기 조절 %2",
  "BKY_SSD1306_DIM_TIP": "OLED 디스플레이 밝기 조절 모드를 설정합니다.",
  "BKY_SSD1306_PIXEL": "💻OLED %1 점 그리기 X %2 Y %3 색상 %4",
  "BKY_SSD1306_PIXEL_TIP": "OLED 화면에 점을 그립니다.",
  "BKY_SSD1306_LINE": "💻OLED %1 선 그리기 시작점 X1 %2 Y1 %3 끝점 X2 %4 Y2 %5 색상 %6",
  "BKY_SSD1306_LINE_TIP": "OLED 화면에 선을 그립니다.",
  "BKY_SSD1306_RECT": "💻OLED %1 사각형 그리기 X %2 Y %3 가로 %4 세로 %5 %6 색상 %7",
  "BKY_SSD1306_RECT_TIP": "OLED 화면에 사각형을 그립니다.",
  "BKY_SSD1306_CIRCLE": "💻OLED %1 원 그리기 중심 X %2 Y %3 반지름 %4 %5 색상 %6",
  "BKY_SSD1306_CIRCLE_TIP": "OLED 화면에 원을 그립니다.",
  "BKY_SSD1306_TEXT": "💻OLED %1 글자 쓰기 %2 위치 X %3 Y %4 크기 %5 색상 %6 줄바꿈 %7",
  "BKY_SSD1306_TEXT_TIP": "OLED 화면에 텍스트를 출력합니다.",
  "BKY_SSD1306_SCROLL": "💻OLED %1 스크롤 %2 시작 %3 끝 %4",
  "BKY_SSD1306_SCROLL_TIP": "OLED 디스플레이 스크롤 기능을 제어합니다.",
  "BKY_SSD1306_ACTION_DISPLAY": "화면 표시",
  "BKY_SSD1306_ACTION_CLEAR": "화면 지우기",
  "BKY_SSD1306_ACTION_INVERT": "화면 반전",
  "BKY_SSD1306_ACTION_NORMAL": "정상 표시",
  "BKY_SSD1306_DIM_ON": "어둡게",
  "BKY_SSD1306_DIM_OFF": "밝게",
  "BKY_SSD1306_COLOR_WHITE": "흰색",
  "BKY_SSD1306_COLOR_BLACK": "검은색",
  "BKY_SSD1306_COLOR_INVERSE": "반전",
  "BKY_SSD1306_FILL_OUTLINE": "테두리만",
  "BKY_SSD1306_FILL_FILLED": "채우기",
  "BKY_SSD1306_WRAP_NO": "줄바꿈 없음",
  "BKY_SSD1306_WRAP_YES": "줄바꿈",
  "BKY_SSD1306_SCROLL_RIGHT": "오른쪽",
  "BKY_SSD1306_SCROLL_LEFT": "왼쪽",
  "BKY_SSD1306_SCROLL_DIAG_RIGHT": "대각선 오른쪽",
  "BKY_SSD1306_SCROLL_DIAG_LEFT": "대각선 왼쪽",
  "BKY_SSD1306_SCROLL_STOP": "정지",
  "BKY_ULTRA_SETUP": "🔊 초음파 센서 설정 트리거 핀 %1 에코 핀 %2",
  "BKY_ULTRA_SETUP_TIP": "초음파 센서를 설정합니다. 트리거/에코 핀을 지정하세요.",
  "BKY_ULTRA_DISTANCE": "🔊 초음파 거리 측정 단위 %1",
  "BKY_UNIT_CM": "cm",
  "BKY_UNIT_MM": "mm",
  "BKY_ULTRA_DISTANCE_TIP": "초음파 센서로 거리를 측정합니다.",
  "BKY_DHT_SETUP": "🌡️ 온습도 센서(DHT): %1번 핀, 타입 %2 설정",
  "BKY_DHT_SETUP_TOOLTIP": "DHT 온습도 센서를 설정합니다.",
  "BKY_DHT_READ_TEMPERATURE": "🌡️ DHT 센서: %1번 핀 온도 읽기 (%2)",
  "BKY_TEMP_CELSIUS": "섭씨 (°C)",
  "BKY_TEMP_FAHRENHEIT": "화씨 (°F)",
  "BKY_DHT_READ_TEMPERATURE_TOOLTIP": "DHT 센서에서 온도를 읽습니다.",
  "BKY_DHT_READ_HUMIDITY": "🌡️ DHT 센서: %1번 핀 습도 읽기",
  "BKY_DHT_READ_HUMIDITY_TOOLTIP": "DHT 센서에서 습도를 읽습니다.",
  "BKY_DHT_CONVERT_TEMPERATURE": "🌡️ 온도 변환: %1 %2 → %3",
  "BKY_DHT_CONVERT_TEMPERATURE_TOOLTIP": "온도를 섭씨와 화씨 간에 변환합니다.",
  "BKY_DHT_HEAT_INDEX": "🌡️ 체감 온도 계산: 온도 %1, 습도 %2%, 단위 %3",
  "BKY_DHT_HEAT_INDEX_TOOLTIP": "온도와 습도를 사용하여 체감 온도(열지수)를 계산합니다.",
  "BKY_DALLAS_SETUP": "💦 수온 센서 설정 데이터 핀 %1",
  "BKY_DALLAS_SETUP_TIP": "수온 센서를 설정합니다. 데이터 핀 번호를 지정하세요.",
  "BKY_DALLAS_READ": "💦 수온 센서 %1번 값 읽기 (단위 %2)",
  "BKY_DALLAS_READ_TIP": "선택한 센서의 온도를 읽습니다. (인덱스는 0부터 시작)",
  "BKY_DALLAS_COUNT": "💦 연결된 수온 센서 개수",
  "BKY_DALLAS_COUNT_TIP": "연결된 수온 센서의 수를 반환합니다.",
  "BKY_DALLAS_REQUEST": "💦 모든 수온 센서 측정 시작",
  "BKY_DALLAS_REQUEST_TIP": "모든 수온 센서의 온도 변환을 시작합니다.",
  "BKY_HX711_SETUP": "⚖️ 무게 센서(HX711): DOUT 핀 %1, CLK 핀 %2, 게인 %3 설정",
  "BKY_GAIN_128_A": "128 (채널 A)",
  "BKY_GAIN_64_A": "64 (채널 A)",
  "BKY_GAIN_32_B": "32 (채널 B)",
  "BKY_HX711_SETUP_TOOLTIP": "HX711 무게 센서를 설정합니다.",
  "BKY_HX711_GET_WEIGHT": "⚖️ HX711 무게 센서 무게 측정",
  "BKY_HX711_GET_WEIGHT_TOOLTIP": "HX711 센서로 무게를 측정합니다.",
  "BKY_HX711_TARE": "⚖️ HX711 무게 센서 영점 조절 %1회",
  "BKY_HX711_TARE_TOOLTIP": "현재 무게를 0으로 설정합니다.",
  "BKY_HX711_SET_SCALE": "⚖️ HX711 무게 센서 스케일 설정 %1",
  "BKY_HX711_SET_SCALE_TOOLTIP": "무게 계산을 위한 스케일 값을 설정합니다.",
  "BKY_HX711_IS_READY": "⚖️ HX711 무게 센서 준비 상태 확인",
  "BKY_HX711_IS_READY_TOOLTIP": "센서가 데이터를 읽을 준비가 되었는지 확인합니다.",
  "BKY_HX711_POWER_CONTROL": "⚖️ HX711 무게 센서 전원 %1",
  "BKY_POWER_ON": "켜기",
  "BKY_POWER_OFF": "끄기",
  "BKY_HX711_POWER_CONTROL_TOOLTIP": "센서 전원을 제어합니다.",
  "BKY_HX711_READ_DATA": "⚖️ HX711 무게 센서 데이터 읽기 %1",
  "BKY_RAW_VALUE": "원본 값",
  "BKY_AVERAGE_VALUE": "평균 값",
  "BKY_ACTUAL_VALUE": "실제 값",
  "BKY_HX711_READ_DATA_TOOLTIP": "센서에서 다양한 유형의 데이터를 읽습니다.",
  "BKY_I2C_WEIGHT_SETUP": "I2C 무게센서 설정 주소 %1",
  "BKY_I2C_WEIGHT_SETUP_TIP": "슬레이브 주소로 I2C 무게센서를 초기화합니다.",
  "BKY_I2C_WEIGHT_READ": "I2C 센서에서 무게 읽기",
  "BKY_I2C_WEIGHT_READ_TIP": "I2C 무게센서에서 무게 값을 읽습니다.",
  "BKY_I2C_WEIGHT_AVAILABLE": "I2C 무게센서가 사용가능함",
  "BKY_I2C_WEIGHT_AVAILABLE_TIP": "I2C 무게센서가 연결되어 응답하는지 확인합니다.",
  "BKY_I2C_WEIGHT_RAW_DATA": "I2C 센서에서 원시 데이터 byte %1 읽기",
  "BKY_I2C_WEIGHT_RAW_DATA_TIP": "I2C 무게센서에서 원시 바이트 데이터를 읽습니다.",
  "BKY_I2C_WEIGHT_BYTE_0": "Byte 0 (상태)",
  "BKY_I2C_WEIGHT_BYTE_1": "Byte 1 (상위)",
  "BKY_I2C_WEIGHT_BYTE_2": "Byte 2 (하위)",
  "BKY_ROTARY_SETUP": "🔄 로터리 엔코더: DT 핀 %1, CLK 핀 %2 설정",
  "BKY_ROTARY_SETUP_TOOLTIP": "로터리 엔코더를 설정합니다.",
  "BKY_ROTARY_GET_VALUE": "🔄 로터리 엔코더 회전 값",
  "BKY_ROTARY_GET_VALUE_TOOLTIP": "로터리 엔코더의 회전 값을 읽습니다. (1:시계방향, -1:반시계방향, 0:변화없음)",
  "BKY_ROTARY_DIRECTION": "🔄 로터리 엔코더 회전 방향",
  "BKY_ROTARY_DIRECTION_TOOLTIP": "로터리 엔코더의 회전 방향을 문자열로 반환합니다.",
  "BKY_ROTARY_COUNTER": "🔄 로터리 엔코더 누적 카운터",
  "BKY_ROTARY_COUNTER_TOOLTIP": "로터리 엔코더의 회전량을 누적하여 카운터 값을 반환합니다.",
  "BKY_ROTARY_RESET_COUNTER": "🔄 로터리 엔코더 카운터 초기화",
  "BKY_ROTARY_RESET_COUNTER_TOOLTIP": "로터리 엔코더의 누적 카운터를 0으로 초기화합니다.",
  "BKY_THERMISTOR_SETUP": "🌡️ 서미스터 온도 센서: 아날로그 핀 %1, 공칭 저항 %2Ω, 베타 계수 %3, 직렬 저항 %4Ω 설정",
  "BKY_THERMISTOR_SETUP_TOOLTIP": "서미스터 온도 센서를 설정합니다.",
  "BKY_THERMISTOR_READ_TEMPERATURE": "🌡️ 서미스터 온도 센서 온도 측정 (%1)",
  "BKY_THERMISTOR_READ_TEMPERATURE_TOOLTIP": "서미스터 센서로 온도를 측정합니다.",
  "BKY_THERMISTOR_READ_RAW": "🌡️ 서미스터 온도 센서 원본 값",
  "BKY_THERMISTOR_READ_RAW_TOOLTIP": "서미스터 센서의 원본 값을 읽습니다. (0.1°C 단위)",
  "BKY_THERMISTOR_GET_RESISTANCE": "🌡️ 서미스터 온도 센서 저항 값",
  "BKY_THERMISTOR_GET_RESISTANCE_TOOLTIP": "서미스터의 현재 저항 값을 계산하여 반환합니다.",
  "BKY_PMS_SETUP": "💨 미세먼지 센서(PMS-X003): 시리얼 포트 %1, RX 핀 %2, TX 핀 %3, 통신 속도 %4 설정",
  "BKY_PMS_SETUP_TOOLTIP": "PMS 미세먼지 센서를 설정합니다. (하드웨어 시리얼 사용 시 핀 설정 무시)",
  "BKY_PMS_POWER_CONTROL": "💨 PMS 미세먼지 센서 전원 %1",
  "BKY_WAKE_UP": "깨우기",
  "BKY_SLEEP_MODE": "절전 모드",
  "BKY_PMS_POWER_CONTROL_TOOLTIP": "센서의 전원 상태를 제어합니다.",
  "BKY_PMS_SET_MODE": "💨 PMS 미세먼지 센서 모드 설정 %1",
  "BKY_ACTIVE_MODE": "활성 모드",
  "BKY_PASSIVE_MODE": "수동 모드",
  "BKY_PMS_SET_MODE_TOOLTIP": "센서의 동작 모드를 설정합니다.",
  "BKY_PMS_READ_DATA": "💨 PMS 미세먼지 센서 %1 측정",
  "BKY_PM1_0_STANDARD": "PM1.0 (표준)",
  "BKY_PM2_5_STANDARD": "PM2.5 (표준)",
  "BKY_PM10_STANDARD": "PM10 (표준)",
  "BKY_PM1_0_ATMOSPHERIC": "PM1.0 (대기)",
  "BKY_PM2_5_ATMOSPHERIC": "PM2.5 (대기)",
  "BKY_PM10_ATMOSPHERIC": "PM10 (대기)",
  "BKY_PMS_READ_DATA_TOOLTIP": "미세먼지 농도를 측정합니다. (μg/m³)",
  "BKY_PMS_REQUEST_READ": "💨 PMS 미세먼지 센서 수동 읽기 요청",
  "BKY_PMS_REQUEST_READ_TOOLTIP": "수동 모드에서 데이터 읽기를 요청합니다.",
  "BKY_PMS_DATA_AVAILABLE": "💨 PMS 미세먼지 센서 데이터 준비됨",
  "BKY_PMS_DATA_AVAILABLE_TOOLTIP": "새로운 데이터가 준비되었는지 확인합니다.",
  "BKY_MHZ19_SETUP": "⚠️MHZ19 이산화탄소 센서 설정: 시리얼 %1, RX핀 %2, TX핀 %3, 통신 속도 %4",
  "BKY_SERIAL_SOFT": "소프트웨어 시리얼",
  "BKY_SERIAL_HARD": "하드웨어 시리얼",
  "BKY_SERIAL_HARD1": "하드웨어 시리얼1",
  "BKY_SERIAL_HARD2": "하드웨어 시리얼2",
  "BKY_MHZ19_SETUP_TOOLTIP": "MHZ19 이산화탄소 센서를 초기화합니다.",
  "BKY_MHZ19_SET_RANGE": "⚠️MHZ19 측정 범위 설정: %1 ppm",
  "BKY_MHZ19_SET_RANGE_TOOLTIP": "이산화탄소 측정 범위를 설정합니다. (기본: 2000ppm)",
  "BKY_MHZ19_FILTER": "⚠️MHZ19 필터 모드 %1, 타입 %2",
  "BKY_FILTER_ON": "켜기",
  "BKY_FILTER_OFF": "끄기",
  "BKY_FILTER_CLEAR": "클리어 모드",
  "BKY_FILTER_NORMAL": "노멀 모드",
  "BKY_MHZ19_FILTER_TOOLTIP": "센서의 필터 모드를 설정합니다.",
  "BKY_MHZ19_READ": "⚠️MHZ19 값 읽기: %1",
  "BKY_MHZ19_CO2": "CO2(ppm)",
  "BKY_MHZ19_CO2_UNLIM": "CO2 무제한(ppm)",
  "BKY_MHZ19_TEMP": "온도(℃)",
  "BKY_MHZ19_RAW": "원본 CO2",
  "BKY_MHZ19_TRANS": "투과율(%)",
  "BKY_MHZ19_ACCURACY": "정확도",
  "BKY_MHZ19_READ_TOOLTIP": "MHZ19 센서에서 선택한 값을 읽습니다.",
  "BKY_MHZ19_CAL": "⚠️MHZ19 %1 주기(시간): %2",
  "BKY_CAL_AUTO_ON": "자동 보정 켜기",
  "BKY_CAL_AUTO_OFF": "자동 보정 끄기",
  "BKY_CAL_ZERO": "영점 보정 실행",
  "BKY_CAL_RESET": "리셋",
  "BKY_MHZ19_CAL_TOOLTIP": "MHZ19 센서 보정을 수행합니다.",
  "BKY_MHZ19_STATUS": "⚠️MHZ19 상태 읽기: %1",
  "BKY_STATUS_RANGE": "측정 범위",
  "BKY_STATUS_ABC": "ABC 상태",
  "BKY_STATUS_BG_CO2": "배경 CO2",
  "BKY_STATUS_VERSION": "버전 정보",
  "BKY_MHZ19_STATUS_TOOLTIP": "MHZ19 센서의 상태 정보를 읽습니다.",
  "BKY_GRAVITY_TDS_SETUP": "🌊 TDS 센서(GravityTDS) 설정: 핀 %1",
  "BKY_GRAVITY_TDS_SETUP_TOOLTIP": "DFRobot GravityTDS 센서를 초기화합니다.",
  "BKY_GRAVITY_TDS_TEMP": "🌊 TDS 센서 온도 보상 설정: %1 ℃",
  "BKY_GRAVITY_TDS_TEMP_TOOLTIP": "측정 정확도를 높이기 위해 온도 보상 값을 설정합니다.",
  "BKY_GRAVITY_TDS_UPDATE": "🌊 TDS 센서 값 업데이트",
  "BKY_GRAVITY_TDS_UPDATE_TOOLTIP": "센서에서 새 값을 읽고 계산을 수행합니다.",
  "BKY_GRAVITY_TDS_READ": "🌊 TDS 센서 값 읽기: %1",
  "BKY_TDS_VALUE": "TDS 값(ppm)",
  "BKY_EC_VALUE": "EC 값(μS/cm)",
  "BKY_K_VALUE": "K 값",
  "BKY_GRAVITY_TDS_READ_TOOLTIP": "TDS, EC 또는 K 값을 읽습니다.",
  "BKY_GRAVITY_TDS_ADV": "🌊 TDS 센서 고급 설정 %1 값: %2",
  "BKY_ADC_REF": "ADC 기준 전압(V)",
  "BKY_ADC_RANGE": "ADC 범위",
  "BKY_K_ADDRESS": "K 값 저장 주소",
  "BKY_GRAVITY_TDS_ADV_TOOLTIP": "센서의 고급 설정을 변경합니다.",
  "BKY_DFROBOT_PH_SETUP": "🧪pH 센서 설정 핀 %1",
  "BKY_DFROBOT_PH_SETUP_TIP": "아날로그 핀으로 pH 센서를 초기화합니다.",
  "BKY_DFROBOT_PH_READ": "🧪온도 %1 °C에서 pH 값 읽기",
  "BKY_DFROBOT_PH_READ_TIP": "온도 보정을 적용하여 pH 값을 읽습니다.",
  "BKY_DFROBOT_PH_VOLTAGE": "🧪pH 센서 전압 읽기",
  "BKY_DFROBOT_PH_VOLTAGE_TIP": "pH 센서에서 원시 전압 값을 읽습니다.",
  "BKY_DFROBOT_PH_CALIBRATION": "🧪pH 보정 명령 %1",
  "BKY_DFROBOT_PH_CALIBRATION_TIP": "pH 센서에 보정 명령을 전송합니다.",
  "BKY_DFROBOT_PH_ENTER": "보정 모드 시작",
  "BKY_DFROBOT_PH_CALIBRATE": "보정하기",
  "BKY_DFROBOT_PH_EXIT": "보정 모드 종료",
  "BKY_FINGERPRINT_SETUP": "👆지문 센서 설정: 시리얼 %1, RX핀 %2, TX핀 %3, 통신 속도 %4",
  "BKY_FINGERPRINT_SETUP_TOOLTIP": "Adafruit 지문 센서를 초기화합니다.",
  "BKY_FINGERPRINT_ENROLL": "👆지문 등록 과정 %1, ID 번호: %2",
  "BKY_GET_IMAGE": "이미지 가져오기",
  "BKY_CONVERT_TEMPLATE": "템플릿으로 변환",
  "BKY_CREATE_MODEL": "모델 생성",
  "BKY_STORE_MODEL": "모델 저장",
  "BKY_FINGERPRINT_ENROLL_TOOLTIP": "지문 등록 과정을 단계별로 수행합니다.",
  "BKY_FINGERPRINT_SEARCH": "👆지문 인식 모드: %1",
  "BKY_FAST_SEARCH": "빠른 검색",
  "BKY_NORMAL_SEARCH": "일반 검색",
  "BKY_FINGERPRINT_SEARCH_TOOLTIP": "등록된 지문과 일치하는지 시도합니다.",
  "BKY_FINGERPRINT_RESULT": "👆지문 인식 결과: %1",
  "BKY_FINGER_ID": "지문 ID",
  "BKY_CONFIDENCE": "신뢰도",
  "BKY_TEMPLATE_COUNT": "등록 개수",
  "BKY_FINGERPRINT_RESULT_TOOLTIP": "지문 인식 결과 정보를 가져옵니다.",
  "BKY_FINGERPRINT_DATABASE": "👆지문 데이터베이스 %1, ID: %2",
  "BKY_DELETE_ID": "ID 삭제",
  "BKY_EMPTY_ALL": "모두 비우기",
  "BKY_GET_COUNT": "개수 가져오기",
  "BKY_FINGERPRINT_DATABASE_TOOLTIP": "지문 데이터베이스를 관리합니다.",
  "BKY_FINGERPRINT_LED": "👆지문 센서 LED 제어 %1",
  "BKY_LED_ON": "켜기",
  "BKY_LED_OFF": "끄기",
  "BKY_LED_BREATHING": "숨쉬기 효과",
  "BKY_LED_FLASHING": "깜빡이기",
  "BKY_FINGERPRINT_LED_TOOLTIP": "지문 센서의 LED를 제어합니다.",
  "BKY_TURBIDITY_SETUP": "💧탁도 센서 설정: 아날로그 핀 %1",
  "BKY_TURBIDITY_SETUP_TOOLTIP": "탁도 센서를 초기화하고 샘플링 배열을 설정합니다.",
  "BKY_TURBIDITY_CALIBRATE": "💧탁도 센서 영점 조절 (맑은 물)",
  "BKY_TURBIDITY_CALIBRATE_TOOLTIP": "맑은 물에서 기준 전압을 측정하여 영점을 보정합니다.",
  "BKY_TURBIDITY_READ": "💧탁도 센서 값 읽기: %1",
  "BKY_TURBIDITY_NTU": "탁도(NTU)",
  "BKY_TURBIDITY_VOLTAGE": "전압(V)",
  "BKY_TURBIDITY_RAW": "원본 값",
  "BKY_TURBIDITY_READ_TOOLTIP": "탁도 센서에서 NTU, 전압 또는 원본 값을 읽습니다.",
  "BKY_TURBIDITY_UPDATE": "💧탁도 센서 값 업데이트",
  "BKY_TURBIDITY_UPDATE_TOOLTIP": "센서 값을 샘플링하고 배열을 업데이트합니다. loop() 안에서 호출하세요.",
  "BKY_UV_SETUP": "😎자외선 센서 설정: 아날로그 핀 %1",
  "BKY_UV_SETUP_TOOLTIP": "자외선 센서를 초기화하고 측정 변수를 설정합니다.",
  "BKY_UV_CALIBRATE": "😎자외선 센서 보정 %1, 기준 전압: %2 mV",
  "BKY_CAL_INDOOR": "실내 (영점 조절)",
  "BKY_CAL_OUTDOOR": "실외 기준 설정",
  "BKY_CAL_CUSTOM": "사용자 설정",
  "BKY_UV_CALIBRATE_TOOLTIP": "실내/실외 기준으로 자외선 센서를 보정합니다.",
  "BKY_UV_READ": "😎자외선 센서 값 읽기: %1",
  "BKY_UV_INDEX": "자외선 지수",
  "BKY_UV_VOLTAGE": "전압(V)",
  "BKY_UV_VOLTAGE_MV": "전압(mV)",
  "BKY_UV_RAW": "원본 값",
  "BKY_UV_READ_TOOLTIP": "자외선 센서에서 UV 지수, 전압 또는 원본 값을 읽습니다.",
  "BKY_DS1307_SETUP": "🕒RTC(DS1307) 설정 %1",
  "BKY_DS1307_SETUP_TIP": "DS1307 실시간 시계 모듈을 초기화합니다.",
  "BKY_DS1307_SET_TIME": "🕒RTC %1 시간 설정 년 %2 월 %3 일 %4 시 %5 분 %6 초 %7",
  "BKY_DS1307_SET_TIME_TIP": "RTC 모듈에 현재 날짜와 시간을 설정합니다.",
  "BKY_DS1307_GET_TIME": "🕒RTC %1 가져오기 %2",
  "BKY_DS1307_GET_TIME_TIP": "RTC 모듈에서 특정 시간 값을 가져옵니다.",
  "BKY_DS1307_CLOCK_CONTROL": "🕒RTC %1 시계 %2",
  "BKY_DS1307_CLOCK_CONTROL_TIP": "RTC 시계를 시작하거나 정지합니다.",
  "BKY_DS1307_SQW_OUTPUT": "🕒RTC %1 SQW 출력 %2",
  "BKY_DS1307_SQW_OUTPUT_TIP": "SQW 핀 출력 타입을 설정합니다.",
  "BKY_DS1307_GET_TIME_STRING": "🕒RTC %1 시간 문자열 가져오기 형식 %2",
  "BKY_DS1307_GET_TIME_STRING_TIP": "RTC에서 형식화된 시간 문자열을 가져옵니다.",
  "BKY_DS1307_TIME_YEAR": "년",
  "BKY_DS1307_TIME_MONTH": "월",
  "BKY_DS1307_TIME_DATE": "일",
  "BKY_DS1307_TIME_HOUR": "시",
  "BKY_DS1307_TIME_MINUTE": "분",
  "BKY_DS1307_TIME_SECOND": "초",
  "BKY_DS1307_TIME_DAY_OF_WEEK": "요일",
  "BKY_DS1307_CLOCK_START": "시작",
  "BKY_DS1307_CLOCK_STOP": "정지",
  "BKY_DS1307_OUTPUT_HIGH": "높음",
  "BKY_DS1307_OUTPUT_LOW": "낮음",
  "BKY_DS1307_OUTPUT_1HZ": "1 Hz",
  "BKY_DS1307_OUTPUT_4KHZ": "4 kHz",
  "BKY_DS1307_OUTPUT_8KHZ": "8 kHz",
  "BKY_DS1307_OUTPUT_32KHZ": "32 kHz",
  "BKY_DS1307_FORMAT_DATETIME": "년/월/일 시:분:초",
  "BKY_DS1307_FORMAT_DATE": "년/월/일",
  "BKY_DS1307_FORMAT_TIME": "시:분:초",
  "BKY_BMP280_SETUP": "⛰️기압 고도(BMP280) 센서 설정",
  "BKY_BMP280_SETUP_TOOLTIP": "DFRobot BMP280 기압 온도 센서를 초기화합니다.",
  "BKY_BMP280_SET_SEA_PRESSURE": "⛰️BMP280 해수면 기압 설정: %1 hPa (기상 데이터)",
  "BKY_BMP280_SET_SEA_PRESSURE_TOOLTIP": "정확한 고도 측정을 위해 기상청에서 제공하는 지역별 해수면 기압을 설정합니다.",
  "BKY_BMP280_SET_REFERENCE": "⛰️BMP280 현재 위치를 %1 m 기준점으로 설정",
  "BKY_BMP280_SET_REFERENCE_TOOLTIP": "상대 고도 측정을 위해 현재 위치를 기준점으로 설정합니다.",
  "BKY_BMP280_READ": "⛰️BMP280 값 | 항목 %1",
  "BKY_BMP280_PRES_PA": "기압(Pa)",
  "BKY_BMP280_PRES_HPA": "기압(hPa)",
  "BKY_BMP280_ALT": "고도(m)",
  "BKY_BMP280_REL_ALT": "상대 고도(m)",
  "BKY_BMP280_TEMP": "온도(℃)",
  "BKY_BMP280_READ_TOOLTIP": "BMP280 센서에서 온도, 기압, 고도 값을 읽습니다.",
  "BKY_MPU_SETUP": "🛰️ 자이로 센서(MPU6050) 설정",
  "BKY_MPU_SETUP_TOOLTIP": "I2C(Wire)를 통해 MPU6050을 초기화하고 필요한 라이브러리를 포함합니다.",
  "BKY_MPU_UPDATE": "🛰️ MPU6050 값 업데이트",
  "BKY_MPU_UPDATE_TIP": "센서 값을 읽어 내부 상태를 갱신합니다. loop() 안에서 계속 호출하세요.",
  "BKY_MPU_READ": "🛰️ MPU6050 값 읽기: %1",
  "BKY_MPU_TEMP": "온도(℃)",
  "BKY_MPU_ANGLE_X": "각도 X(°)",
  "BKY_MPU_ANGLE_Y": "각도 Y(°)",
  "BKY_MPU_ANGLE_Z": "각도 Z(°)",
  "BKY_MPU_ACC_X": "가속도 X(g)",
  "BKY_MPU_ACC_Y": "가속도 Y(g)",
  "BKY_MPU_ACC_Z": "가속도 Z(g)",
  "BKY_MPU_GYRO_X": "자이로 X(°/s)",
  "BKY_MPU_GYRO_Y": "자이로 Y(°/s)",
  "BKY_MPU_GYRO_Z": "자이로 Z(°/s)",
  "BKY_MPU_READ_TIP": "update() 후 선택한 값을 반환합니다.",
  "BKY_MPU_SET_OFFSETS": "🛰️ 자이로 오프셋 설정  X:%1  Y:%2  Z:%3",
  "BKY_MPU_SET_OFFSETS_TIP": "자이로 오프셋 값을 수동으로 설정합니다.",
  "BKY_MPU_CALC_OFFSETS": "🛰️ 자이로 오프셋 자동 계산  안정화:%1ms  측정:%2ms",
  "BKY_MPU_CALC_OFFSETS_TIP": "보드를 평평하게 놓고 실행하세요. 자이로 오프셋을 자동으로 계산합니다.",
  "BKY_SGP30_SETUP": "🌿 CO2 센서(SGP30) 설정: I2C 시작 + 센서 초기화 | 초기 eCO2 베이스라인 %1 | TVOC 베이스라인 %2",
  "BKY_SGP30_SETUP_TOOLTIP": "Wire.begin(); sgp.begin(); (선택) setIAQBaseline(eCO2_base, TVOC_base)",
  "BKY_SGP30_MEASURE": "🌿 SGP30 측정 실행 (eCO2/TVOC 업데이트)",
  "BKY_SGP30_MEASURE_TOOLTIP": "IAQmeasure() 호출로 eCO2(ppm), TVOC(ppb)를 업데이트합니다.",
  "BKY_SGP30_GET_ECO2": "🌿 eCO2 (ppm)",
  "BKY_SGP30_GET_ECO2_TOOLTIP": "마지막으로 측정된 eCO2 값 (ppm)",
  "BKY_SGP30_GET_TVOC": "🌿 TVOC (ppb)",
  "BKY_SGP30_GET_TVOC_TOOLTIP": "마지막으로 측정된 TVOC 값 (ppb)",
  "BKY_SGP30_SET_HUM": "🌿 습도 보상 설정 (절대 습도 mg/m³) %1",
  "BKY_SGP30_SET_HUM_TOOLTIP": "setHumidity(absolute_humidity)",
  "BKY_SGP30_SET_BASE": "🌿 베이스라인 설정: eCO2 %1 | TVOC %2",
  "BKY_SGP30_SET_BASE_TOOLTIP": "setIAQBaseline(eCO2_base, TVOC_base)",
  "BKY_SGP30_EE_SAVE_FIXED": "🌿 SGP30 베이스라인 저장 (EEPROM 고정 주소)",
  "BKY_SGP30_EE_SAVE_FIXED_TIP": "eCO2→0번 주소, TVOC→2번 주소에 저장합니다.",
  "BKY_SGP30_EE_LOAD_FIXED": "🌿 SGP30 베이스라인 불러오기 (EEPROM 고정 주소)",
  "BKY_SGP30_EE_LOAD_FIXED_TIP": "0/2번 주소에서 읽어와 setIAQBaseline을 적용합니다.",
  "BKY_SGP30_EE_SAVE": "🌿 SGP30 베이스라인 저장 | eCO2 주소 %1 | TVOC 주소 %2",
  "BKY_SGP30_EE_SAVE_TIP": "getIAQBaseline()을 읽어와 지정된 주소에 저장합니다.",
  "BKY_SGP30_EE_LOAD": "🌿 SGP30 베이스라인 불러오기 | eCO2 주소 %1 | TVOC 주소 %2",
  "BKY_SGP30_EE_LOAD_TIP": "EEPROM에서 읽어와 setIAQBaseline을 적용합니다.",
  "BKY_VL53_SETUP": "📏 레이저 거리 센서(VL53L0X) 설정: I2C 주소 %1",
  "BKY_VL53_SETUP_TIP": "Wire.begin(); vl53.begin(address); (예: 0x29)",
  "BKY_VL53_SET_MODE": "📏 VL53L0X 모드 설정 | 측정 모드 %1 | 정밀도 %2",
  "BKY_VL53_MODE_SINGLE": "단일 측정(eSingle)",
  "BKY_VL53_MODE_CONT": "연속 측정(eContinuous)",
  "BKY_VL53_PREC_HIGH": "높은 정밀도(eHigh)",
  "BKY_VL53_PREC_LOW": "낮은 정밀도(eLow)",
  "BKY_VL53_SET_MODE_TIP": "setMode(mode, precision) 호출",
  "BKY_VL53_CTRL": "📏 VL53L0X 제어 %1",
  "BKY_VL53_START": "측정 시작",
  "BKY_VL53_STOP": "측정 중지",
  "BKY_VL53_CTRL_TIP": "start()/stop()",
  "BKY_VL53_READ": "📏 VL53L0X 읽기 %1",
  "BKY_VL53_VAL_DIST": "거리(mm)",
  "BKY_VL53_VAL_AMBIENT": "주변광(ambient)",
  "BKY_VL53_VAL_SIGNAL": "신호 강도(signal)",
  "BKY_VL53_VAL_STATUS": "상태 코드(status)",
  "BKY_VL53_READ_TIP": "getDistance()/getAmbientCount()/getSignalCount()/getStatus()",
  "BKY_SHT31_SETUP": "🌡️ 온습도(SHT31) 센서 설정 | I2C 주소 %1",
  "BKY_SHT31_SETUP_TIP": "SHT31 온습도 센서를 초기화합니다.",
  "BKY_SHT31_READ": "🌡️ SHT31 센서 읽기 %1",
  "BKY_SHT31_FAST": "빠른 읽기",
  "BKY_SHT31_SLOW": "정확한 읽기",
  "BKY_SHT31_READ_TIP": "SHT31 센서에서 온습도 데이터를 읽습니다.",
  "BKY_SHT31_CONNECTED": "🌡️ SHT31 센서 연결됨",
  "BKY_SHT31_CONNECTED_TIP": "SHT31 센서가 연결되었는지 확인합니다.",
  "BKY_SHT31_GET_DATA": "🌡️ SHT31 %1",
  "BKY_SHT31_TEMP_C": "온도 (°C)",
  "BKY_SHT31_TEMP_F": "온도 (°F)",
  "BKY_SHT31_HUMIDITY": "습도 (%)",
  "BKY_SHT31_GET_DATA_TIP": "SHT31 센서에서 선택한 데이터를 가져옵니다.",
  "BKY_SHT31_HEATER": "🌡️ SHT31 히터 %1",
  "BKY_SHT31_HEAT_ON": "켜기",
  "BKY_SHT31_HEAT_OFF": "끄기",
  "BKY_SHT31_HEATER_TIP": "SHT31 센서의 내부 히터를 제어합니다.",
  "BKY_SHT31_HEAT_STATUS": "🌡️ SHT31 히터 동작 중",
  "BKY_SHT31_HEAT_STATUS_TIP": "SHT31 센서의 히터가 동작 중인지 확인합니다.",
  "BKY_SHT31_RESET": "🌡️ SHT31 리셋 %1",
  "BKY_SHT31_SOFT": "소프트 리셋",
  "BKY_SHT31_HARD": "하드 리셋",
  "BKY_SHT31_RESET_TIP": "SHT31 센서를 리셋합니다.",
  "BKY_SHT31_ERROR": "🌡️ SHT31 에러 코드",
  "BKY_SHT31_ERROR_TIP": "SHT31 센서의 마지막 에러 코드를 가져옵니다.",
  "BKY_COLOR_SENSOR_SETUP": "🎨 색상 센서(TCS34725) 설정",
  "BKY_COLOR_SENSOR_SETUP_TIP": "색상 센서를 설정하고 통신을 초기화합니다.",
  "BKY_COLOR_SENSOR_INIT": "🎨 색상 센서 초기화",
  "BKY_COLOR_SENSOR_INIT_TIP": "색상 센서를 초기화하고 색상 감지를 활성화합니다.",
  "BKY_COLOR_SENSOR_TRIGGER": "🎨 색상 센서 색상 감지 %1",
  "BKY_COLOR_SENSOR_RAW": "원본 색상",
  "BKY_COLOR_SENSOR_ADJUST": "보정된 색상",
  "BKY_COLOR_SENSOR_TRIGGER_TIP": "색상을 감지하고 RGB/HSV 데이터를 계산합니다.",
  "BKY_COLOR_SENSOR_GET_DATA": "🎨 색상 센서 %1",
  "BKY_COLOR_SENSOR_RED": "빨강 (0~255)",
  "BKY_COLOR_SENSOR_GREEN": "초록 (0~255)",
  "BKY_COLOR_SENSOR_BLUE": "파랑 (0~255)",
  "BKY_COLOR_SENSOR_HUE": "색상 (0~360)",
  "BKY_COLOR_SENSOR_SATURATION": "채도 (0~1)",
  "BKY_COLOR_SENSOR_VALUE": "명도 (0~1)",
  "BKY_COLOR_SENSOR_GET_DATA_TIP": "색상 센서에서 선택한 색상 데이터를 가져옵니다.",
  "BKY_COLOR_SENSOR_IS_COLOR": "🎨 색상 센서 색상이 %1 인가?",
  "BKY_COLOR_SENSOR_COLOR_RED": "빨강",
  "BKY_COLOR_SENSOR_COLOR_GREEN": "초록",
  "BKY_COLOR_SENSOR_COLOR_BLUE": "파랑",
  "BKY_COLOR_SENSOR_COLOR_YELLOW": "노랑",
  "BKY_COLOR_SENSOR_COLOR_CYAN": "청록",
  "BKY_COLOR_SENSOR_COLOR_MAGENTA": "자홍",
  "BKY_COLOR_SENSOR_IS_COLOR_TIP": "감지된 색상이 선택한 색상과 일치하는지 확인합니다.",
  "BKY_MLX90614_SETUP": "🌡MLX90614 온도센서 설정 I2C 주소 %1",
  "BKY_MLX90614_SETUP_TIP": "I2C 주소로 MLX90614 비접촉 온도센서를 초기화합니다.",
  "BKY_MLX90614_READ_TEMP": "🌡%1 온도를 %2로 읽기",
  "BKY_MLX90614_READ_TEMP_TIP": "객체 또는 주변 온도를 섭씨 또는 화씨로 읽습니다.",
  "BKY_MLX90614_OBJECT": "객체",
  "BKY_MLX90614_AMBIENT": "주변",
  "BKY_MLX90614_CELSIUS": "섭씨 (°C)",
  "BKY_MLX90614_FAHRENHEIT": "화씨 (°F)",
  "BKY_APDS9960_SETUP": "👋 제스처 센서(APDS9960) 설정",
  "BKY_APDS9960_SETUP_TIP": "APDS9960 제스처/근접/조도 센서를 초기화합니다.",
  "BKY_APDS9960_SENSOR_CONTROL": "👋 APDS9960 %1 센서 %2, 인터럽트 %3",
  "BKY_APDS9960_LIGHT": "조도",
  "BKY_APDS9960_PROXIMITY": "근접",
  "BKY_APDS9960_GESTURE": "제스처",
  "BKY_APDS9960_ENABLE": "활성화",
  "BKY_APDS9960_DISABLE": "비활성화",
  "BKY_APDS9960_INT_ON": "사용",
  "BKY_APDS9960_INT_OFF": "사용 안 함",
  "BKY_APDS9960_SENSOR_CONTROL_TIP": "APDS9960의 특정 센서를 제어합니다.",
  "BKY_APDS9960_READ_LIGHT": "👋 APDS9960 %1 조도",
  "BKY_APDS9960_AMBIENT": "주변광",
  "BKY_APDS9960_RED": "빨강",
  "BKY_APDS9960_GREEN": "초록",
  "BKY_APDS9960_BLUE": "파랑",
  "BKY_APDS9960_READ_LIGHT_TIP": "APDS9960에서 선택한 조도 데이터를 읽습니다.",
  "BKY_APDS9960_READ_PROXIMITY": "👋 APDS9960 근접 센서 값",
  "BKY_APDS9960_READ_PROXIMITY_TIP": "APDS9960 근접 센서 값을 읽습니다 (0-255).",
  "BKY_APDS9960_GESTURE_AVAILABLE": "👋 APDS9960 제스처 감지됨",
  "BKY_APDS9960_GESTURE_AVAILABLE_TIP": "읽을 수 있는 제스처가 있는지 확인합니다.",
  "BKY_APDS9960_GESTURE_CONTROL": "👋 APDS9960 제스처 %1 %2",
  "BKY_APDS9960_READ_ANY": "읽기",
  "BKY_APDS9960_CHECK_SPECIFIC": "확인",
  "BKY_APDS9960_GESTURE_LEFT": "왼쪽",
  "BKY_APDS9960_GESTURE_RIGHT": "오른쪽",
  "BKY_APDS9960_GESTURE_UP": "위",
  "BKY_APDS9960_GESTURE_DOWN": "아래",
  "BKY_APDS9960_GESTURE_NEAR": "가까이",
  "BKY_APDS9960_GESTURE_FAR": "멀리",
  "BKY_APDS9960_GESTURE_CONTROL_TIP": "APDS9960에서 제스처를 읽거나 특정 제스처를 확인합니다.",
  "BKY_MAX30105_SETUP_BASIC": "❤️심박센서 설정하기",
  "BKY_MAX30105_SETUP_BASIC_TIP": "심박수와 혈중산소 측정을 위해 센서를 설정합니다",
  "BKY_MAX30105_GET_HEARTRATE": "❤️심박수 측정 (BPM)",
  "BKY_MAX30105_GET_HEARTRATE_TIP": "분당 심박수를 측정합니다",
  "BKY_MAX30105_GET_SPO2": "❤️혈중산소포화도 측정 (%)",
  "BKY_MAX30105_GET_SPO2_TIP": "혈중산소포화도를 퍼센트로 측정합니다",
  "BKY_MAX30105_FINGER_DETECTED": "❤️손가락이 감지됨",
  "BKY_MAX30105_FINGER_DETECTED_TIP": "센서에 손가락이 올려져 있는지 확인합니다",
  "BKY_MAX30105_BEAT_DETECTED": "❤️심장박동 감지됨",
  "BKY_MAX30105_BEAT_DETECTED_TIP": "새로운 심장박동이 감지되면 참을 반환합니다",
  "BKY_MAX30105_SENSOR_READY": "❤️센서 준비됨",
  "BKY_MAX30105_SENSOR_READY_TIP": "센서가 측정할 준비가 되었는지 확인합니다",
  "BKY_MAX30105_GET_TEMP": "❤️센서 온도 측정 (°C)",
  "BKY_MAX30105_GET_TEMP_TIP": "센서의 온도를 섭씨로 측정합니다",
  "BKY_MAX30105_SETUP_ADVANCED": "❤️%1 측정용 센서 고급설정 전력 %2",
  "BKY_MAX30105_SETUP_ADVANCED_TIP": "경험있는 사용자를 위한 고급 센서 설정",
  "BKY_MAX30105_GET_RED_RAW": "❤️적색 LED 원시값 읽기",
  "BKY_MAX30105_GET_RED_RAW_TIP": "적색 LED의 원시 센서값을 읽습니다 (고급용)",
  "BKY_MAX30105_GET_IR_RAW": "❤️적외선 LED 원시값 읽기",
  "BKY_MAX30105_GET_IR_RAW_TIP": "적외선 LED의 원시 센서값을 읽습니다 (고급용)",
  "BKY_MAX30105_MODE_HEARTRATE": "심박수",
  "BKY_MAX30105_MODE_OXYGEN": "혈중산소",
  "BKY_MAX30105_MODE_PROXIMITY": "손가락감지",
  "BKY_MAX30105_POWER_LOW": "낮음",
  "BKY_MAX30105_POWER_MEDIUM": "보통",
  "BKY_MAX30105_POWER_HIGH": "높음",
  "BKY_SI7021_SETUP": "🌡️Si7021 온습도 센서 설정",
  "BKY_SI7021_SETUP_TOOLTIP": "Adafruit Si7021 온습도 센서를 I2C로 초기화합니다.",
  "BKY_SI7021_READ": "🌡️Si7021 값 읽기: %1",
  "BKY_SI7021_TEMP": "온도(℃)",
  "BKY_SI7021_HUMIDITY": "습도(%)",
  "BKY_SI7021_READ_TOOLTIP": "Si7021 센서에서 온도 또는 습도 값을 읽습니다.",
  "BKY_SI7021_RESET": "🌡️Si7021 센서 리셋",
  "BKY_SI7021_RESET_TOOLTIP": "Si7021 센서를 리셋합니다.",
  "BKY_SI7021_SERIAL": "🌡️Si7021 시리얼 번호 읽기: %1",
  "BKY_SERIAL_A": "시리얼 A",
  "BKY_SERIAL_B": "시리얼 B",
  "BKY_SI7021_SERIAL_TOOLTIP": "Si7021 센서의 시리얼 번호를 읽습니다.",
  "BKY_DCMOTOR_SETUP": "⚙️ DC 모터(L9110) %1번: A핀 %2, B핀 %3 설정",
  "BKY_DCMOTOR_SETUP_TOOLTIP": "DC 모터를 특정 핀에 설정합니다. 이 블록은 DCmotor.h 라이브러리를 포함합니다.",
  "BKY_DCMOTOR_RUN": "⚙️ DC 모터 %1번: 속도 %2, 방향 %3 으로 회전",
  "BKY_DCMOTOR_CLOCKWISE": "시계 방향",
  "BKY_DCMOTOR_COUNTERCLOCKWISE": "반시계 방향",
  "BKY_DCMOTOR_RUN_TOOLTIP": "DC 모터를 지정된 속도(0~255)와 방향으로 회전시킵니다.",
  "BKY_DCMOTOR_STOP": "⚙️ DC 모터 %1번: 정지",
  "BKY_DCMOTOR_STOP_TOOLTIP": "DC 모터를 정지시킵니다.",
  "BKY_ACCELSTEPPER_SETUP": "🔄 스텝 모터(A4988) 드라이버(%1) %2: DIR핀 %3, Step핀 %4 설정",
  "BKY_ACCELSTEPPER_DRIVER": "드라이버(2핀)",
  "BKY_ACCELSTEPPER_FULL2WIRE": "2선 풀스텝",
  "BKY_ACCELSTEPPER_FULL4WIRE": "4선 풀스텝",
  "BKY_ACCELSTEPPER_HALF4WIRE": "4선 하프스텝",
  "BKY_ACCELSTEPPER_SETUP_TIP": "스텝 모터를 초기화하고 드라이버 유형과 핀을 설정합니다.",
  "BKY_ACCELSTEPPER_SETTINGS": "🔄 스텝 모터 %1: 최대 속도 %2, 가속도 %3, 속도 설정 %4, 스텝 설정 %5",
  "BKY_ACCELSTEPPER_SETTINGS_TIP": "스텝 모터의 속도, 가속도, 스텝 설정을 합니다.",
  "BKY_ACCELSTEPPER_MOVE": "🔄 스텝 모터 %1: %2 %3",
  "BKY_ACCELSTEPPER_MOVE_TO": "절대 위치로 이동",
  "BKY_ACCELSTEPPER_MOVE_REL": "상대 위치로 이동",
  "BKY_ACCELSTEPPER_SET_POS": "현재 위치 설정",
  "BKY_ACCELSTEPPER_MOVE_TIP": "스텝 모터의 위치를 설정하거나 이동합니다.",
  "BKY_ACCELSTEPPER_CONTROL": "🔄 스텝 모터 %1: %2",
  "BKY_ACCELSTEPPER_RUN": "실행",
  "BKY_ACCELSTEPPER_RUN_SPEED": "속도로 실행",
  "BKY_ACCELSTEPPER_RUN_TO_POS": "위치로 실행",
  "BKY_ACCELSTEPPER_STOP": "정지",
  "BKY_ACCELSTEPPER_ENABLE": "출력 활성화",
  "BKY_ACCELSTEPPER_DISABLE": "출력 비활성화",
  "BKY_ACCELSTEPPER_CONTROL_TIP": "스텝 모터를 제어합니다.",
  "BKY_ACCELSTEPPER_STATUS": "🔄 스텝 모터 %1: %2",
  "BKY_ACCELSTEPPER_CURRENT_POS": "현재 위치",
  "BKY_ACCELSTEPPER_TARGET_POS": "목표 위치",
  "BKY_ACCELSTEPPER_DISTANCE": "남은 거리",
  "BKY_ACCELSTEPPER_IS_RUNNING": "동작 중?",
  "BKY_ACCELSTEPPER_SPEED": "현재 속도",
  "BKY_ACCELSTEPPER_STATUS_TIP": "스텝 모터의 상태를 확인합니다.",
  "BKY_STEPPERMULTI_SETUP": "⚡ 스텝 모터(%1 & %2) %3 설정",
  "BKY_STEPPERMULTI_28BYJ": "28BYJ-48",
  "BKY_STEPPERMULTI_ULN2003": "ULN2003",
  "BKY_STEPPERMULTI_CUSTOM": "사용자 정의",
  "BKY_STEPPERMULTI_4PIN": "4핀 연결",
  "BKY_STEPPERMULTI_2PIN": "2핀 연결",
  "BKY_STEPPERMULTI_SETUP_PINS": "핀: IN1 %1 IN2 %2 IN3 %3 IN4 %4",
  "BKY_STEPPERMULTI_SETUP_TIP": "StepperMulti 모터를 설정합니다 (28BYJ-48은 1회전당 2048 스텝).",
  "BKY_STEPPERMULTI_SPEED": "⚡ 스텝 모터 %1번: 회전 속도 %2 RPM",
  "BKY_STEPPERMULTI_SPEED_TIP": "스텝 모터의 회전 속도를 RPM 단위로 설정합니다.",
  "BKY_STEPPERMULTI_MOVE": "⚡ 스텝 모터 %1번: %2 만큼 %3 이동 설정",
  "BKY_STEPPERMULTI_STEP": "스텝",
  "BKY_STEPPERMULTI_ANGLE": "각도",
  "BKY_STEPPERMULTI_MOVE_TIP": "스텝 모터가 지정된 스텝 수 또는 각도만큼 이동하도록 설정합니다.",
  "BKY_STEPPERMULTI_RUN": "⚡ 스텝 모터 %1번: 움직이기",
  "BKY_STEPPERMULTI_RUN_TIP": "실제로 스텝 모터를 움직입니다 (루프 안에서 계속 호출해야 함).",
  "BKY_PWMSERVO_SETUP": "🦾서보 드라이버(PCA9685) 설정 %1 I2C 주소 %2 PWM 주파수 %3 Hz",
  "BKY_PWMSERVO_SETUP_TIP": "I2C 연결로 16채널 PWM 서보 드라이버를 설정합니다.",
  "BKY_PWMSERVO_SERVO_ANGLE": "🦾서보 드라이버 %1 채널 %2 각도 설정 %3 도",
  "BKY_PWMSERVO_SERVO_ANGLE_TIP": "서보 모터 각도를 제어합니다 (0-180도).",
  "BKY_PWMSERVO_SERVO_MICROSECONDS": "🦾서보 드라이버 %1 채널 %2 펄스 설정 %3 마이크로초",
  "BKY_PWMSERVO_SERVO_MICROSECONDS_TIP": "정밀한 펄스 폭으로 서보 모터를 제어합니다 (500-2500 마이크로초).",
  "BKY_PWMSERVO_PWM_OUTPUT": "🦾서보 드라이버 %1 채널 %2 PWM 값 %3 (0-4095)",
  "BKY_PWMSERVO_PWM_OUTPUT_TIP": "LED 또는 모터 제어를 위한 PWM 출력값을 설정합니다 (0-4095).",
  "BKY_PWMSERVO_PWM_ADVANCED": "🦾서보 드라이버 %1 채널 %2 PWM 온 %3 오프 %4",
  "BKY_PWMSERVO_PWM_ADVANCED_TIP": "온/오프 타이밍으로 고급 PWM 제어를 합니다 (0-4095).",
  "BKY_PWMSERVO_POWER": "🦾서보 드라이버 %1 %2",
  "BKY_PWMSERVO_POWER_WAKEUP": "깨우기",
  "BKY_PWMSERVO_POWER_SLEEP": "절전모드",
  "BKY_PWMSERVO_POWER_RESET": "재설정",
  "BKY_PWMSERVO_POWER_TIP": "서보 드라이버 전원 관리를 제어합니다.",
  "BKY_PWMSERVO_MULTI_SERVO": "🦾서보 드라이버 %1 다중 서보 설정 Ch1 %2° Ch2 %3° Ch3 %4° Ch4 %5°",
  "BKY_PWMSERVO_MULTI_SERVO_TIP": "여러 서보 모터를 동시에 제어합니다.",
  "BKY_PWMSERVO_LED_BRIGHTNESS": "🦾서보 드라이버 %1 채널 %2 LED 밝기 %3 %",
  "BKY_PWMSERVO_LED_BRIGHTNESS_TIP": "PWM을 사용하여 LED 밝기를 제어합니다 (0-100%).",
  "BKY_BUZZER_TONE_SETUP": "🎵 부저 설정",
  "BKY_BUZZER_TONE_SETUP_TOOLTIP": "부저 라이브러리를 초기화하고 연주에 필요한 함수를 준비합니다. setup()에 한 번만 넣으세요.",
  "BKY_BUZZER_PLAY_NOTE": "🎵 부저: 디지털 %1번 핀에서 %2 음을 %3 박자로 연주",
  "BKY_NOTE_C4": "도(C4)",
  "BKY_NOTE_CS4": "도#(C#4)",
  "BKY_NOTE_D4": "레(D4)",
  "BKY_NOTE_DS4": "레#(D#4)",
  "BKY_NOTE_E4": "미(E4)",
  "BKY_NOTE_F4": "파(F4)",
  "BKY_NOTE_FS4": "파#(F#4)",
  "BKY_NOTE_G4": "솔(G4)",
  "BKY_NOTE_GS4": "솔#(G#4)",
  "BKY_NOTE_A4": "라(A4)",
  "BKY_NOTE_AS4": "라#(A#4)",
  "BKY_NOTE_B4": "시(B4)",
  "BKY_NOTE_C5": "높은 도(C5)",
  "BKY_NOTE_REST": "(쉼표)",
  "BKY_BEAT_WHOLE": "온음표 (4)",
  "BKY_BEAT_DOTTED_HALF": "점2분음표 (3)",
  "BKY_BEAT_HALF": "2분음표 (2)",
  "BKY_BEAT_DOTTED_QUARTER": "점4분음표 (1.5)",
  "BKY_BEAT_QUARTER": "4분음표 (1)",
  "BKY_BEAT_EIGHTH": "8분음표 (0.5)",
  "BKY_BEAT_SIXTEENTH": "16분음표 (0.25)",
  "BKY_BUZZER_PLAY_NOTE_TOOLTIP": "연결된 부저로 음계와 박자에 맞춰 소리를 냅니다.",
  "BKY_BUZZER_SET_TEMPO": "🎵 연주 속도(BPM)를 %1 로 정하기",
  "BKY_BUZZER_SET_TEMPO_TOOLTIP": "분당 비트 수(BPM)로 연주 속도를 정합니다. 기본값은 120입니다.",
  "BKY_BUZZER_STOP": "🎵 부저: 디지털 %1번 핀 소리 멈추기",
  "BKY_BUZZER_STOP_TOOLTIP": "부저 소리를 즉시 멈춥니다.",
  "BKY_MP3_SETUP": "🎧 MP3(KT403A) 설정: 장치 %1, RX %2, TX %3, 초기 볼륨(0~30) %4",
  "BKY_MP3_DEV_SD": "SD 카드(0x02)",
  "BKY_MP3_DEV_UDISK": "U 디스크(0x01)",
  "BKY_MP3_SETUP_TIP": "SoftwareSerial mp3 생성, 장치 선택, 볼륨 초기화",
  "BKY_MP3_PLAY_INDEX": "🎧 MP3 트랙 번호 %1 재생",
  "BKY_MP3_PLAY_INDEX_TIP": "SpecifyMusicPlay(index)",
  "BKY_MP3_PLAY_FOLDER": "🎧 MP3 폴더/파일 재생: 폴더 %1, 파일 %2",
  "BKY_MP3_PLAY_FOLDER_TIP": "SpecifyfolderPlay(folder, file)",
  "BKY_MP3_SET_VOLUME": "🎧 MP3 볼륨 설정(0~30) %1",
  "BKY_MP3_SET_VOLUME_TIP": "SetVolume(vol)",
  "BKY_MP3_CONTROL": "🎧 MP3 제어 %1",
  "BKY_MP3_NEXT": "다음 곡",
  "BKY_MP3_PREV": "이전 곡",
  "BKY_MP3_PAUSE": "일시정지",
  "BKY_MP3_RESUME": "다시재생",
  "BKY_MP3_LOOP_ALL": "전체 반복",
  "BKY_MP3_VOL_UP": "볼륨↑",
  "BKY_MP3_VOL_DOWN": "볼륨↓",
  "BKY_MP3_PRINT_RET": "반환 데이터 출력",
  "BKY_MP3_CONTROL_TIP": "PlayNext/Previous, PlayPause/Resume, PlayLoop, Increase/DecreaseVolume, printReturnedData",
  "BKY_MP3_QUERY_STATUS": "🎧 MP3 상태 값 (0=재생 완료)",
  "BKY_MP3_QUERY_STATUS_TIP": "QueryPlayStatus(): 0은 재생 완료를 의미합니다.",
  "BKY_SD_SETUP": "💾SD 카드 %1 1번설정 CS %2 MOSI %3 MISO %4 SCK %5",
  "BKY_SD_SETUP_TIP": "지정된 CS 핀으로 SD 카드를 초기화합니다.",
  "BKY_SD_OPEN_FILE": "💾파일 열기 %1 파일명 %2 모드 %3",
  "BKY_SD_OPEN_FILE_TIP": "읽기 또는 쓰기를 위해 파일을 엽니다.",
  "BKY_SD_WRITE_FILE": "💾파일에 쓰기 %1 데이터 %2",
  "BKY_SD_WRITE_FILE_TIP": "열린 파일에 데이터를 씁니다.",
  "BKY_SD_READ_FILE": "💾파일에서 읽기 %1",
  "BKY_SD_READ_FILE_TIP": "열린 파일에서 데이터를 읽습니다.",
  "BKY_SD_FILE_EXISTS": "💾파일 존재 확인 %1 파일명 %2",
  "BKY_SD_FILE_EXISTS_TIP": "SD 카드에 파일이 존재하는지 확인합니다.",
  "BKY_SD_FILE_SIZE": "💾파일 크기 %1",
  "BKY_SD_FILE_SIZE_TIP": "열린 파일의 크기를 바이트 단위로 가져옵니다.",
  "BKY_SD_CLOSE_FILE": "💾파일 닫기 %1",
  "BKY_SD_CLOSE_FILE_TIP": "열린 파일을 닫습니다.",
  "BKY_SD_REMOVE_FILE": "💾파일 삭제 %1 파일명 %2",
  "BKY_SD_REMOVE_FILE_TIP": "SD 카드에서 파일을 삭제합니다.",
  "BKY_SD_MAKE_DIRECTORY": "💾디렉토리 생성 %1 경로 %2",
  "BKY_SD_MAKE_DIRECTORY_TIP": "SD 카드에 디렉토리를 생성합니다.",
  "BKY_SD_FILE_AVAILABLE": "💾읽을 수 있는 바이트 %1",
  "BKY_SD_FILE_AVAILABLE_TIP": "읽을 수 있는 바이트 수를 가져옵니다.",
  "BKY_SD_MODE_READ": "읽기",
  "BKY_SD_MODE_WRITE": "쓰기",
  "BKY_IR_SETUP": "📱 IR 리모컨 수신기 설정: 핀 %1",
  "BKY_IR_SETUP_TIP": "적외선 리모컨 수신기를 설정합니다.",
  "BKY_IR_AVAILABLE": "📱 IR 리모컨 신호 있음?",
  "BKY_IR_AVAILABLE_TIP": "IR 리모컨 신호가 수신되었는지 확인합니다.",
  "BKY_IR_READ_BUTTON": "📱 IR 리모컨 버튼 번호",
  "BKY_IR_READ_BUTTON_TIP": "눌린 IR 리모컨 버튼의 번호를 반환합니다 (0-9, 10:CH-, 11:CH, 12:CH+, 20-22:재생버튼, 30-32:볼륨버튼).",
  "BKY_IR_READ_RAW": "📱 IR 리모컨 원본 코드 값",
  "BKY_IR_READ_RAW_TIP": "IR 리모컨의 원본 코드 값을 반환합니다 (고급 사용자용).",
  "BKY_IR_BUTTON_IS": "📱 IR 리모컨 버튼이 %1 인가?",
  "BKY_IR_BTN_0": "0",
  "BKY_IR_BTN_1": "1",
  "BKY_IR_BTN_2": "2",
  "BKY_IR_BTN_3": "3",
  "BKY_IR_BTN_4": "4",
  "BKY_IR_BTN_5": "5",
  "BKY_IR_BTN_6": "6",
  "BKY_IR_BTN_7": "7",
  "BKY_IR_BTN_8": "8",
  "BKY_IR_BTN_9": "9",
  "BKY_IR_BTN_CH_DOWN": "CH-",
  "BKY_IR_BTN_CH": "CH",
  "BKY_IR_BTN_CH_UP": "CH+",
  "BKY_IR_BTN_PREV": "이전",
  "BKY_IR_BTN_NEXT": "다음",
  "BKY_IR_BTN_PLAY": "재생",
  "BKY_IR_BTN_VOL_DOWN": "볼륨-",
  "BKY_IR_BTN_VOL_UP": "볼륨+",
  "BKY_IR_BUTTON_IS_TIP": "IR 리모컨에서 특정 버튼이 눌렸는지 확인합니다.",
  "BKY_RF433_SETUP": "📡 RF433MHz 무선 통신 송수신",
  "BKY_RF433_SETUP_TIP": "RF433MHz 무선 통신 라이브러리를 초기화합니다.",
  "BKY_RF433_CONFIG": "📡 RF433MHz 송신 핀 %1, %2 데이터 전송",
  "BKY_RF433_CONFIG_TIP": "RF433MHz 송신 핀을 설정하고 메시지를 보냅니다.",
  "BKY_RF433_RX_SETUP": "📡 RF433MHz 수신 핀 %1, 전송 속도 %2 설정",
  "BKY_RF433_RX_SETUP_TIP": "RF433MHz 수신 핀과 전송 속도를 설정합니다.",
  "BKY_RF433_RX_START": "📡 RF433MHz 1. 수신 데이터를 버퍼에 저장할 준비",
  "BKY_RF433_RX_START_TIP": "RF433MHz 수신기를 시작하여 데이터 수신을 준비합니다.",
  "BKY_RF433_HAVE_MESSAGE": "📡 RF433MHz 2. 수신된 데이터가 있다면?",
  "BKY_RF433_HAVE_MESSAGE_TIP": "수신된 메시지가 있는지 확인합니다.",
  "BKY_RF433_GET_MESSAGE": "📡 RF433MHz 3. 수신 데이터를 버퍼에 저장",
  "BKY_RF433_GET_MESSAGE_TIP": "수신된 메시지를 버퍼에 저장합니다.",
  "BKY_RF433_READ_DATA": "📡 RF433MHz: 수신된 데이터 읽기",
  "BKY_RF433_READ_DATA_TIP": "버퍼에 저장된 수신 데이터를 읽습니다.",
  "BKY_GPS_SETUP_TGPS": "📶 GPS 설정: 시리얼 %1, 통신 속도 %2",
  "BKY_GPS_SETUP_TGPS2": "↳ (소프트웨어 시리얼 선택 시) RX 핀 %1 TX 핀 %2",
  "BKY_GPS_SETUP_TGPS_TIP": "TinyGPS++ 초기화 및 선택한 시리얼 시작",
  "BKY_GPS_UPDATE": "📶 GPS 업데이트 (시리얼 수신 → 파서)",
  "BKY_GPS_UPDATE_TIP": "수신된 NMEA 문자를 gps.encode()로 전달합니다.",
  "BKY_GPS_READ": "📶 GPS 값 읽기 %1",
  "BKY_GPS_LAT": "위도",
  "BKY_GPS_LNG": "경도",
  "BKY_GPS_SPEED": "속도(km/h)",
  "BKY_GPS_ALT": "고도(m)",
  "BKY_GPS_COURSE": "방향(deg)",
  "BKY_GPS_SATS": "위성 수",
  "BKY_GPS_HDOP": "HDOP",
  "BKY_GPS_YEAR": "년",
  "BKY_GPS_MONTH": "월",
  "BKY_GPS_DAY": "일",
  "BKY_GPS_HOUR": "시",
  "BKY_GPS_MIN": "분",
  "BKY_GPS_SEC": "초",
  "BKY_GPS_READ_TIP": "TinyGPS++ 멤버에서 필요한 값을 반환합니다.",
  "BKY_GPS_HAS_FIX": "📶 GPS 신호 잡힘 (FIX)?",
  "BKY_GPS_HAS_FIX_TIP": "gps.location.isValid() → 1/0",
  "BKY_GPS_BETWEEN": "📶 두 좌표 계산 | 계산 종류 %1 | 위도1 %2 경도1 %3 위도2 %4 경도2 %5",
  "BKY_GPS_DIST_M": "거리(m)",
  "BKY_GPS_COURSE_DEG": "방위각(deg)",
  "BKY_GPS_BETWEEN_TIP": "distanceBetween()/courseTo() 계산",
  "BKY_GPS_CARDINAL": "📶 방위각을 16방위로 | 각도 %1",
  "BKY_GPS_CARDINAL_TIP": "cardinal(deg) → N, NE, E ...",
  "BKY_UTIL_SERIAL_BEGIN": "1. 시리얼 통신 설정 (속도: %1)",
  "BKY_UTIL_SERIAL_BEGIN_TOOLTIP": "하드웨어 시리얼 통신을 시작합니다.",
  "BKY_UTIL_SERIAL_AVAILABLE_CHECK": "2. 시리얼 통신 데이터가 있다면",
  "BKY_UTIL_SERIAL_AVAILABLE_CHECK_TOOLTIP": "시리얼 포트로 수신된 데이터가 있는지 확인합니다.",
  "BKY_UTIL_SERIAL_READ": "3. %1 읽기",
  "BKY_SERIAL_READ_BYTE": "바이트",
  "BKY_SERIAL_READ_STRING": "문자열",
  "BKY_SERIAL_READ_STRING_UNTIL": "줄바꿈까지 읽기",
  "BKY_UTIL_SERIAL_READ_TOOLTIP": "시리얼 포트에서 데이터를 읽습니다. 바이트: 1바이트, 문자열: 전체, 줄바꿈까지: \\n까지 읽기",
  "BKY_UTIL_SERIAL_PRINT": "4. 시리얼 %1 %2 값 출력",
  "BKY_SERIAL_PRINTLN": "println",
  "BKY_SERIAL_PRINT": "print",
  "BKY_UTIL_SERIAL_PRINT_TOOLTIP": "시리얼 모니터로 데이터를 출력합니다.",
  "BKY_UTIL_BT_SETUP": "1. 블루투스: Tx %1, Rx %2, 속도 %3 설정",
  "BKY_UTIL_BT_SETUP_TOOLTIP": "소프트웨어 시리얼을 사용하여 블루투스 통신을 설정합니다.",
  "BKY_UTIL_BT_AVAILABLE": "2. 블루투스: 수신 데이터가 있다면",
  "BKY_UTIL_BT_AVAILABLE_TOOLTIP": "블루투스를 통해 수신된 데이터가 있는지 확인합니다.",
  "BKY_UTIL_BT_READ": "3. %1 읽기",
  "BKY_UTIL_BT_READ_TOOLTIP": "블루투스에서 데이터를 읽습니다. 바이트: 1바이트, 문자열: 전체, 줄바꿈까지: \\n까지 읽기",
  "BKY_UTIL_BT_READ_BUFFER": "3. 바이트 읽기 (버퍼, 길이 %1)",
  "BKY_UTIL_BT_READ_BUFFER_TOOLTIP": "버퍼에서 지정된 길이의 데이터를 읽습니다.",
  "BKY_UTIL_BT_PRINT": "4. 블루투스: %1 %2 데이터 출력",
  "BKY_UTIL_BT_PRINT_TOOLTIP": "블루투스를 통해 데이터를 보냅니다.",
  "BKY_UTIL_MILLIS": "millis() 호출",
  "BKY_UTIL_MILLIS_TOOLTIP": "프로그램 시작 후 경과 시간을 밀리초 단위로 반환합니다.",
  "BKY_UTIL_MAP": "∞ 변수 %1을 %2 ~ %3 범위에서 %4 ~ %5 범위로 맵핑",
  "BKY_UTIL_MAP_TOOLTIP": "한 범위의 숫자를 다른 범위로 비례하여 변환합니다.",
  "BKY_UTIL_CONSTRAIN": "∞ 변수 %1을 %2 와 %3 사이로 제한",
  "BKY_UTIL_CONSTRAIN_TOOLTIP": "숫자 값의 범위를 제한합니다.",
  "BKY_UTIL_CONVERT": "∞ %1을 %2로 변환",
  "BKY_INT": "정수",
  "BKY_FLOAT": "실수",
  "BKY_STRING": "문자열",
  "BKY_UTIL_CONVERT_TOOLTIP": "값을 다른 데이터 유형으로 변환합니다.",
  "BKY_UTIL_TO_CHAR": "∞ 아스키 코드 %1을 문자로",
  "BKY_UTIL_TO_CHAR_TOOLTIP": "아스키 숫자 코드에 해당하는 문자를 반환합니다.",
  "BKY_UTIL_TO_ASCII": "∞ 문자 %1을 아스키 코드로",
  "BKY_UTIL_TO_ASCII_TOOLTIP": "문자에 해당하는 아스키 숫자 코드를 반환합니다.",
  "BKY_UTIL_I2C_SCANNER": "I2C 주소 스캐너",
  "BKY_UTIL_I2C_SCANNER_TOOLTIP": "연결된 I2C 장치의 주소를 시리얼 모니터로 스캔합니다.",
  "BKY_UTIL_I2C_READ_ADDRESS": "I2C 주소",
  "BKY_UTIL_I2C_READ_ADDRESS_TOOLTIP": "I2C 스캔 결과 주소를 문자열로 가져옵니다.",
  "BKY_SERIAL_PARSE_DATA": "%1 구분자로 수신 데이터 파싱",
  "BKY_SERIAL_PARSE_DATA_TOOLTIP": "수신된 문자열을 특정 구분자로 잘라 파싱합니다.",
  "BKY_SERIAL_GET_PARSED_VALUE": "%1번째 파싱된 값",
  "BKY_SERIAL_GET_PARSED_VALUE_TOOLTIP": "인덱스로 파싱된 데이터 조각을 가져옵니다.",
  "BKY_SERIAL_GET_PARSED_COUNT": "파싱된 값의 개수",
  "BKY_SERIAL_GET_PARSED_COUNT_TOOLTIP": "파싱된 데이터 조각의 총 개수를 반환합니다.",
  "BKY_SERIAL_CONVERT_TO_NUMBER": "%1을 숫자로 변환",
  "BKY_SERIAL_CONVERT_TO_NUMBER_TOOLTIP": "문자열(String)을 숫자(float)로 변환합니다.",
  "BKY_SERIAL_GET_RAW_DATA": "수신된 원본 데이터",
  "BKY_SERIAL_GET_RAW_DATA_TOOLTIP": "수신된 전체 원본 문자열을 반환합니다.",
  "BKY_SERIAL_CLEAR_BUFFER": "저장된 데이터 지우기",
  "BKY_SERIAL_CLEAR_BUFFER_TOOLTIP": "내부 수신 버퍼를 지웁니다.",
  "BKY_DEVELOPER_INFO_BLOCK": "👨‍💻 개발자: 김석전 보조: 조지훈 : alphaco@kakao.com (우클릭)",
  "BKY_DEVELOPER_INFO_BLOCK_TOOLTIP": "이 블록을 우클릭하고 '도움말'을 선택하여 개발자 웹사이트를 방문하세요.",
  "BKY_CUSTOM_AD_BLOCK": "🚀 블록코딩 웹에디터 활용 가이드, BRIXEL 소개 (우클릭)",
  "BKY_CUSTOM_AD_BLOCK_TOOLTIP": "이 블록을 우클릭하고 '도움말'을 선택하여 웹사이트를 방문하세요.",
  "BKY_GO_TO_AI_ROBOT_SCRATCH": "🤖 AI*ROBOT 스크래치로 가기 (우클릭)",
  "BKY_GO_TO_AI_ROBOT_SCRATCH_TOOLTIP": "블록을 우클릭하고 '도움말'을 선택하여 AI*ROBOT 스크래치에서 AI로 하드웨어를 제어하세요.",
  "BKY_GO_TO_K12_PROJECTHUB": "🤖 K12_ProjectHub로 가기 (우클릭)",
  "BKY_GO_TO_K12_PROJECTHUB_TOOLTIP": "블록을 우클릭하고 '도움말'을 선택하여 k12-projecthub에서 다양한 예제를 살펴보세요.",
  "BKY_MAIN_FLAG": "기본적인 아두이노 코딩 구조를 제공합니다.",
  "BKY_MAIN_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_PIN_FLAG": "아두이노의 모든 핀 관련 제어를 할 수 있습니다.",
  "BKY_PIN_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_CONTROL_FLAG": "아두이노의 조건문, 반복문 구조를 제공합니다.",
  "BKY_CONTROL_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_LOGIC_FLAG": "논리 연산을 제공합니다.",
  "BKY_LOGIC_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_MATH_FLAG": "수학 기호 및 함수를 제공합니다.",
  "BKY_MATH_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_TEXT_FLAG": "문자열 처리를 제공합니다.",
  "BKY_TEXT_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_COLOUR_FLAG": "색상 선택 및 조합을 제공합니다.",
  "BKY_COLOUR_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_VAR_FLAG": "숫자 변수와 문자 변수를 만들 수 있습니다.",
  "BKY_VAR_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_FUNC_FLAG": "사용자 정의 함수를 만들 수 있습니다.",
  "BKY_FUNC_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_DIS01_FLAG": "디스플레이 출력 장치 제어 블록을 제공합니다.",
  "BKY_DIS01_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_DIS02_FLAG": "고급 디스플레이 출력 장치 제어 블록을 제공합니다.",
  "BKY_DIS02_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_SENSOR01_FLAG": "일반 센서 제어 블록을 제공합니다.",
  "BKY_SENSOR01_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_SENSOR02_FLAG": "고급 I2C 센서 제어 블록을 제공합니다.",
  "BKY_SENSOR02_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_MOTOR_FLAG": "모터 제어 블록을 제공합니다.",
  "BKY_MOTOR_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_OUTPUT_FLAG": "출력 장치 제어 블록을 제공합니다.",
  "BKY_OUTPUT_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_COMM_FLAG": "통신 장치 제어 블록을 제공합니다.",
  "BKY_COMM_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",
  "BKY_UTIL_FLAG": "코딩에 유용한 다양한 제어 블록을 제공합니다.",
  "BKY_UTIL_FLAG_TOOLTIP": "이 블록을 우클릭하여 사용 가이드를 확인하세요.",

  "sectionTitleConnection": "🔗 PC 에이전트 연결",
  "connectionStatusConnected": "✅ PC 에이전트와 연결됨",
  "connectionStatusDisconnected": "❌ PC 에이전트와 연결되지 않음",
  "portDisabledMessage": "* PC 에이전트 연결 후 사용 가능",
  "_comment": "PC 에이전트 통신 및 실시간 로그 메시지 한국어 번역",
  
  "agent_compile_start": "코드 컴파일을 시작합니다.",
  "agent_compile_mode": "현재 모드: {modeName}",
  "agent_compile_no_code": "컴파일할 코드가 없습니다.",
  "agent_compile_no_connection": "❌ PC 에이전트에 연결할 수 없습니다. 에이전트가 실행 중인지 확인해주세요.",
  "agent_compile_success": "✅ 컴파일 완료! 크기: {size}",
  "agent_compile_fail": "❌ 컴파일 실패: {errorMsg}",
  "agent_compile_request_fail": "❌ 컴파일 요청 실패: {errorMsg}",
  "agent_upload_need_compile": "업로드하기 전에 먼저 컴파일을 해주세요.",
  "agent_upload_request_sent": "📤 업로드 요청을 전송했습니다.",
  "agent_upload_fail": "❌ 업로드 실패: {errorMsg}",
  "agent_upload_no_connection": "PC 에이전트에 연결할 수 없습니다.",
  "agent_upload_request_fail": "❌ 업로드 요청 실패: {errorMsg}",
  "agent_port_request": "🔍 포트 목록을 요청합니다...",
  "agent_port_not_available": "⚠️ 포트 목록을 가져올 수 없었습니다.",
  "agent_port_request_fail": "포트 목록 요청에 실패했습니다.",
  "agent_port_list_updated": "포트 목록 업데이트 완료 ({portCount}개)",
  "websocket_connected": "🌐 PC 에이전트에 연결되었습니다.",
  "websocket_disconnected": "🔌 PC 에이전트와의 연결이 끊어졌습니다.",
  "websocket_error": "❌ PC 에이전트 연결 오류가 발생했습니다.",
  "websocket_unavailable": "⚠️ 실시간 통신을 사용할 수 없습니다.",
  "compile_progress": "🔄 컴파일 진행: {message}",
  "upload_progress": "📤 업로드 진행: {message}",
  "agent_error": "❌ 오류: {message}",
  "agent_connected": "🔗 PC 에이전트와 연결되었습니다.",
  "agent_not_found": "⚠️ PC 에이전트를 찾을 수 없습니다. 에이전트를 설치하고 실행해주세요.",
  "agent_connection_required": "❌ PC 에이전트에 연결할 수 없습니다. 에이전트를 먼저 실행해주세요.",
  "system_ready": "✅ 정적 웹 Arduino IDE 초기화 완료",
  "system_init_fail": "⚠️ 시스템 초기화에 실패했습니다.",
  "mode_switch_block": "블록코딩 모드로 전환되었습니다.",
  "mode_switch_text": "텍스트코딩 모드로 전환되었습니다.",
  "file_save_block": "{fileName} 블록 파일이 저장되었습니다.",
  "file_save_sketch": "{fileName} 스케치 파일이 저장되었습니다.",
  "file_save_fail_block": "블록 파일 저장에 실패했습니다.",
  "file_save_fail_sketch": "스케치 파일 저장에 실패했습니다.",
  "file_load_block": "{fileName} 블록 파일이 로드되었습니다.",
  "file_load_sketch": "{fileName} 스케치 파일이 로드되었습니다.",
  "file_load_fail": "파일 로드 실패: {errorMsg}",
  "code_copy_no_content": "복사할 코드가 없습니다.",
  "code_copy_success": "코드가 클립보드에 복사되었습니다.",
  "code_copy_fail": "클립보드 복사에 실패했습니다.",
  "project_export_success": "프로젝트가 내보내기되었습니다: {fileName}",
  "project_export_fail": "프로젝트 내보내기에 실패했습니다.",
  "project_import_invalid": "올바른 프로젝트 파일(.json)을 선택해주세요.",
  "project_import_success": "프로젝트가 가져와졌습니다: {projectName}",
  "project_import_fail": "프로젝트 가져오기 실패: {errorMsg}",
  "language_change_success": "언어가 {lang}로 변경되었습니다.",
  "language_change_fail": "언어 변경에 실패했습니다: {errorMsg}",
  "agent_status_connected": "✅ PC 에이전트와 연결됨",
  "agent_status_disconnected": "⌛ PC 에이전트와 연결되지 않음",

  "BKY_OLED_HAN_SETUP": "🖥️OLED(SSD1306) 한글 디스플레이 설정X0~12, Y0~6",
  "BKY_OLED_HAN_SETUP_TIP": "한글 텍스트를 지원하는 OLED 디스플레이를 초기화합니다. 반드시 먼저 사용해야 합니다.",
  "BKY_OLED_HAN_CLEAR": "🖥️OLED 화면 지우기",
  "BKY_OLED_HAN_CLEAR_TIP": "OLED 디스플레이의 모든 내용을 지웁니다.",
  "BKY_OLED_HAN_PRINT_TEXT": "🖥️텍스트 출력 %1 위치 X %2 Y %3 %4",
  "BKY_OLED_HAN_PRINT_TEXT_TIP": "지정한 위치에 모든 종류의 텍스트(한글, 영어, 숫자, 혼합)를 출력합니다.",
  "BKY_OLED_HAN_BIG_DIGIT": "🖥️큰 숫자 표시 %1 위치 X %2 Y %3 %4",
  "BKY_OLED_HAN_BIG_DIGIT_TIP": "7-세그먼트 스타일의 큰 숫자(0-9)를 표시합니다.",
  "BKY_OLED_HAN_DRAW_BAR": "🖥️막대 그래프 그리기 X %1 Y %2 값 %3",
  "BKY_OLED_HAN_DRAW_BAR_TIP": "지정한 값(0-128)으로 가로 막대 그래프를 그립니다.",
  "BKY_OLED_HAN_MODE_NORMAL": "일반",
  "BKY_OLED_HAN_MODE_INVERSE": "반전",
  "BKY_SH1106_SETUP": "🖥️OLED(SH1106) 한글 디스플레이 설정X0~12, Y0~6",
  "BKY_SH1106_SETUP_TIP": "한글 출력이 가능한 SH1106 OLED 디스플레이를 초기화합니다",
  "BKY_SH1106_CLEAR": "🖥️OLED 화면 지우기",
  "BKY_SH1106_CLEAR_TIP": "OLED 디스플레이의 모든 내용을 지웁니다",
  "BKY_SH1106_PRINT_TEXT": "🖥️텍스트 %1 을(를) X %2 Y %3 위치에 %4 스타일로 출력",
  "BKY_SH1106_PRINT_TEXT_TIP": "지정한 위치에 한글 또는 영문 텍스트를 출력합니다",
  "BKY_SH1106_LARGE_NUMBER": "🖥️큰 숫자 %1 을(를) X %2 Y %3 위치에 %4 스타일로 표시",
  "BKY_SH1106_LARGE_NUMBER_TIP": "큰 비트맵 숫자(0-9)나 콜론(:)을 표시합니다",
  "BKY_SH1106_DRAW_BAR": "🖥️X %1 Y %2 위치에 값 %3 인 막대그래프 그리기",
  "BKY_SH1106_DRAW_BAR_TIP": "지정한 값(0-128)으로 수평 막대그래프를 그립니다",
  "BKY_SH1106_STYLE_NORMAL": "정상",
  "BKY_SH1106_STYLE_INVERSE": "반전",
  "BKY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF": "ELSEIF추가",
  "BKY_CONTROLS_IF_IF_TITLE_IF": "기존 IF문",
  "BKY_CONTROLS_IF_ELSE_TITLE_ELSE": "ELSE추가"
}